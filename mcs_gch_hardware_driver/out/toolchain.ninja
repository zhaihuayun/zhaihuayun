rule copy
  command = cp -afd ${in} ${out}
  description = COPY ${in} ${out}
rule cxx
  command = riscv32-linux-musl-g++ -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} -c ${in} -o ${out}
  description = CXX ${out}
  depfile = ${out}.d
  deps = gcc
rule cc
  command = riscv32-linux-musl-gcc -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} -c ${in} -o ${out}
  description = cross compiler ${out}
  depfile = ${out}.d
  deps = gcc
rule asm
  command = riscv32-linux-musl-gcc -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${asmflags} -c ${in} -o ${out}
  description = cross compiler ${out}
  depfile = ${out}.d
  deps = gcc
rule stamp
  command = cmd /c type nul > "${out}"
  description = STAMP ${out}
rule alink
  command = riscv32-linux-musl-ar cr ${out} @"${out}.rsp"
  description = AR ${out}
  rspfile = ${out}.rsp
  rspfile_content = ${in}
rule link
  command = riscv32-linux-musl-gcc -Wl,--start-group ${ldflags} -Wl,--whole-archive @${output_dir}/bin/${target_output_name}${output_extension}.rsp -Wl,--no-whole-archive ${libs} -Wl,--end-group -o ${output_dir}/bin/${target_output_name}${output_extension}
  description = LINK ${output_dir}/bin/${target_output_name}${output_extension}
  rspfile = ${output_dir}/bin/${target_output_name}${output_extension}.rsp
  rspfile_content = ${in}
rule solink
  command = riscv32-linux-musl-gcc -shared -Wl,--start-group ${ldflags} ${in} ${libs} -Wl,--end-group -o ${output_dir}/${target_output_name}${output_extension}
  description = SOLINK ${output_dir}/${target_output_name}${output_extension}
  rspfile = ${out}.rsp
  rspfile_content = ${in}

subninja obj/build/target.elf.ninja
