<?xml version="1.0" encoding="utf-8" standalone="no"?>
<device schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance">
  <name>3065HRPIRZ</name>
  <version>1.0</version>
  <description>3065HRPIRZ</description>
  <addressUnitBits>3065HRPIRZ registers</addressUnitBits>
  <width>32</width>
  <size>32</size>
  <resetValue>0x</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>ACMP0</name>
      <description>ACMP peripheral interface</description>
      <groupName>ACMP</groupName>
      <baseAddress>0x18300000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1c</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ACMP</name>
        <value>5</value>
      </interrupt>
      <registers>
        <register>
          <name>CMP_CTRL</name>
          <displayName>CMP_CTRL</displayName>
          <description>CMP控制。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_blking_inv_sel</name>
              <description>CMP消隐生效的电平选择。
0：消隐信号为0时，表示消隐生效；
1：消隐信号为1时，表示消隐生效。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_qual_en</name>
              <description>CMP的比较结果选择，和cmp_sync_sel共同决定比较结果来源
[cmp_sync_sel,cmp_qual_en]：
00:模拟输出的原始比较结果直接送至输出端口；
01:经过去抖后的比较结果送至输出端口；
10:经过单拍同步后的比较结果送至端口；
11:保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_blking_en</name>
              <description>消隐信号使能：
0：不使用消隐；
1：使用消隐。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_apt_sel</name>
              <description>选择来自APT屏蔽窗口的APT标号。
0x0：blanking0；
0x1：blanking1；
0x2：blanking2；
0x3：blanking3；
0x4：blanking4；
0x5：blanking5；
0x6：blanking6；
0x7：blanking7；
0x8：blanking8；
其他：无效，默认为0。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_blking_sel</name>
              <description>消隐信号来源。
0：APT 屏蔽窗口；
1：软件控制。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_blking_cfg</name>
              <description>软件的消隐信号，消隐极性受cmp_blking_inv_sel控制。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_dig_en</name>
              <description>CMP数字部分使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_sync_sel</name>
              <description>CMP的比较结果选择，和cmp_qual_en共同决定比较结果来源。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_hy_vol_sel</name>
              <description>选择比较器迟滞电压。
00：无迟滞；
01：10mV迟滞；
10：20mV迟滞；
11：30mV迟滞。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_rslt_inv</name>
              <description>比较结果输出极性选择。
0：VINP大于VINN，CMP_OUT=1；
1：VINP大于VINN，CMP_OUT=0。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_ana_en</name>
              <description>CMP电源使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMP_CTRL1</name>
          <displayName>CMP_CTRL1</displayName>
          <description>CMP控制。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_mux_p</name>
              <description>VINP选择，只能有1bit为1。
0x1：VINP[0]；
0x2：VINP[1]；
0x4：VINP[2]；
0x8：VINP[3]；
其他：保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_mux_n</name>
              <description>VINN选择，只能有1bit为1。
0x1：VINN[0]；
0x2：VINN[1]；
0x4：VINN[2]；
0x8：VINN[3]；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMP_CTRL2</name>
          <displayName>CMP_CTRL2</displayName>
          <description>CMP控制。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_blking_rslt</name>
              <description>消隐后的比较结果。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_qual_rslt</name>
              <description>去抖后的比较结果。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_ana_rslt</name>
              <description>模拟原始的比较结果。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMP_QUALI2</name>
          <displayName>CMP_QUALI2</displayName>
          <description>CMP去抖。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_qual_step</name>
              <description>去抖步进，每几个时钟采集一次结果，配置为0则每个时钟都采集结果。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_qual_sel</name>
              <description>去抖档位，连续多少比较结果相同才跳转结果，配置为0和1均表示单次结果输出。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMP_SW</name>
          <displayName>CMP_SW</displayName>
          <description>CMP输入SW控制。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmp_sw_enlv_p</name>
              <description>ACMP P端外部SW控制，与通道选择联合配置，仅在输入为IO时需要配置。
0x1：VINP[0]；
0x2：VINP[1]；
0x4：VINP[2]；
0x8：VINP[3]；
其他：保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cmp_sw_enlv_n</name>
              <description>ACMP N端外部SW控制，与通道选择联合配置，仅在输入为IO时需要配置。
0x1：VINN[0]；
0x2：VINN[1]；
0x4：VINN[2]；
0x8：VINN[3]；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="ACMP0">
      <name>ACMP1</name>
      <baseAddress>0x18301000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="ACMP0">
      <name>ACMP2</name>
      <baseAddress>0x18302000</baseAddress>
    </peripheral>
    <peripheral>
      <name>ADC0</name>
      <description>ADC peripheral interface</description>
      <groupName>ADC</groupName>
      <baseAddress>0x18000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x1d8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ADC</name>
        <value>63</value>
      </interrupt>
      <registers>
        <register>
          <name>ADC_RESULT0</name>
          <displayName>ADC_RESULT0</displayName>
          <description>ADC结果寄存器0。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result0</name>
              <description>SOC0结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT1</name>
          <displayName>ADC_RESULT1</displayName>
          <description>ADC结果寄存器1。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result1</name>
              <description>SOC1结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT2</name>
          <displayName>ADC_RESULT2</displayName>
          <description>ADC结果寄存器2。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result2</name>
              <description>SOC2结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT3</name>
          <displayName>ADC_RESULT3</displayName>
          <description>ADC结果寄存器3。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result3</name>
              <description>SOC3结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT4</name>
          <displayName>ADC_RESULT4</displayName>
          <description>ADC结果寄存器4。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result4</name>
              <description>SOC4结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT5</name>
          <displayName>ADC_RESULT5</displayName>
          <description>ADC结果寄存器5。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result5</name>
              <description>SOC5结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT6</name>
          <displayName>ADC_RESULT6</displayName>
          <description>ADC结果寄存器6。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result6</name>
              <description>SOC6结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT7</name>
          <displayName>ADC_RESULT7</displayName>
          <description>ADC结果寄存器7。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result7</name>
              <description>SOC7结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT8</name>
          <displayName>ADC_RESULT8</displayName>
          <description>ADC结果寄存器8。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result8</name>
              <description>SOC8结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT9</name>
          <displayName>ADC_RESULT9</displayName>
          <description>ADC结果寄存器9。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result9</name>
              <description>SOC9结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT10</name>
          <displayName>ADC_RESULT10</displayName>
          <description>ADC结果寄存器10。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result10</name>
              <description>SOC10结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT11</name>
          <displayName>ADC_RESULT11</displayName>
          <description>ADC结果寄存器11。</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result11</name>
              <description>SOC11结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT12</name>
          <displayName>ADC_RESULT12</displayName>
          <description>ADC结果寄存器12。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result12</name>
              <description>SOC12结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT13</name>
          <displayName>ADC_RESULT13</displayName>
          <description>ADC结果寄存器13。</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result13</name>
              <description>SOC13结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT14</name>
          <displayName>ADC_RESULT14</displayName>
          <description>ADC结果寄存器14。</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result14</name>
              <description>SOC14结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_RESULT15</name>
          <displayName>ADC_RESULT15</displayName>
          <description>ADC结果寄存器15。</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_result15</name>
              <description>SOC15结果寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_CTRL</name>
          <displayName>ADC_CTRL</displayName>
          <description>ADC控制寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x03103100</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>saen_ini_num</name>
              <description>模拟的SAEN信号在adc_pwdnz拉高后需要持续为高的时间。按照clk_adc进行计数。默认计数值49，对应持续49+1个clk_adc的时钟周期，clk_adc=40M时则表示SAEN持续1250ns。该寄存器需要在ADC_ANA_PD[adc_pwdnz]配置为1之前进行配置。且该寄存器的配置值需要大于rstn_ana_num。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rstn_ana_num</name>
              <description>模拟使能ADC_ANA_PD[adc_pwdnz]后，在拉起模拟复位的延迟计数值，按照clk_adc进行计数。默认计数值24，对应clk_adc=40M时的625ns。
延迟计算：rstn_ana_num*T(clk_adc)；
例：rstn_ana_num=24，clk_adc=40M。则对应延迟(24+1)*1/40M=625ns
需要保证延迟值至少大于400ns。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_cal_en</name>
              <description>ADC校准使能。
0: 不校准。
1: 根据校准模式。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc_cal_mode</name>
              <description>校准模式选择。
adc_cal_en = 0时：
0：正常工作状态；
其他：保留。
adc_cal_en=1时：
0：offset校准；
1：电容校准；
其他：保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>one_shot</name>
              <description>阻塞轮询模式使能。
0：不使能。
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_STATUS</name>
          <displayName>ADC_STATUS</displayName>
          <description>ADC工作状态寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rr_pointer</name>
              <description>轮询指针。该指针保持上一个转换完的轮询SOC，用于决定接下来的轮询SOC。
0：SOC0为上一个转换的轮询SOC，SOC1有最高优先级。
1：SOC1为上一个转换的轮询SOC，SOC2有最高优先级。
…
15：SOC15为上一个转换的轮询SOC，SOC0有最高优先级。
16：轮询指针复位、或写轮询指针时置为该值，SOC0有最高优先级。在写轮询指针时，若当前正在转换，则等转换结束后生效。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_bsy</name>
              <description>对应输出的 adc_adst。
ADC 状态寄存器，在有 soc_flg 拉高时置1，在所有SOC均转换结束后置 0。
0： ADC 允许下一次转换；
1： ADC 正在进行一次转换。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_bsy_chn</name>
              <description>ADC繁忙通道，adc_bsy=1时，指向当前转换的SOC，当adc_bsy=0时，保持之前转换的SOC。
0x0：SOC0正在转换，或为上一个转换的通道；
0x1：SOC1正在转换，或为上一个转换的通道；
…
0xF：SOC15正在转换，或为上一个转换的通道。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC_PRICTL_SET</name>
          <displayName>ADC_SOC_PRICTL_SET</displayName>
          <description>ADC轮询指针置位。</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rr_set</name>
              <description>轮询指针软件复位，软件置1后，ADC_STATUS[rr_pointer]置为16。表示SOC0优先级最高。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SAMPLE_MODE</name>
          <displayName>ADC_SAMPLE_MODE</displayName>
          <description>ADC采样模式控制。</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>simul_en7</name>
              <description>SOC15，SOC14的采样模式选择。
0：SOC15，SOC14独立，各自完成采样。
1：SOC15，SOC14为同步采样模式。在触发后，SOC14和SOC15同时完成采样/保持，然后SOC14先转换并将转换结果至于adc_result14，SOC15后转换并将转换结果至于adc_result15。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en6</name>
              <description>SOC13,SOC12的采样模式选择。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en5</name>
              <description>SOC11,SOC10的采样模式选择。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en4</name>
              <description>SOC9,SOC8的采样模式选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en3</name>
              <description>SOC7,SOC6的采样模式选择。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en2</name>
              <description>SOC5,SOC4的采样模式选择。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en1</name>
              <description>SOC3,SOC2的采样模式选择。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>simul_en0</name>
              <description>SOC1,SOC0的采样模式选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT_FLAG</name>
          <displayName>ADC_INT_FLAG</displayName>
          <description>ADC中断状态寄存器。</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int4_flag</name>
              <description>ADC中断寄存器4，写1清。
0：没有中断产生；
1：中断寄存器4存在中断产生。
在连续转换模式下，中断将以脉冲形式送出，并且即使中断寄存器4中存在未清除的中断，仍可产生新的中断。
在非连续模式下，在每次转换结束后产生中断，将中断寄存器4置为1，保持到软件清除中断。在软件清除中断前不会出现新的中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int3_flag</name>
              <description>ADC中断寄存器3。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int2_flag</name>
              <description>ADC中断寄存器2。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int1_flag</name>
              <description>ADC中断寄存器1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_EOC_FLAG</name>
          <displayName>ADC_EOC_FLAG</displayName>
          <description>ADC eoc状态寄存器。</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>eoc15_flag</name>
              <description>ADC eoc15状态寄存器，写1清。
0：自上次清除后，没有eoc产生；
1：自上次清除后，存在eoc产生。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc14_flag</name>
              <description>ADC eoc14寄存器。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc13_flag</name>
              <description>ADC eoc13寄存器。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc12_flag</name>
              <description>ADC eoc12寄存器。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc11_flag</name>
              <description>ADC eoc11寄存器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc10_flag</name>
              <description>ADC eoc10寄存器。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc9_flag</name>
              <description>ADC eoc9寄存器。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc8_flag</name>
              <description>ADC eoc8寄存器。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc7_flag</name>
              <description>ADC eoc7寄存器。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc6_flag</name>
              <description>ADC eoc6寄存器。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc5_flag</name>
              <description>ADC eoc5寄存器。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc4_flag</name>
              <description>ADC eoc4寄存器。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc3_flag</name>
              <description>ADC eoc3寄存器。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc2_flag</name>
              <description>ADC eoc2寄存器。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc1_flag</name>
              <description>ADC eoc1寄存器。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc0_flag</name>
              <description>ADC eoc0寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT_OVFL</name>
          <displayName>ADC_INT_OVFL</displayName>
          <description>ADC中断溢出寄存器。</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_req_ovflg</name>
              <description>dma请求溢出标志，写1清。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int4_ovflg</name>
              <description>ADC中断溢出寄存器4，写1清。
0：没有中断溢出产生；
1：中断寄存器4存在中断溢出产生。
若在未清除中断时，再出现新的中断，则会产生中断溢出。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int3_ovflg</name>
              <description>ADC中断溢出寄存器3。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int2_ovflg</name>
              <description>ADC中断溢出寄存器2。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int1_ovflg</name>
              <description>ADC中断溢出寄存器1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_EOC_OVFL</name>
          <displayName>ADC_EOC_OVFL</displayName>
          <description>ADC eoc溢出寄存器。</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>eoc15_ovflg</name>
              <description>ADC eoc15溢出状态寄存器，写1清。
0：自上次清除后，没有eoc溢出；
1：自上次清除后，存在eoc溢出。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc14_ovflg</name>
              <description>ADC eoc14溢出寄存器。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc13_ovflg</name>
              <description>ADC eoc13溢出寄存器。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc12_ovflg</name>
              <description>ADC eoc12溢出寄存器。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc11_ovflg</name>
              <description>ADC eoc11溢出寄存器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc10_ovflg</name>
              <description>ADC eoc10溢出寄存器。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc9_ovflg</name>
              <description>ADC eoc9溢出寄存器。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc8_ovflg</name>
              <description>ADC eoc8溢出寄存器。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc7_ovflg</name>
              <description>ADC eoc7溢出寄存器。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc6_ovflg</name>
              <description>ADC eoc6溢出寄存器。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc5_ovflg</name>
              <description>ADC eoc5溢出寄存器。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc4_ovflg</name>
              <description>ADC eoc4溢出寄存器。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc3_ovflg</name>
              <description>ADC eoc3溢出寄存器。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc2_ovflg</name>
              <description>ADC eoc2溢出寄存器。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc1_ovflg</name>
              <description>ADC eoc1溢出寄存器。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>eoc0_ovflg</name>
              <description>ADC eoc0溢出寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT1_CTRL</name>
          <displayName>ADC_INT1_CTRL</displayName>
          <description>ADC中断1控制寄存器。</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int1_eoc_en</name>
              <description>可以触发中断1的eoc使能。
对应bit为0：该eoc不能触发中断1；
对应bit为1：该eoc可以触发中断1。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int1_offset</name>
              <description>int1_pos为0时，不论int1_offset为何值，均在转换结束时产生中断；
int1_pos为1时，在采样/保持信号下降沿偏移int1_offset后产生中断；
当int1_offset大于采样/保持信号下降沿到转换结束的延迟时，中断应在转换结束时产生。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int1_oven</name>
              <description>中断1的溢出标志的使能。
0：中断1不产生溢出；
1：中断1会产生溢出。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int1_pos</name>
              <description>提前中断模式。
0：不使能；
1：使能。
一次采样包括采样和转换两个过程，提前中断表示，在采样结束偏移。int1_offset值后，产生中断；正常中断则在转换结束后产生中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int1_cont</name>
              <description>中断1脉冲使能。
0：表示输出为电平中断；
1：表示输出为脉冲中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int1_en</name>
              <description>中断1使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT2_CTRL</name>
          <displayName>ADC_INT2_CTRL</displayName>
          <description>ADC中断2控制寄存器。</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int2_eoc_en</name>
              <description>可以触发中断2的eoc使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int2_offset</name>
              <description>中断2提前中断偏移值。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int2_oven</name>
              <description>中断2的溢出标志的使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int2_pos</name>
              <description>提前中断模式。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int2_cont</name>
              <description>中断2脉冲使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int2_en</name>
              <description>中断2使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT3_CTRL</name>
          <displayName>ADC_INT3_CTRL</displayName>
          <description>ADC中断3控制寄存器。</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int3_eoc_en</name>
              <description>可以触发中断3的eoc使能 。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int3_offset</name>
              <description>中断3提前中断偏移值。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int3_oven</name>
              <description>中断3的溢出标志的使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int3_pos</name>
              <description>提前中断模式。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int3_cont</name>
              <description>中断3脉冲使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int3_en</name>
              <description>中断3使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT4_CTRL</name>
          <displayName>ADC_INT4_CTRL</displayName>
          <description>ADC中断4控制寄存器。</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int4_eoc_en</name>
              <description>可以触发中断4的eoc使能 。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int4_offset</name>
              <description>中断4提前中断偏移值。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int4_oven</name>
              <description>中断4的溢出标志的使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int4_pos</name>
              <description>提前中断模式。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int4_cont</name>
              <description>中断4脉冲使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int4_en</name>
              <description>中断4使能。
同ADC_INT1_CTRL描述。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_INT_OFFSET</name>
          <displayName>ADC_INT_OFFSET</displayName>
          <description>ADC DMA请求寄存器。</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_int_sel</name>
              <description>DMA中断源选择。
0x0：eoc0；
0x1：eoc1；
...
0xF：eoc15。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_brst_req_sel</name>
              <description>DMA BURST请求使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_sing_req_sel</name>
              <description>DMA SINGLE请求使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC_PRICTL</name>
          <displayName>ADC_SOC_PRICTL</displayName>
          <description>ADC优先级控制。</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc_priority</name>
              <description>高优先级配置值，优先级配置只能有如下16种配置方法，其他方法非法。
0x0000：所有SOC均为轮询SOC；
0x0001：SOC0有高优先级，SOC1-SOC15为轮询SOC；
0x0003：SOC0、SOC1有高优先级，SOC2~SOC15为轮询SOC；
…
0x7FFF：SOC0-SOC14有高优先级，SOC15为轮询SOC；
0xFFFF：所有SOC有高优先级；
其他：非法配置。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOFT_TRIG</name>
          <displayName>ADC_SOFT_TRIG</displayName>
          <description>ADC软件触发。</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc15_soft_trig</name>
              <description>SOC15软件触发，读0。
0：无软件触发；
1：SOC15软件触发，脉冲形式。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_soft_trig</name>
              <description>SOC14软件触发。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_soft_trig</name>
              <description>SOC13软件触发。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_soft_trig</name>
              <description>SOC12软件触发。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_soft_trig</name>
              <description>SOC11软件触发。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_soft_trig</name>
              <description>SOC10软件触发。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_soft_trig</name>
              <description>SOC9软件触发。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_soft_trig</name>
              <description>SOC8软件触发。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_soft_trig</name>
              <description>SOC7软件触发。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_soft_trig</name>
              <description>SOC6软件触发。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_soft_trig</name>
              <description>SOC5软件触发。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_soft_trig</name>
              <description>SOC4软件触发。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_soft_trig</name>
              <description>SOC3软件触发。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_soft_trig</name>
              <description>SOC2软件触发。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_soft_trig</name>
              <description>SOC1软件触发。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_soft_trig</name>
              <description>SOC0软件触发。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_TRIG_OVFL</name>
          <displayName>ADC_TRIG_OVFL</displayName>
          <description>ADC触发溢出寄存器。</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc15_trig_ovflg</name>
              <description>SOC15触发溢出寄存器，写1清。
0：无触发溢出；
1：SOC15触发溢出。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_trig_ovflg</name>
              <description>SOC14触发溢出寄存器。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_trig_ovflg</name>
              <description>SOC13触发溢出寄存器。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_trig_ovflg</name>
              <description>SOC12触发溢出寄存器。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_trig_ovflg</name>
              <description>SOC11触发溢出寄存器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_trig_ovflg</name>
              <description>SOC10触发溢出寄存器。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_trig_ovflg</name>
              <description>SOC9触发溢出寄存器。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_trig_ovflg</name>
              <description>SOC8触发溢出寄存器。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_trig_ovflg</name>
              <description>SOC7触发溢出寄存器。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_trig_ovflg</name>
              <description>SOC6触发溢出寄存器。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_trig_ovflg</name>
              <description>SOC5触发溢出寄存器。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_trig_ovflg</name>
              <description>SOC4触发溢出寄存器。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_trig_ovflg</name>
              <description>SOC3触发溢出寄存器。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_trig_ovflg</name>
              <description>SOC2触发溢出寄存器。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_trig_ovflg</name>
              <description>SOC1触发溢出寄存器。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_trig_ovflg</name>
              <description>SOC0触发溢出寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC0_CTRL</name>
          <displayName>ADC_SOC0_CTRL</displayName>
          <description>ADC SOC0寄存器。</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc0_sh_hold</name>
              <description>SOC的电容充电后的保持时间长度，值范围2~28（其余值未定义）。配置为2则表示S/H电路持续保持2个clk_adc的时钟。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc0_rslt_rclr</name>
              <description>SOC0结果寄存器，是否读清使能（可配合提前中断使用）。
0：读清不使能；
1：读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_acqps</name>
              <description>SOC0电容充电时间，范围3-127，对应时间：4-128个clk_adc。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_int_trig_sel</name>
              <description>SOC0反馈的中断触发配置。
00：不使用中断触发；
01：中断1触发SOC0；
10：中断2触发SOC0；
11：中断3触发SOC0。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_trig_sel</name>
              <description>SOC0触发器选择。
0x00：无接口上的触发，仅能通过软件触发。
0x01：trig_in_1（apt0_adca）；
0x02：trig_in_2（apt0_adcb）；
0x03：trig_in_3（apt1_adca）；
0x04：trig_in_4（apt1_adcb）；
0x05：trig_in_5（0apt2_adca）；
0x06：trig_in_6（0apt2_adcb）；
0x07：trig_in_7（apt3_adca）；
0x08：trig_in_8（apt3_adcb）；
0x09：trig_in_9（apt4_adca）；
0x0A：trig_in_10（apt4_adcb）；
0x0B：trig_in_11（apt5_adca）；
0x0C：trig_in_12（apt5_adcb）；
0x0D：trig_in_13（apt6_adca）；
0x0E：trig_in_14（apt6_adcb）；
0x0F：trig_in_15（apt7_adca）；
0x10：trig_in_16（apt7_adcb）；
0x11：trig_in_17（apt8_adca）；
0x12：trig_in_18（apt8_adcb）；
0x13：trig_in_19（timer0）；
0x14：trig_in_20（timer1）；
0x15：trig_in_21（timer2）；
0x16：trig_in_22（timer3）；
0x17：trig_in_23（GPIO）；
其他：非法。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc0_chsel</name>
              <description>SOC0通道选择（同步采样时，相邻两个SOC通道应配置到A/B两个通道组）。
0x0：选择模拟通道ADCINA0；
0x1：选择模拟通道ADCINA1；
…
0x7：选择模拟通道ADCINA7；
0x8：选择模拟通道ADCINB0；
0x9：选择模拟通道ADCINB1；
…
0xF：选择模拟通道ADCINB7。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC1_CTRL</name>
          <displayName>ADC_SOC1_CTRL</displayName>
          <description>ADC SOC1寄存器。</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc1_sh_hold</name>
              <description>SOC1的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc1_rslt_rclr</name>
              <description>SOC1结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_acqps</name>
              <description>SOC1电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_int_trig_sel</name>
              <description>SOC1反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_trig_sel</name>
              <description>SOC1触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc1_chsel</name>
              <description>SOC1通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC2_CTRL</name>
          <displayName>ADC_SOC2_CTRL</displayName>
          <description>ADC SOC2寄存器。</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc2_sh_hold</name>
              <description>SOC2的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc2_rslt_rclr</name>
              <description>SOC2结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_acqps</name>
              <description>SOC2电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_int_trig_sel</name>
              <description>SOC2反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_trig_sel</name>
              <description>SOC2触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc2_chsel</name>
              <description>SOC2通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC3_CTRL</name>
          <displayName>ADC_SOC3_CTRL</displayName>
          <description>ADC SOC3寄存器。</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc3_sh_hold</name>
              <description>SOC3的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc3_rslt_rclr</name>
              <description>SOC3结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_acqps</name>
              <description>SOC3电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_int_trig_sel</name>
              <description>SOC3反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_trig_sel</name>
              <description>SOC3触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc3_chsel</name>
              <description>SOC3通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC4_CTRL</name>
          <displayName>ADC_SOC4_CTRL</displayName>
          <description>ADC SOC4寄存器。</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc4_sh_hold</name>
              <description>SOC4的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc4_rslt_rclr</name>
              <description>SOC4结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_acqps</name>
              <description>SOC4电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_int_trig_sel</name>
              <description>SOC4反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_trig_sel</name>
              <description>SOC4触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc4_chsel</name>
              <description>SOC4通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC5_CTRL</name>
          <displayName>ADC_SOC5_CTRL</displayName>
          <description>ADC SOC5寄存器。</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc5_sh_hold</name>
              <description>SOC5的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc5_rslt_rclr</name>
              <description>SOC5结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_acqps</name>
              <description>SOC5电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_int_trig_sel</name>
              <description>SOC5反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_trig_sel</name>
              <description>SOC5触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc5_chsel</name>
              <description>SOC5通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC6_CTRL</name>
          <displayName>ADC_SOC6_CTRL</displayName>
          <description>ADC SOC6寄存器。</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc6_sh_hold</name>
              <description>SOC6的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc6_rslt_rclr</name>
              <description>SOC6结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_acqps</name>
              <description>SOC6电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_int_trig_sel</name>
              <description>SOC6反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_trig_sel</name>
              <description>SOC6触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc6_chsel</name>
              <description>SOC6通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC7_CTRL</name>
          <displayName>ADC_SOC7_CTRL</displayName>
          <description>ADC SOC7寄存器。</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc7_sh_hold</name>
              <description>SOC7的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc7_rslt_rclr</name>
              <description>SOC7结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_acqps</name>
              <description>SOC7电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_int_trig_sel</name>
              <description>SOC7反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_trig_sel</name>
              <description>SOC7触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc7_chsel</name>
              <description>SOC7通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC8_CTRL</name>
          <displayName>ADC_SOC8_CTRL</displayName>
          <description>ADC SOC8寄存器。</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc8_sh_hold</name>
              <description>SOC8的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc8_rslt_rclr</name>
              <description>SOC8结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_acqps</name>
              <description>SOC8电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_int_trig_sel</name>
              <description>SOC8反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_trig_sel</name>
              <description>SOC8触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc8_chsel</name>
              <description>SOC8通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC9_CTRL</name>
          <displayName>ADC_SOC9_CTRL</displayName>
          <description>ADC SOC9寄存器。</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc9_sh_hold</name>
              <description>SOC9的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc9_rslt_rclr</name>
              <description>SOC9结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_acqps</name>
              <description>SOC9电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_int_trig_sel</name>
              <description>SOC9反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_trig_sel</name>
              <description>SOC9触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc9_chsel</name>
              <description>SOC9通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC10_CTRL</name>
          <displayName>ADC_SOC10_CTRL</displayName>
          <description>ADC SOC10寄存器。</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc10_sh_hold</name>
              <description>SOC10的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc10_rslt_rclr</name>
              <description>SOC10结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_acqps</name>
              <description>SOC10电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_int_trig_sel</name>
              <description>SOC10反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_trig_sel</name>
              <description>SOC10触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc10_chsel</name>
              <description>SOC10通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC11_CTRL</name>
          <displayName>ADC_SOC11_CTRL</displayName>
          <description>ADC SOC11寄存器。</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc11_sh_hold</name>
              <description>SOC11的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc11_rslt_rclr</name>
              <description>SOC11结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_acqps</name>
              <description>SOC11电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_int_trig_sel</name>
              <description>SOC11反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_trig_sel</name>
              <description>SOC11触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc11_chsel</name>
              <description>SOC11通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC12_CTRL</name>
          <displayName>ADC_SOC12_CTRL</displayName>
          <description>ADC SOC12寄存器。</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc12_sh_hold</name>
              <description>SOC12的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc12_rslt_rclr</name>
              <description>SOC12结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_acqps</name>
              <description>SOC12电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_int_trig_sel</name>
              <description>SOC12反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_trig_sel</name>
              <description>SOC12触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc12_chsel</name>
              <description>SOC12通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC13_CTRL</name>
          <displayName>ADC_SOC13_CTRL</displayName>
          <description>ADC SOC13寄存器。</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc13_sh_hold</name>
              <description>SOC13的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc13_rslt_rclr</name>
              <description>SOC13结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_acqps</name>
              <description>SOC13电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_int_trig_sel</name>
              <description>SOC13反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_trig_sel</name>
              <description>SOC13触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc13_chsel</name>
              <description>SOC13通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC14_CTRL</name>
          <displayName>ADC_SOC14_CTRL</displayName>
          <description>ADC SOC14寄存器。</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc14_sh_hold</name>
              <description>SOC14的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc14_rslt_rclr</name>
              <description>SOC14结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_acqps</name>
              <description>SOC14电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_int_trig_sel</name>
              <description>SOC14反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_trig_sel</name>
              <description>SOC14触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc14_chsel</name>
              <description>SOC14通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SOC15_CTRL</name>
          <displayName>ADC_SOC15_CTRL</displayName>
          <description>ADC SOC15寄存器。</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <resetValue>0x00201800</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc15_sh_hold</name>
              <description>SOC15的电容充电后的保持时间长度，值范围2-28，（其余值未定义）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soc15_rslt_rclr</name>
              <description>SOC15结果寄存器读清使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc15_acqps</name>
              <description>SOC15电容充电时间。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc15_int_trig_sel</name>
              <description>SOC15反馈的中断触发配置。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc15_trig_sel</name>
              <description>SOC15触发器选择。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>soc15_chsel</name>
              <description>SOC15通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB0_CTRL</name>
          <displayName>ADC_PPB0_CTRL</displayName>
          <description>ADC后处理模块0配置。</description>
          <addressOffset>0xc4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb0_en</name>
              <description>PPB0使能。
0：不使能；
1：使能PPB0。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppb0_ch_sel</name>
              <description>PPB0通道选择。
0x0：PPB0选择SOC0；
0x1：PPB0选择SOC1；
…
0xF：PPB0选择SOC15。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB1_CTRL</name>
          <displayName>ADC_PPB1_CTRL</displayName>
          <description>ADC后处理模块1配置。</description>
          <addressOffset>0xc8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb1_en</name>
              <description>PPB1使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppb1_ch_sel</name>
              <description>PPB1通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB2_CTRL</name>
          <displayName>ADC_PPB2_CTRL</displayName>
          <description>ADC后处理模块2配置。</description>
          <addressOffset>0xd0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb2_en</name>
              <description>PPB2使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppb2_ch_sel</name>
              <description>PPB2通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB3_CTRL</name>
          <displayName>ADC_PPB3_CTRL</displayName>
          <description>ADC后处理模块3配置。</description>
          <addressOffset>0xd4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb3_en</name>
              <description>PPB3使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppb3_ch_sel</name>
              <description>PPB3通道选择。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB0_PPB1_DLY</name>
          <displayName>ADC_PPB0_PPB1_DLY</displayName>
          <description>ADC后处理采样延迟。</description>
          <addressOffset>0xd8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ppb1_dly_stamp</name>
              <description>后处理模块1的采样延迟。
该延迟表示从对应soc_flg上升沿，到下降沿的计数值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb0_dly_stamp</name>
              <description>后处理模块0的采样延迟。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_PPB2_PPB3_DLY</name>
          <displayName>ADC_PPB2_PPB3_DLY</displayName>
          <description>ADC后处理采样延迟。</description>
          <addressOffset>0xdc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ppb3_dly_stamp</name>
              <description>后处理模块3的采样延迟。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppb2_dly_stamp</name>
              <description>后处理模块2的采样延迟。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_ANA_CTRL</name>
          <displayName>ADC_ANA_CTRL</displayName>
          <description>模拟配置。</description>
          <addressOffset>0xe0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_ana_dish</name>
              <description>OFFSET校准控制。
00：不校准；
01：校准ADC CORE；
10：校准ADC CORE和SH电路；
11：保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc_ana_gsh1</name>
              <description>S/H1衰减。
00：gain=1；
01：gain=0.75；
10：gain=0.6；
11：保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc_ana_gsh0</name>
              <description>S/H0衰减。
00：gain=1；
01：gain=0.75；
10：gain=0.6；
11：保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ana_logic_mode</name>
              <description>ADC模拟工作模式。
0：正常工作模式；
1：电容校准模式。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SAR_CTRL0</name>
          <displayName>ADC_SAR_CTRL0</displayName>
          <description>SAR控制和电容校准控制寄存器。</description>
          <addressOffset>0xe4</addressOffset>
          <size>32</size>
          <resetValue>0x00000048</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cap_start_index</name>
              <description>校准电容选择。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_SAR_CTRL3</name>
          <displayName>ADC_SAR_CTRL3</displayName>
          <description>SAR控制和电容校准控制寄存器。</description>
          <addressOffset>0xf0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cap_start</name>
              <description>电容校准触发。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_OFF_CALI1</name>
          <displayName>ADC_OFF_CALI1</displayName>
          <description>ADC offset校准。</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ofst_digcal_sel</name>
              <description>数字的offset输入源选择，不能与ofst_ana_sel同时配1。
0：软件配置值；
1：由逻辑自动产生的offset值。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ofst_digcal_cfg</name>
              <description>fix(1,14,1)软件配置的数字offset。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ofst_ana_sel</name>
              <description>模拟的offset输入源选择，不能与ofst_digcal_sel同时配1。
0：软件配置值；
1：由逻辑自动产生的offset值。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ofst_calana_cfg</name>
              <description>软件配置的模拟offset。
0x01：+0.5LSB；
...
0x1F：+15.5LSB；
0x3F：-0.5LSB；
...
0xA1：-15.5LSB；
默认：0x00。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_OFF_CALI2</name>
          <displayName>ADC_OFF_CALI2</displayName>
          <description>ADC offset校准。</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_avg_start</name>
              <description>开始一次offset的均值计算。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_OFF_CALI4</name>
          <displayName>ADC_OFF_CALI4</displayName>
          <description>ADC offset校准。</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_ofst_calib_error</name>
              <description>offset校准错误标志。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_ofst_calib_done</name>
              <description>offset校准结束标志。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ofst_calidig</name>
              <description>fix(1, 14, 1)数字offset值。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ofst_caliana</name>
              <description>模拟offset值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_CAP_CALI0</name>
          <displayName>ADC_CAP_CALI0</displayName>
          <description>ADC电容校准寄存器。</description>
          <addressOffset>0x10c</addressOffset>
          <size>32</size>
          <resetValue>0x001FFFC8</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cap_cal1_finish</name>
              <description>电容校准完成标志。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_weight_ini_sel</name>
              <description>权重选择：
0：默认值；
1：逻辑校准值。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_DATA_PROCS0</name>
          <displayName>ADC_DATA_PROCS0</displayName>
          <description>ADC数据处理。</description>
          <addressOffset>0x1cc</addressOffset>
          <size>32</size>
          <resetValue>0x00002000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gain_digcal_cfg</name>
              <description>fix(0, 13, 12)软件配置校准增益数值。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_ANA_PD</name>
          <displayName>ADC_ANA_PD</displayName>
          <description>ADC模拟电源使能。</description>
          <addressOffset>0x1d4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_pwdnz</name>
              <description>ADC模拟电源。
0：关断；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="ADC0">
      <name>ADC1</name>
      <baseAddress>0x18001000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="ADC0">
      <name>ADC2</name>
      <baseAddress>0x18002000</baseAddress>
    </peripheral>
    <peripheral>
      <name>APT0</name>
      <description>APT_REG peripheral interface</description>
      <groupName>APT</groupName>
      <baseAddress>0x14A00000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x734</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>APT_REG</name>
        <value>65</value>
      </interrupt>
      <registers>
        <register>
          <name>VER_INFO</name>
          <displayName>VER_INFO</displayName>
          <description>版本信息寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>main_version</name>
              <description>主版本号。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sub_version</name>
              <description>子版本号。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_MODE</name>
          <displayName>TC_MODE</displayName>
          <description>计数模式寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x20000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_emu_stop</name>
              <description>CPU debug模式，APT停止的方式。注意，如果停止APT，那么在CPU debug模式下，整个APT都会停止工作，包括输出控制功能。
0x：不停止；
10：停止分频计数器（DIVCNT）和时基计数器（TCCNT）；
11：停止APT。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_div_fac</name>
              <description>分频系数。
分频倍数 =分频系数 +1。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_mode</name>
              <description>时基计数器（TCCNT）的工作模式。
00：递增计数；
01：递减计数；
10：先增后减计数；
11：冻结。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_PHS</name>
          <displayName>TC_PHS</displayName>
          <description>计数相位控制寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_cnt_dir</name>
              <description>当 APTCNTSYNC 有效时，更新时基计数器（TCCNT）的计数方向，仅在先增后减
计数模式有效。
0：递减；
1：递增。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_div_phs</name>
              <description>当 APTCNTSYNC 有效时，更新分频计数器（DIVCNT）的计数值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_phs</name>
              <description>当 APTCNTSYNC 有效时，更新时基计数器（TCCNT）的计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_OVRID</name>
          <displayName>TC_OVRID</displayName>
          <description>计数器初始化寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_cnt_ovrid_en</name>
              <description>时基计数器（TCCNT）和分频计数器（DIVCNT）的初始化使能。
0：无效；
1：初始化时基计数器（TCCNT）和分频计数器（DIVCNT）的计数值。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_div_ovrid</name>
              <description>初始化分频计数(DIVCNT）的计数值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_ovrid</name>
              <description>初始化时基计数（TCCNT）的计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_PRD</name>
          <displayName>TC_PRD</displayName>
          <description>计数周期寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00002710</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_prd</name>
              <description>时基计数器（TCCNT）的计数周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_REFA</name>
          <displayName>TC_REFA</displayName>
          <description>计数参考值A寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_refal</name>
              <description>分频计数器（DIVCNT）的参考值A，应当小于或等于分频系数。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_refah</name>
              <description>时基计数器（TCCNT）的参考值 A，应当小于或等于计数周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_REFB</name>
          <displayName>TC_REFB</displayName>
          <description>计数参考值B寄存器。</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_refbl</name>
              <description>分频计数器（DIVCNT）的参考值B，应当小于或等于分频系数。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_refbh</name>
              <description>时基计数器（TCCNT）的参考值B，应当小于或等于计数周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_REFC</name>
          <displayName>TC_REFC</displayName>
          <description>计数参考值C寄存器。</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_refcl</name>
              <description>分频计数器（DIVCNT）的参考值C，应当小于或等于分频系数。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_refch</name>
              <description>时基计数器（TCCNT）的参考值C，应当小于或等于计数周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_REFD</name>
          <displayName>TC_REFD</displayName>
          <description>计数参考值D寄存器。</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cnt_refdl</name>
              <description>分频计数器（DIVCNT）的参考值D，应当小于或等于分频系数。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cnt_refdh</name>
              <description>时基计数器（TCCNT）的参考值D，应当小于或等于计数周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_BUF_EN</name>
          <displayName>TC_BUF_EN</displayName>
          <description>计数器缓存使能寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_refd_gld_en</name>
              <description>TC_REFD 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refd_buf_en</name>
              <description>TC_REFD 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_gld_en</name>
              <description>TC_REFC 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_buf_en</name>
              <description>TC_REFC 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_gld_en</name>
              <description>TC_REFB 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_buf_en</name>
              <description>TC_REFB 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_gld_en</name>
              <description>TC_REFA 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_buf_en</name>
              <description>TC_REFA 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_prd_gld_en</name>
              <description>TC_PRD 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_prd_buf_en</name>
              <description>TC_PRD 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_PRD_LOAD</name>
          <displayName>TC_PRD_LOAD</displayName>
          <description>计数周期寄存器独立加载触发信号选择寄存器。</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00000011</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_prd_ld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能TC_PRD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_prd_ld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能TC_PRD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_prd_ld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能TC_PRD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_prd_ld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能TC_PRD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_REF_LOAD</name>
          <displayName>TC_REF_LOAD</displayName>
          <description>计数参考值寄存器独立加载触发信号选择寄存器。</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x11111111</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_refd_ld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能TC_REFD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refd_ld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能TC_REFD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refd_ld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能TC_REFD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refd_ld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能TC_REFD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refd_ld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能TC_REFD 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_refc_ld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能TC_REFC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_ld_b1en</name>
              <description>当选择 EMEVTB1 有效时，是否使能TC_REFC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_ld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能TC_REFC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_ld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能TC_REFC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refc_ld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能TC_REFC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_refb_ld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能TC_REFB 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_ld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能TC_REFB 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_ld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能TC_REFB 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_ld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能TC_REFB 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refb_ld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能TC_REFB 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_refa_ld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能TC_REFA 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_ld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能TC_REFA 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_ld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能TC_REFA 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_ld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能TC_REFA 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_refa_ld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能TC_REFA 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TC_STS</name>
          <displayName>TC_STS</displayName>
          <description>计数状态寄存器。</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x80000000</resetValue>
          <fields>
            <field>
              <name>ro_cnt_dir</name>
              <description>时基计数器（TCCNT）的当前计数方向。
0：递减计数；
1：递增计数。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_div_cnt</name>
              <description>分频计数器（DIVCNT）的当前计数值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_cnt_val</name>
              <description>时基计数器（TCCNT）的当前计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_ACT_A</name>
          <displayName>PG_ACT_A</displayName>
          <description>PG_PWMA 动作配置寄存器。</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pga_act_evtc2_dec</name>
              <description>AEVTC2 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_evtc2_inc</name>
              <description>AEVTC2 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_evtc1_dec</name>
              <description>AEVTC1 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_evtc1_inc</name>
              <description>AEVTC1 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refd_dec</name>
              <description>CNT_REFD 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refd_inc</name>
              <description>CNT_REFD 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refc_dec</name>
              <description>CNT_REFC 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refc_inc</name>
              <description>CNT_REFC 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refb_dec</name>
              <description>CNT_REFB 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refb_inc</name>
              <description>CNT_REFB 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refa_dec</name>
              <description>CNT_REFA 有效且 TCCNT 计数方向递减时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_refa_inc</name>
              <description>CNT_REFA 有效且 TCCNT 计数方向递增时， PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_prd</name>
              <description>CNT_PRD 有效时，PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_zro</name>
              <description>CNT_ZERO 有效时,PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_ACT_B</name>
          <displayName>PG_ACT_B</displayName>
          <description>PG_PWMB 动作配置寄存器。</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pgb_act_evtc2_dec</name>
              <description>BEVTC2有效且TCCNT计数方向递减时，PG_PWMB的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_evtc2_inc</name>
              <description>BEVTC2有效且TCCNT计数方向递增时，PG_PWMB的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_evtc1_dec</name>
              <description>BEVTC1有效且TCCNT计数方向递减时，PG_PWMB的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_evtc1_inc</name>
              <description>BEVTC1有效且TCCNT计数方向递增时，PG_PWMB的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refd_dec</name>
              <description>CNT_REFD 有效且 TCCNT 计数方向递减时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refd_inc</name>
              <description>CNT_REFD 有效且 TCCNT 计数方向递增时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refc_dec</name>
              <description>CNT_REFC 有效且 TCCNT 计数方向递减时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refc_inc</name>
              <description>CNT_REFC 有效且 TCCNT 计数方向递增时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refb_dec</name>
              <description>CNT_REFB 有效且 TCCNT 计数方向递减时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refb_inc</name>
              <description>CNT_REFB 有效且 TCCNT 计数方向递增时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refa_dec</name>
              <description>CNT_REFA 有效且 TCCNT 计数方向递减时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_refa_inc</name>
              <description>CNT_REFA 有效且 TCCNT 计数方向递增时， PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_prd</name>
              <description>CNT_PRD 有效时，PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_zro</name>
              <description>CNT_ZERO 有效时,PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_ACT_FRC</name>
          <displayName>PG_ACT_FRC</displayName>
          <description>强制动作配置寄存器。</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pgb_evt_frc</name>
              <description>软件强制 PG_PWMB 动作，每次写 1 产生一次PG_PWMB 动作，然后自动清零。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_act_evt_frc</name>
              <description>软件强制 PG_PWMB 动作有效时，PG_PWMB 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pga_evt_frc</name>
              <description>软件强制 PG_PWMA 动作，每次写 1 产生一次PG_PWMA 动作，然后自动清零。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_act_evt_frc</name>
              <description>软件强制 PG_PWMA 动作有效时，PG_PWMA 的动作。
00：无影响；
01：置为低电平；
10：置为高电平；
11：翻转电平。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_OUT_FRC</name>
          <displayName>PG_OUT_FRC</displayName>
          <description>强制输出配置寄存器。</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pgb_frc_en</name>
              <description>PG_PWMB 软件强制输出使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_frc_act</name>
              <description>PG_PWMB 软件强制输出使能时，PG_PWMB 的输出状态。
00：锁定电平；
01：置为低电平；
10：置为高电平；
11：保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pga_frc_en</name>
              <description>PG_PWMA 软件强制输出使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_frc_act</name>
              <description>PG_PWMA 软件强制输出使能时，PG_PWMA 的输出状态。
00：锁定电平；
01：置为低电平；
10：置为高电平；
11：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_BUF_EN</name>
          <displayName>PG_BUF_EN</displayName>
          <description>波形生成缓存使能寄存器。</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_frc_gld_en</name>
              <description>PG_ACT_FRC 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_frc_buf_en</name>
              <description>PG_ACT_FRC 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_actb_gld_en</name>
              <description>PG_ACT_B 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_actb_buf_en</name>
              <description>PG_ACT_B 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_acta_gld_en</name>
              <description>PG_ACT_A 寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_acta_buf_en</name>
              <description>PG_ACT_A 寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_ACT_LD</name>
          <displayName>PG_ACT_LD</displayName>
          <description>波形生成动作独立加载触发信号选择寄存器。</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <resetValue>0x00111111</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pg_frcld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能PG_ACT_FRC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pg_frcld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能PG_ACT_FRC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pg_frcld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能PG_ACT_FRC 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pgb_actld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能PG_ACT_B 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_actld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能PG_ACT_B 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_actld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能PG_ACT_B 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_actld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能PG_ACT_B 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_actld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能PG_ACT_B 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pga_actld_synen</name>
              <description>选择 APTxSYNCI 有效时，是否使能PG_ACT_A 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_actld_b1en</name>
              <description>选择 EMEVTB1 有效时，是否使能PG_ACT_A 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_actld_a1en</name>
              <description>选择 EMEVTA1 有效时，是否使能PG_ACT_A 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_actld_prden</name>
              <description>选择 CNT_PRD 有效时，是否使能PG_ACT_A 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_actld_zroen</name>
              <description>选择 CNT_ZERO 有效时，是否使能PG_ACT_A 寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EVTC_SEL</name>
          <displayName>PG_EVTC_SEL</displayName>
          <description>波形生成事件 C 触发源选择寄存器。</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_pgb_evtc2_sel</name>
              <description>BEVTC2 触发源选择。
0x1： EMEVTA1_TEMP；
0x2： EMEVTA2_TEMP；
0x3： EMEVTB1_TEMP；
0x4： EMEVTB2_TEMP；
0x5： EMEVTFILT；
0x6： TRIP1；
0x7： TRIP2；
0x8： TRIP3；
0x9： APTxSYNCI；
其它：禁止产生 BEVTC2。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pgb_evtc1_sel</name>
              <description>BEVTC1 触发源选择。
0x1： EMEVTA1_TEMP；
0x2： EMEVTA2_TEMP；
0x3： EMEVTB1_TEMP；
0x4： EMEVTB2_TEMP；
0x5： EMEVTFILT；
0x6： TRIP1；
0x7： TRIP2；
0x8： TRIP3；
0x9： APTxSYNCI；
其它：禁止产生 BEVTC1。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_evtc2_sel</name>
              <description>AEVTC2 触发源选择。
0x1： EMEVTA1_TEMP；0x2： EMEVTA2_TEMP；
0x3： EMEVTB1_TEMP；
0x4： EMEVTB2_TEMP；
0x5： EMEVTFILT；
0x6： TRIP1；
0x7： TRIP2；
0x8： TRIP3；
0x9： APTxSYNCI；
其它：禁止产生 AEVTC2。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_pga_evtc1_sel</name>
              <description>AEVTC1 触发源选择。
0x1： EMEVTA1_TEMP；
0x2： EMEVTA2_TEMP；
0x3： EMEVTB1_TEMP；
0x4： EMEVTB2_TEMP；
0x5： EMEVTFILT；
0x6： TRIP1；
0x7： TRIP2；
0x8： TRIP3；
0x9： APTxSYNCI；
其它：禁止产生 AEVTC1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DG_RED</name>
          <displayName>DG_RED</displayName>
          <description>死区上升沿延时配置寄存器。</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_dg_red</name>
              <description>死区上升沿延时配置。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DG_FED</name>
          <displayName>DG_FED</displayName>
          <description>死区下降沿延时配置寄存器。</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_dg_fed</name>
              <description>死区下降沿延时配置。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DG_CFG</name>
          <displayName>DG_CFG</displayName>
          <description>死区配置寄存器。</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_dgb_osel</name>
              <description>选择 DG_PWMB 的源。
0：选择 PWM_FED_POL 作为DG_PWMB；
1：选择 PWM_RED_POL 作为DG_PWMB。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dga_osel</name>
              <description>选择 DG_PWMA 的源。
0：选择 PWM_RED_POL 作为DG_PWMA；
1：选择 PWM_FED_POL 作为DG_PWMA。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dg_fed_osel</name>
              <description>选择PWM_FED_POL的源。
0x：选择PWM_FED_AFTER作为PWM_FED_POL；
10：选择PWM_FED_AFTER取反后作为PWM_FED_POL；
11：选择PG_PWMB作为PWM_FED_POL。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dg_red_osel</name>
              <description>选择PWM_RED_POL的源。
0x：选择PWM_RED_AFTER作为PWM_RED_POL；
10：选择PWM_RED_AFTER取反后作为PWM_RED_POL；
11：选择PG_PWMA作为PWM_RED_POL。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dg_fed_isel</name>
              <description>选择PWM_FED_BEFORE的源。
00：选择PG_PWMB作为PWM_FED_BEFORE；
01：选择PG_PWMA作为PWM_FED_BEFORE；
10：选择PWM_RED_BEFORE作为PWM_FED_BEFORE；
11：将PWM_FED_BEFORE固定为低电平。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dg_red_isel</name>
              <description>选择PWM_RED_BEFORE的源。
x0：选择PG_PWMA作为PWM_RED_BEFORE；
x1：选择PG_PWMB作为PWM_RED_BEFORE。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DG_BUF_EN</name>
          <displayName>DG_BUF_EN</displayName>
          <description>死区生成缓存使能寄存器。</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cfg_gld_en</name>
              <description>DG_CFG寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cfg_buf_en</name>
              <description>DG_CFG寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_fed_gld_en</name>
              <description>DG_CFG寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_fed_buf_en</name>
              <description>DG_FED寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_red_gld_en</name>
              <description>DG_RED寄存器的全局加载使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_red_buf_en</name>
              <description>DG_RED寄存器的缓存使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DG_BUF_LOAD</name>
          <displayName>DG_BUF_LOAD</displayName>
          <description>死区生成独立加载触发信号选择寄存器。</description>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <resetValue>0x00010101</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_cfg_ld_prden</name>
              <description>选择CNT_PRD有效时，是否使能DG_CFG寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_cfg_ld_zroen</name>
              <description>选择CNT_ZERO有效时，是否使能DG_CFG寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_fed_ld_prden</name>
              <description>选择CNT_PRD有效时，是否使能DG_FED寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_fed_ld_zroen</name>
              <description>选择CNT_ZERO有效时，是否使能DG_FED寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_red_ld_prden</name>
              <description>选择CNT_PRD有效时，是否使能DG_RED寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_red_ld_zroen</name>
              <description>选择CNT_ZERO有效时，是否使能DG_RED寄存器的独立加载。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_MODE</name>
          <displayName>OC_MODE</displayName>
          <description>输出保护模式寄存器。</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <resetValue>0x00700070</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_mode_evtb2</name>
              <description>EMEVTB2 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evtb1</name>
              <description>EMEVTB1 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evta2</name>
              <description>EMEVTA2 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evta1</name>
              <description>EMEVTA1 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_mode_evts3</name>
              <description>TRIP11 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evts2</name>
              <description>TRIP10 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evts1</name>
              <description>TRIP9 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_mode_evt3</name>
              <description>TRIP3 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evt2</name>
              <description>TRIP2 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_mode_evt1</name>
              <description>TRIP1 的输出保护模式选择。
0：持续性保护；
1：周期性保护。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_en_evtb2</name>
              <description>EMEVTB2 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evtb1</name>
              <description>EMEVTB1 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evta2</name>
              <description>EMEVTA2 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evta1</name>
              <description>EMEVTA1 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_en_evts3</name>
              <description>TRIP11的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evts2</name>
              <description>TRIP10 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evts1</name>
              <description>TRIP9 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_en_evt3</name>
              <description>TRIP3 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evt2</name>
              <description>TRIP2 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_en_evt1</name>
              <description>TRIP1 的输出保护使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_LAT_EN</name>
          <displayName>OC_LAT_EN</displayName>
          <description>故障信号锁存使能寄存器。</description>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <resetValue>0x00000F77</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_laten_evtb2</name>
              <description>EMEVTB2的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evtb1</name>
              <description>EMEVTB1的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evta2</name>
              <description>EMEVTA2的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evta1</name>
              <description>EMEVTA1的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_laten_evts3</name>
              <description>TRIP11的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evts2</name>
              <description>TRIP10的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evts1</name>
              <description>TRIP9的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_laten_evt3</name>
              <description>TRIP3的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evt2</name>
              <description>TRIP2的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_laten_evt1</name>
              <description>TRIP1的锁存使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_ACT_A</name>
          <displayName>OC_ACT_A</displayName>
          <description>APTx_PWMA 输出保护寄存器。</description>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <resetValue>0x00070007</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oca_evtb2_dec</name>
              <description>EMEVTB2有效且TCCNT计数方向递减时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evtb1_dec</name>
              <description>EMEVTB1有效且TCCNT计数方向递减时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evta2_dec</name>
              <description>EMEVTA2有效且TCCNT计数方向递减时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evta1_dec</name>
              <description>EMEVTA1有效且TCCNT计数方向递减时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evtio_dec</name>
              <description>TRIP1-TRIP3或TRIP9-TRIP11有效且TCCNT计数方向递减时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oca_evtb2_inc</name>
              <description>EMEVTB2有效且TCCNT计数方向递增时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evtb1_inc</name>
              <description>EMEVTB1有效且TCCNT计数方向递增时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evta2_inc</name>
              <description>EMEVTA2有效且TCCNT计数方向递增时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evta1_inc</name>
              <description>EMEVTA1有效且TCCNT计数方向递增时，APTx_PWMA的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oca_evtio_inc</name>
              <description>TRIP1-TRIP3 或 TRIP9-TRIP11 有效且
TCCNT 计数方向递增时， APTx_PWMA
的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_ACT_B</name>
          <displayName>OC_ACT_B</displayName>
          <description>APTx_PWMB 输出保护寄存器。</description>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <resetValue>0x00070007</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_ocb_evtb2_dec</name>
              <description>EMEVTB2有效且TCCNT计数方向递减时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evtb1_dec</name>
              <description>EMEVTB1有效且TCCNT计数方向递减时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evta2_dec</name>
              <description>EMEVTA2有效且TCCNT计数方向递减时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evta1_dec</name>
              <description>EMEVTA1有效且TCCNT计数方向递减时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evtio_dec</name>
              <description>TRIP1-TRIP3或TRIP9-TRIP11有效且TCCNT计数方向递减时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_ocb_evtb2_inc</name>
              <description>EMEVTB2有效且TCCNT计数方向递增时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evtb1_inc</name>
              <description>EMEVTB1有效且TCCNT计数方向递增时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evta2_inc</name>
              <description>EMEVTA2有效且TCCNT计数方向递增时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evta1_inc</name>
              <description>EMEVTA1有效且TCCNT计数方向递增时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_ocb_evtio_inc</name>
              <description>TRIP1-TRIP3或TRIP9-TRIP11有效且TCCNT计数方向递增时，APTx_PWMB的输出状态。
000：不做任何动作；
001：低电平；
010：高电平；
011：锁定电平；
100：翻转电平；
其它：高阻态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_EVT_FLAG</name>
          <displayName>OC_EVT_FLAG</displayName>
          <description>故障信号和事件中断标志寄存器。</description>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_int_clr_evt</name>
              <description>事件中断APTxEVTINT的中断清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_evtb2</name>
              <description>EMEVTB2故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evtb1</name>
              <description>EMEVTB1故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evta2</name>
              <description>EMEVTA2故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evta1</name>
              <description>EMEVTA1故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_evts3</name>
              <description>TRIP11故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evts2</name>
              <description>TRIP10故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evts1</name>
              <description>TRIP9故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_evt3</name>
              <description>TRIP3故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evt2</name>
              <description>TRIP2故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_evt1</name>
              <description>TRIP1故障信号标志的清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ro_int_flag_evt</name>
              <description>事件中断APTxEVTINT的中断标志位。
0：APTxEVTINT无效；
1：APTxEVTINT有效。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evtb2</name>
              <description>EMEVTB2故障信号标志位。
0：EMEVTB2故障信号无效；
1：EMEVTB2故障信号有效。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evtb1</name>
              <description>EMEVTB1故障信号标志位。
0：EMEVTB1故障信号无效；
1：EMEVTB1故障信号有效。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evta2</name>
              <description>EMEVTA2故障信号标志位。
0：EMEVTA2故障信号无效；
1：EMEVTA2故障信号有效。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evta1</name>
              <description>EMEVTA1故障信号标志位。
0：EMEVTA1故障信号无效；
1：EMEVTA1故障信号有效。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evts3</name>
              <description>TRIP11故障信号标志位。
0：TRIP11故障信号无效；
1：TRIP11故障信号有效。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evts2</name>
              <description>TRIP10故障信号标志位。
0：TRIP10故障信号无效；
1：TRIP10故障信号有效。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evts1</name>
              <description>TRIP9故障信号标志位。
0：TRIP9故障信号无效；
1：TRIP9故障信号有效。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evt3</name>
              <description>TRIP3故障信号标志位。
0：TRIP3故障信号无效；
1：TRIP3故障信号有效。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evt2</name>
              <description>TRIP2故障信号标志位。
0：TRIP2故障信号无效；
1：TRIP2故障信号有效。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_oc_flag_evt1</name>
              <description>TRIP1故障信号标志位。
0：TRIP1故障信号无效；
1：TRIP1故障信号有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_PRD_CLR</name>
          <displayName>OC_PRD_CLR</displayName>
          <description>周期性保护自动清除寄存器。</description>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <resetValue>0x00000F77</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_prden_evtb2</name>
              <description>当EMEVTB2设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evtb1</name>
              <description>当EMEVTB1设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evta2</name>
              <description>当EMEVTA2设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evta1</name>
              <description>当EMEVTA1设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_prden_evts3</name>
              <description>当TRIP11设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evts2</name>
              <description>当TRIP10设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evts1</name>
              <description>当TRIP9设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_prden_evt3</name>
              <description>当TRIP3设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evt2</name>
              <description>当TRIP2设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_prden_evt1</name>
              <description>当TRIP1设置成周期性保护时，选择是否在CNT_PRD有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evtb2</name>
              <description>当EMEVTB2设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evtb1</name>
              <description>当EMEVTB1设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evta2</name>
              <description>当EMEVTA2设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evta1</name>
              <description>当EMEVTA1设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evts3</name>
              <description>当TRIP11设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evts2</name>
              <description>当TRIP10设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evts1</name>
              <description>当TRIP9设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evt3</name>
              <description>当TRIP3设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evt2</name>
              <description>当TRIP2设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_clr_zroen_evt1</name>
              <description>当TRIP1设置成周期性保护时，选择是否在CNT_ZERO有效时清除对APTx_PWMA/APTx_PWMB的保护。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OC_FRC_EVT</name>
          <displayName>OC_FRC_EVT</displayName>
          <description>强制产生故障信号寄存器。</description>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_frc_evtb2</name>
              <description>强制产生EMEVTB2故障信号。
0：无效；
1：有效。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evtb1</name>
              <description>强制产生EMEVTB1故障信号。
0：无效；
1：有效。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evta2</name>
              <description>强制产生EMEVTA2事件。
0：无效；
1：有效。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evta1</name>
              <description>强制产生EMEVTA1事件。
0：无效；
1：有效。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_frc_evts3</name>
              <description>强制产生TRIP11故障信号。
0：无效；
1：有效。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evts2</name>
              <description>强制产生TRIP10故障信号。
0：无效；
1：有效。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evts1</name>
              <description>强制产生TRIP9故障信号。
0：无效；
1：有效。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_oc_frc_evt3</name>
              <description>强制产生TRIP3故障信号。
0：无效；
1：有效。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evt2</name>
              <description>强制产生TRIP2故障信号。
0：无效；
1：有效。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_oc_frc_evt1</name>
              <description>强制产生TRIP1故障信号。
0：无效；
1：有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_EVT_EN</name>
          <displayName>INT_EVT_EN</displayName>
          <description>事件中断的中断使能寄存器。</description>
          <addressOffset>0x410</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_en_evtb2</name>
              <description>EMEVTB2触发事件中断的使能位，选择故障信号EMEVTB2有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evtb1</name>
              <description>EMEVTB1触发事件中断的使能位，选择故障信号EMEVTB1有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evta2</name>
              <description>EMEVTA2触发事件中断的使能位，选择故障信号EMEVTA2有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evta1</name>
              <description>EMEVTA1触发事件中断的使能位，选择故障信号EMEVTA1有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_en_evts3</name>
              <description>TRIP11触发事件中断的使能位，选择故障信号TRIP11有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evts2</name>
              <description>TRIP10触发事件中断的使能位，选择故障信号TRIP10有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evts1</name>
              <description>TRIP9触发事件中断的使能位，选择故障信号TRIP9有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_en_evt3</name>
              <description>TRIP3触发事件中断的使能位，选择故障信号TRIP3有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evt2</name>
              <description>TRIP2触发事件中断的使能位，选择故障信号TRIP2有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_en_evt1</name>
              <description>TRIP1触发事件中断的使能位，选择故障信号TRIP1有效时，是否产生事件中断APTxEVTINT。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_TMR_EN</name>
          <displayName>INT_TMR_EN</displayName>
          <description>定时中断使能寄存器。</description>
          <addressOffset>0x414</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_en_tmr</name>
              <description>定时中断APTxTMRINT的使能位。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_TMR_FLAG</name>
          <displayName>INT_TMR_FLAG</displayName>
          <description>定时中断标志寄存器。</description>
          <addressOffset>0x420</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_clr_tmr</name>
              <description>定时中断APTxTMRINT的中断清除位，写1清0。
0：写0无效；
1：写1有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_int_flag_tmr</name>
              <description>定时中断APTxTMRINT的中断标志位。
0：APTxTMRINT无效；
1：APTxTMRINT有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_TMR_SEL</name>
          <displayName>INT_TMR_SEL</displayName>
          <description>定时中断的触发源选择寄存器。</description>
          <addressOffset>0x424</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_tmr_sel</name>
              <description>定时中断APTxTMRINT的触发源选择。
0x1：CNT_ZERO有效；
0x2：CNT_PRD有效；
0x3：CNT_ZRO或CNT_PRD有效；
0x4：CNT_REFA有效且TCCNT计数方向递增；
0x5：CNT_REFA有效且TCCNT计数方向递减；
0x6：CNT_REFB有效且TCCNT计数方向递增；
0x7：CNT_REFB有效且TCCNT计数方向递减；
0x8：CNT_REFC有效且TCCNT计数方向递增；
0x9：CNT_REFC有效且TCCNT计数方向递减；
0xA：CNT_REFD有效且TCCNT计数方向递增；
0xB：CNT_REFD有效且TCCNT计数方向递减；
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_PRSC_CFG</name>
          <displayName>INT_PRSC_CFG</displayName>
          <description>定时中断缩减配置寄存器。</description>
          <addressOffset>0x428</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_prsc_frc</name>
              <description>定时中断缩减计数器强制加1。
0：写0无效；
1：写1有效。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_int_prsc_synen</name>
              <description>定时中断缩减计数器的同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_prsc_phs</name>
              <description>定时中断缩减计数器的同步值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_int_prsc_cnt</name>
              <description>定时中断缩减计数器的计数值。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_prsc_prd</name>
              <description>定时中断的缩减比例。
0x1：每发生1次有效的定时中断触发源，就产生定时中断；
0x2：每发生2次有效的定时中断触发源，就产生定时中断；
0x3：每发生3次有效的定时中断触发源，就产生定时中断；
…
0xF：每发生15次有效的定时中断触发源，就产生定时中断。
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_TMR_SELA</name>
          <displayName>CS_TMR_SELA</displayName>
          <description>APTxSOCA 的触发源选择寄存器。</description>
          <addressOffset>0x500</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csa_en_cs</name>
              <description>APTxSOCA 的使能位。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csa_tmr_sel</name>
              <description>APTxSOCA 的触发源选择。
0x0： EMEVTA1 有效；
0x1： CNT_ZERO 有效；
0x2： CNT_PRD 有效；
0x3： CNT_ZERO 或 CNT_PRD 有效；
0x4： CNT_REFA 有效且 TCCNT 计数方
向递增；
0x5： CNT_REFA 有效且 TCCNT 计数方
向递减；
0x6： CNT_REFB 有效且 TCCNT 计数方
向递增；
0x7： CNT_REFB 有效且 TCCNT 计数方
向递减；
0x8： CNT_REFC 有效且 TCCNT 计数方向递增；
0x9： CNT_REFC 有效且 TCCNT 计数方
向递减；
0xA： CNT_REFD 有效且 TCCNT 计数方
向递增；
0xB： CNT_REFD 有效且 TCCNT 计数方
向递减；
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_TMR_SELB</name>
          <displayName>CS_TMR_SELB</displayName>
          <description>APTxSOCB 的触发源选择寄存器。</description>
          <addressOffset>0x504</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_en_cs</name>
              <description>APTxSOCB 的使能位。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_tmr_sel</name>
              <description>APTxSOCB 的触发源选择。
0x0： EMEVTB1 有效；
0x1： CNT_ZERO 有效；
0x2： CNT_PRD 有效；
0x3： CNT_ZERO 或 CNT_PRD 有效；
0x4： CNT_REFA 有效且 TCCNT 计数方
向递增；
0x5： CNT_REFA 有效且 TCCNT 计数方
向递减；
0x6： CNT_REFB 有效且 TCCNT 计数方
向递增；
0x7： CNT_REFB 有效且 TCCNT 计数方
向递减；
0x8： CNT_REFC 有效且 TCCNT 计数方
向递增；
0x9： CNT_REFC 有效且 TCCNT 计数方
向递减；
0xA： CNT_REFD 有效且 TCCNT 计数方
向递增；
0xB： CNT_REFD 有效且 TCCNT 计数方
向递减；
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_PRSCA_CFG</name>
          <displayName>CS_PRSCA_CFG</displayName>
          <description>APTxSOCA 缩减配置寄存器。</description>
          <addressOffset>0x508</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csa_prsc_frc</name>
              <description>APTxSOCA 缩减计数器强制加 1。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_csa_prsc_synen</name>
              <description>APTxSOCA 缩减计数器的同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csa_prsc_phs</name>
              <description>APTxSOCA 缩减计数器的同步值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csa_prsc_prd</name>
              <description>APTxSOCA 的缩减比例。
0x1：每发生 1 次有效的 APTxSOCA 的触发源，就产生 APTxSOCA；
0x2：每发生 2 次有效的 APTxSOCA 的
触发源，就产生 APTxSOCA；
0x3：每发生 3 次有效的 APTxSOCA 的
触发源，就产生 APTxSOCA；
…
0xF：每发生 15 次有效的 APTxSOCA 的
触发源，就产生 APTxSOCA。
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_PRSCB_CFG</name>
          <displayName>CS_PRSCB_CFG</displayName>
          <description>APTxSOCB 缩减配置寄存器。</description>
          <addressOffset>0x50c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_prsc_frc</name>
              <description>APTxSOCB 缩减计数器强制加 1。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_csb_prsc_synen</name>
              <description>APTxSOCB 缩减计数器的同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_prsc_phs</name>
              <description>APTxSOCB 缩减计数器的同步值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_prsc_prd</name>
              <description>APTxSOCB 的缩减比例。
0x1：每发生 1 次有效的 APTxSOCB 的
触发源，就产生 APTxSOCB；
0x2：每发生 2 次有效的 APTxSOCB 的
触发源，就产生 APTxSOCB；
0x3：每发生 3 次有效的 APTxSOCB 的
触发源，就产生 APTxSOCB；
…
0xF：每发生 15 次有效的 APTxSOCB 的
触发源，就产生 APTxSOCB。
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_FLAG</name>
          <displayName>CS_FLAG</displayName>
          <description>APTxSOCA/APTxSOCB 标志寄存器。</description>
          <addressOffset>0x510</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_clr_flag</name>
              <description>APTxSOCB 标志清除位，写 1 清 0。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_csa_clr_flag</name>
              <description>APTxSOCA 标志清除位，写 1 清 0。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_csb_flag</name>
              <description>APTxSOCB 的标志位。
0：没有产生 APTxSOCB；
1：已经产生 APTxSOCB。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_csa_flag</name>
              <description>APTxSOCA 的标志位。
0：没有产生 APTxSOCA；
1：已经产生 APTxSOCA。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CS_DMA</name>
          <displayName>CS_DMA</displayName>
          <description>DMA 请求配置寄存器。</description>
          <addressOffset>0x520</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_dma_sreq_sel</name>
              <description>DMA Single 请求的触发源选择。
01： TRIGA 信号有效；
10： TRIGB 信号有效；
其它：禁止产生 DMA Single 请求。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_dma_breq_sel</name>
              <description>DMA Burst 请求的源头选择。
01： TRIGA 信号有效；
10： TRIGB 信号有效；
其它：禁止产生 DMA Burst 请求。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_EVTIO_PSEL</name>
          <displayName>EM_EVTIO_PSEL</displayName>
          <description>事件管理极性选择寄存器 1。</description>
          <addressOffset>0x600</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtsys3_psel</name>
              <description>TRIP11 的极性选择。
00： TRIP11 = sys_mem_fail；
01： TRIP11 = ~sys_mem_fail；
10： TRIP11 = 0；
11： TRIP11 = 1。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtsys2_psel</name>
              <description>TRIP10 的极性选择。
00： TRIP10 = clock_fail；
01： TRIP10 = ~clock_fail；
10： TRIP10 = 0；
11： TRIP10 = 1。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtsys1_psel</name>
              <description>TRIP9 的极性选择。
00： TRIP9 = debug_mode；
01： TRIP9 = ~debug_mode；
10： TRIP9 = 0；
11： TRIP9 = 1。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtio5_psel</name>
              <description>TRIP5 的极性选择。
00： TRIP5 = APT_EVTIO5；
01： TRIP5 = ~APT_EVTIO5；
10： TRIP5 = 0；
11： TRIP5 = 1。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtio4_psel</name>
              <description>TRIP4 的极性选择。
00： TRIP4 = APT_EVTIO4；
01： TRIP4 = ~APT_EVTIO4；
10： TRIP4 = 0；
11： TRIP4 = 1。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtio3_psel</name>
              <description>TRIP3 的极性选择。
00： TRIP3 = POE2；
01： TRIP3 = ~POE2；
10： TRIP3 = 0；
11： TRIP3 = 1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtio2_psel</name>
              <description>TRIP2 的极性选择。
00： TRIP2 = POE1；
01： TRIP2 = ~POE1；
10： TRIP2 = 0；
11： TRIP2 = 1。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtio1_psel</name>
              <description>TRIP1 的极性选择。
00： TRIP1 = POE0；
01： TRIP1 = ~POE0；
10： TRIP1 = 0；
11： TRIP1 = 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_EVTMP_PSEL</name>
          <displayName>EM_EVTMP_PSEL</displayName>
          <description>事件管理极性选择寄存器 2。</description>
          <addressOffset>0x604</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtmp6_psel</name>
              <description>TRIP8 的极性选择。
00： TRIP8 = APT_EVTMP6；
01： TRIP8 = ~APT_EVTMP6；
10： TRIP8 = 0；
11： TRIP8 = 1。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtmp5_psel</name>
              <description>TRIP7 的极性选择。
00： TRIP7 = APT_EVTMP5；
01： TRIP7 = ~APT_EVTMP5；
10： TRIP7 = 0；
11： TRIP7 = 1。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtmp4_psel</name>
              <description>TRIP6 的极性选择。
00： TRIP6 = APT_EVTMP4；
01： TRIP6 = ~APT_EVTMP4；
10： TRIP6 = 0；
11： TRIP6 = 1。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtmp3_psel</name>
              <description>TRIP14 的极性选择。
00： TRIP14 = ACMP2_OUT；
01： TRIP14 = ~ACMP2_OUT；
10： TRIP14 = 0；
11： TRIP14 = 1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtmp2_psel</name>
              <description>TRIP13 的极性选择。
00： TRIP13 = ACMP1_OUT；
01： TRIP13 = ~ACMP1_OUT；
10： TRIP13 = 0；
11： TRIP13 = 1。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtmp1_psel</name>
              <description>TRIP12 的极性选择。
00： TRIP12 = ACMP0_OUT；
01： TRIP12 = ~ACMP0_OUT；
10： TRIP12 = 0；
11： TRIP12 = 1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_AOR_EN</name>
          <displayName>EM_AOR_EN</displayName>
          <description>事件管理组合输入选择寄存器 A。</description>
          <addressOffset>0x608</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_em_a2_oren</name>
              <description>TRIP_OR_A2的触发源选择，每个比特对应一个信号。
bit[24]代表TRIP8的使能位；
bit[23]代表TRIP7的使能位；
bit[22]代表TRIP6的使能位；
bit[21]代表TRIP14的使能位；
bit[20]代表TRIP13的使能位；
bit[19]代表TRIP12的使能位；
bit[18]代表TRIP3的使能位；
bit[17]代表TRIP2的使能位；
bit[16]代表TRIP1的使能位；
其它比特无效，应配置为0。
当相应的比特为1时，代表对应的信号参与逻辑或；
当相应的比特为0时，代表对应的信号不参与逻辑或。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_em_a1_oren</name>
              <description>TRIP_OR_A1的触发源选择，每个比特对应一个信号。
bit[8]代表TRIP8的使能位；
bit[7]代表TRIP7的使能位；
bit[6]代表TRIP6的使能位；
bit[5]代表TRIP14的使能位；
bit[4]代表TRIP13的使能位；
bit[3]代表TRIP12的使能位；
bit[2]代表TRIP3的使能位；
bit[1]代表TRIP2的使能位；
bit[0]代表TRIP1的使能位；
其它比特无效，应配置为0。
当相应的比特为1时，代表对应的信号参与逻辑或；
当相应的比特为0时，代表对应的信号不参与逻辑或。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_BOR_EN</name>
          <displayName>EM_BOR_EN</displayName>
          <description>事件管理组合输入选择寄存器 B。</description>
          <addressOffset>0x60c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_em_b2_oren</name>
              <description>TRIP_OR_B2 的触发源选择，每个比特对
应一个信号。
bit[24]代表TRIP8的使能位；
bit[23]代表TRIP7的使能位；
bit[22]代表TRIP6的使能位；
bit[21]代表TRIP14的使能位；
bit[20]代表TRIP13的使能位；
bit[19]代表TRIP12的使能位；
bit[18]代表TRIP3的使能位；
bit[17]代表TRIP2的使能位；
bit[16]代表TRIP1的使能位；
其它比特无效，应配置为 0。
当相应的比特为 1 时，代表对应的信号参
与逻辑或；
当相应的比特为 0 时，代表对应的信号不
参与逻辑或。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_em_b1_oren</name>
              <description>TRIP_OR_B1 的触发源选择，每个比特对
应一个信号。
bit[8]代表TRIP8的使能位；
bit[7]代表TRIP7的使能位；
bit[6]代表TRIP6的使能位；
bit[5]代表TRIP14的使能位；
bit[4]代表TRIP13的使能位；
bit[3]代表TRIP12的使能位；
bit[2]代表TRIP3的使能位；
bit[1]代表TRIP2的使能位；
bit[0]代表TRIP1的使能位；
其它比特无效，应配置为 0。
当相应的比特为 1 时，代表对应的信号参
与逻辑或；
当相应的比特为 0 时，代表对应的信号不
参与逻辑或。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_MRG_SEL</name>
          <displayName>EM_MRG_SEL</displayName>
          <description>事件管理输入选择寄存器。</description>
          <addressOffset>0x610</addressOffset>
          <size>32</size>
          <resetValue>0x51510000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtb2t_sel</name>
              <description>EMEVTB2_TEMP 有效（高电平有效）的
条件选择。
001：EMEVTB1_SRC为高电平；
010：EMEVTB1_SRC为高电平，且EMEVTB2_SRC为低电平；
011：EMEVTB1_SRC为高电平，且EMEVTB2_SRC为高电平；
100：EMEVTB1_SRC为低电平，且EMEVTB2_SRC为高电平；
101：EMEVTB2_SRC为高电平；
其它： EMEVTB2_TEMP 输出低电平。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtb1t_sel</name>
              <description>EMEVTB1_TEMP 有效（高电平有效）的
条件选择。
001：EMEVTB1_SRC为高电平；
010：EMEVTB1_SRC为高电平，且EMEVTB2_SRC为低电平；
011：EMEVTB1_SRC为高电平，且EMEVTB2_SRC为高电平；
100：EMEVTB1_SRC为低电平，且EMEVTB2_SRC为高电平；
101：EMEVTB2_SRC为高电平；
其它： EMEVTB1_TEMP 输出低电平。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evta2t_sel</name>
              <description>EMEVTA2_TEMP 有效（高电平有效）的
条件选择。
001：EMEVTA1_SRC为高电平；
010：EMEVTA1_SRC为高电平，且EMEVTA2_SRC为低电平；
011：EMEVTA1_SRC为高电平，且EMEVTA2_SRC为高电平；
100：EMEVTA1_SRC为低电平，且EMEVTA2_SRC为高电平；
101：EMEVTA2_SRC为高电平；
其它： EMEVTA2_TEMP 输出低电平。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evta1t_sel</name>
              <description>EMEVTA1_TEMP 有效（高电平有效）的
条件选择。
001：EMEVTA1_SRC为高电平；
010：EMEVTA1_SRC为高电平，且EMEVTA2_SRC为低电平；
011：EMEVTA1_SRC为高电平，且EMEVTA2_SRC为高电平；
100：EMEVTA1_SRC为低电平，且EMEVTA2_SRC为高电平；
101：EMEVTA2_SRC为高电平；其它： EMEVTA1_TEMP 输出低电平。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_em_b2_sel</name>
              <description>EMEVTB2_SRC 触发源选择。
0x0： TRIP1；
0x1： TRIP2；
0x2： TRIP3；
0x3： TRIP12；
0x4： TRIP13；
0x5： TRIP14；
0x6： TRIP6；
0x7： TRIP7；
0x8： TRIP8；
0xF： TRIP_OR_B2；
其它： EMEVTB2_SRC 输出低电平。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_em_b1_sel</name>
              <description>EMEVTB1_SRC 触发源选择。
0x0： TRIP1；
0x1： TRIP2；
0x2： TRIP3；
0x3： TRIP12；
0x4： TRIP13；
0x5： TRIP14；
0x6： TRIP6；
0x7： TRIP7；
0x8： TRIP8；
0xF： TRIP_OR_B1；
其它： EMEVTB1_SRC 输出低电平。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_em_a2_sel</name>
              <description>EMEVTA2_SRC 触发源选择。
0x0： TRIP1；
0x1： TRIP2；
0x2： TRIP3；
0x3： TRIP12；
0x4： TRIP13；
0x5： TRIP14；
0x6： TRIP6；
0x7： TRIP7；
0x8： TRIP8；
0xF： TRIP_OR_A2；
其它： EMEVTA2_SRC 输出低电平。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_em_a1_sel</name>
              <description>EMEVTA1_SRC 触发源选择。
0x0： TRIP1；
0x1： TRIP2；
0x2： TRIP3；
0x3： TRIP12；
0x4： TRIP13；
0x5： TRIP14；
0x6： TRIP6；
0x7： TRIP7；
0x8： TRIP8；
0xF： TRIP_OR_A1；
其它： EMEVTA1_SRC 输出低电平。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_OUT_SEL</name>
          <displayName>EM_OUT_SEL</displayName>
          <description>事件管理输出选择寄存器。</description>
          <addressOffset>0x614</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_evtfilt_sel</name>
              <description>EMEVTFILT 的触发源选择。
00： EMEVTA1_TEMP；
01： EMEVTA2_TEMP；
10： EMEVTB1_TEMP；
11： EMEVTB2_TEMP。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtb2_sel</name>
              <description>EMEVTB2 的触发源选择。
0： EMEVTB2_TEMP；
1： EMEVTFILT。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evtb1_sel</name>
              <description>EMEVTB1 的触发源选择。
0： EMEVTB1_TEMP；
1： EMEVTFILT。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evta2_sel</name>
              <description>EMEVTA2 的触发源选择。
0： EMEVTA2_TEMP；
1： EMEVTFILT。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_evta1_sel</name>
              <description>EMEVTA1 的触发源选择。
0： EMEVTA1_TEMP；
1： EMEVTFILT。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_WD_EN</name>
          <displayName>EM_WD_EN</displayName>
          <description>屏蔽窗口配置寄存器。</description>
          <addressOffset>0x620</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>rg_mskwd_en</name>
              <description>屏蔽窗口 APTx_MSKWD 的使能位。
0：不使能， APTx_MSKWD 保持高电
平；
1：使能，按照配置产生屏蔽窗口
APTx_MSKWD。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_mskwd_psel</name>
              <description>屏蔽窗口的极性选择。
0：屏蔽 APTx_MSKWD 内的事件；
1：屏蔽 APTx_MSKWD 外的事件。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_mskwd_alg_prden</name>
              <description>当 CNT_PRD 有效时，选择是否重新开始
产生屏蔽窗口和 TCCNT 计数值捕获。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_mskwd_alg_zroen</name>
              <description>当 CNT_ZERO 有效时，选择是否重新开
始产生屏蔽窗口和 TCCNT 计数值捕获。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_WD_CNT</name>
          <displayName>EM_WD_CNT</displayName>
          <description>屏蔽窗口计数寄存器。</description>
          <addressOffset>0x624</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_mskwd_width</name>
              <description>设置屏蔽窗口的宽度，建议不要超过一个
PWM 周期。单位等于 TCCNT 的一个计数
单位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_mskwd_offset</name>
              <description>设置屏蔽窗口相对于对齐点的偏移量，建
议不要超过一个 PWM 周期。单位等于
TCCNT 的一个计数单位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_WD_STS</name>
          <displayName>EM_WD_STS</displayName>
          <description>屏蔽窗口计数器状态寄存器。</description>
          <addressOffset>0x62c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ro_width_cnt</name>
              <description>屏蔽窗口的宽度计数值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_offset_cnt</name>
              <description>屏蔽窗口的偏移计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_VCAP_CFG</name>
          <displayName>EM_VCAP_CFG</displayName>
          <description>谷底开关配置寄存器。</description>
          <addressOffset>0x630</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_vcap_en</name>
              <description>谷底开关功能使能位。
0：不使能谷底开关功能；
1：使能谷底开关功能。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_vcap_div_mode</name>
              <description>振荡周期测量逻辑的计数模式选择。
0：按照 APTCLK 时钟计数；
1：按照分频后的时钟计数。</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_trig_sel</name>
              <description>触发边沿滤波逻辑和振荡周期测量逻辑清
零和重启的条件选择。
000：禁止清零重启；
001： CNT_ZERO 有效；
010： CNT_PRD 有效；
011： CNT_ZERO 或 CNT_PRD 有效；
100： EMEVTA1_TEMP 有效；
101： EMEVTA2_TEMP 有效；
110： EMEVTB1_TEMP 有效；
111： EMEVTB2_TEMP 有效。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_edg_sel</name>
              <description>振荡周期测量逻辑捕获 EMEVTMSK 的有
效沿。
0：上升沿；
1：下降沿。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_stp_edg</name>
              <description>振荡周期测量逻辑停止测量的边沿。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_sta_edg</name>
              <description>振荡周期测量逻辑开始测量的边沿。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_VCAP_DLY</name>
          <displayName>EM_VCAP_DLY</displayName>
          <description>谷底开关失调补偿寄存器。</description>
          <addressOffset>0x634</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_dly_mode</name>
              <description>VCAPDLY 的选择。
001： VCAPHWDLY + rg_vcap_swdly；
010： VCAPHWDLY/2 + rg_vcap_swdly；
011： VCAPHWDLY/4 + rg_vcap_swdly；
100： VCAPHWDLY/8 + rg_vcap_swdly；
101： VCAPHWDLY/16 +
rg_vcap_swdly；
110： VCAPHWDLY/32 +
rg_vcap_swdly；
其它： rg_vcap_swdly。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_vcap_swdly</name>
              <description>软件添加的失调补偿值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_VCAP_STS1</name>
          <displayName>EM_VCAP_STS1</displayName>
          <description>谷底开关捕获状态寄存器 1。</description>
          <addressOffset>0x640</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ro_vcap_dly</name>
              <description>VCAPDLY 的值。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_vcap_cnt</name>
              <description>VCAPHWDLY 的值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_VCAP_STS2</name>
          <displayName>EM_VCAP_STS2</displayName>
          <description>谷底开关捕获状态寄存器 2。</description>
          <addressOffset>0x644</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_vcap_stp_edgsts</name>
              <description>振荡周期测量逻辑成功捕获停止边沿的指
示。
0：还未捕获；
1：成功捕获。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_vcap_sta_edgsts</name>
              <description>振荡周期测量逻辑成功捕获开始边沿的指
示。
0：还未捕获；
1：成功捕获。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_FILT_CFG</name>
          <displayName>EM_FILT_CFG</displayName>
          <description>边沿滤波配置寄存器</description>
          <addressOffset>0x650</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_filt_dly_en</name>
              <description>EMEVTFILT_TEMP 添加延时的使能位。
0：不使能， EMEVTFILT_TEMP 不添加任
何延时，直接生成 EMEVTFILT；
1：使能， EMEVTFILT_TEMP 经过延时
VCAPDLY 值后，生成 EMEVTFILT。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_filt_edg_sel</name>
              <description>EMEVTMSK 进行边沿滤波的有效边沿选
择。
0x：上升沿；
10：下降沿；
11：上升沿和下降沿。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_filt_edg_cnt</name>
              <description>滤除的 EMEVTMSK 有效边沿个数的配
置，当检测到所配置个数的 EMEVTMSK
有效边沿后，输出 EMEVTFILT_TEMP 脉
冲。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_TCAP_CFG</name>
          <displayName>EM_TCAP_CFG</displayName>
          <description>TCCNT 计数值捕获配置寄存器。</description>
          <addressOffset>0x660</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>rg_tcap_en</name>
              <description>TCCNT 计数值捕获功能的使能位。
0：不使能，当 EMEVTFILT 有效时不捕
获 TCCNT 的计数值；
1：使能，当 EMEVTFILT 有效时捕获
TCCNT 的计数值。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_tcap_clr</name>
              <description>TCCNT 计数值捕获成功的标志清除位，
写 1 清 0。
0：写 0 无效；
1：写 1 清除 TCCNT 计数值捕获成功的
标志位 ro_tcap_sts。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_tcap_sts</name>
              <description>TCCNT 计数值捕获成功的标志位。
0：未捕获 TCCNT 计数值；
1：已捕获 TCCNT 计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EM_TCAP_VAL</name>
          <displayName>EM_TCAP_VAL</displayName>
          <description>TCCNT 计数值捕获结果寄存器。</description>
          <addressOffset>0x670</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ro_tcap_cnt_buf</name>
              <description>TCCNT 计数值捕获的缓存结果。每当启动
一次 TCCNT 计数值捕获时，将上一次捕
获的 TCCNT 计数值实时结果更新到缓存
结果。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_tcap_cnt_rt</name>
              <description>TCCNT 计数值捕获的实时结果。每当启动
一次 TCCNT 计数值捕获时，实时结果清
零，当捕获成功时，将 TCCNT 计数器的
值保存，作为实时结果。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNI_CFG</name>
          <displayName>SYNI_CFG</displayName>
          <description>同步输入配置寄存器。</description>
          <addressOffset>0x700</addressOffset>
          <size>32</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syni_clr</name>
              <description>APTxSYNCI 的标志清除位，写 1 清 0。
0：写 0 无效；
1：写 1 清除 APTxSYNCI 的标志位
ro_syni_flag。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_syni_flag</name>
              <description>APTxSYNCI 的标志位。
0： APTxSYNCI 无效；
1： APTxSYNCI 有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syni_sel</name>
              <description>APTxSYNCI 的触发源选择。
0x0： APT0SYNCO；
0x1： APT1SYNCO；
0x2： APT2SYNCO；
0x3： APT3SYNCO；
0x4： APT4SYNCO；
0x5： APT5SYNCO；
0x6： APT6SYNCO；
0x7： APT7SYNCO；
0x8： APT8SYNCO；
0x9： CAPM0SYNCO；
0xA： CAPM1SYNCO；
0xB： CAPM2SYNCO；
0xC： TRIP4；
0xD： TRIP5；
其它：禁止产生 APTxSYNCI。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNCNT_CFG</name>
          <displayName>SYNCNT_CFG</displayName>
          <description>计数器同步信号配置寄存器。</description>
          <addressOffset>0x704</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syncnt_synien</name>
              <description>当 APTxSYNCI 有效时，选择是否产生
APTCNTSYNC。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syncnt_b1en</name>
              <description>当 EMEVTB1 有效时，选择是否产生
APTCNTSYNC。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syncnt_a1en</name>
              <description>当 EMEVTA1 有效时，选择是否产生
APTCNTSYNC。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNO_CFG</name>
          <displayName>SYNO_CFG</displayName>
          <description>同步输出配置寄存器。</description>
          <addressOffset>0x708</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_latset_otsyn</name>
              <description>控制同步输出单次锁存器置位。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_latset_sel</name>
              <description>当选择单次同步输出模式，选择同步输出单次锁存器置位的条件。
0：向 SYNO_CFG[rg_latset_otsyn]写 1
时置位；
1：向 GLB_LOAD[rg_latset_otgld]写 1 时置位。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_mode_syno</name>
              <description>同步输出的模式选择。
0：单次同步输出；
1：不限次数同步输出。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_refden</name>
              <description>当 CNT_REFD 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_refcen</name>
              <description>当 CNT_REFC 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_refben</name>
              <description>当 CNT_REFB 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syno_b1en</name>
              <description>当 EMEVTB1 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_a1en</name>
              <description>当 EMEVTA1 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_prden</name>
              <description>当 CNT_PRD 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_syno_zroen</name>
              <description>当 CNT_ZERO 有效时，选择是否产生APTxSYNCO。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GLB_LOAD</name>
          <displayName>GLB_LOAD</displayName>
          <description>全局加载配置寄存器。</description>
          <addressOffset>0x710</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_latset_otgld</name>
              <description>控制全局加载单次锁存器置位。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_mode_gld</name>
              <description>全局加载的模式选择。
0：单次加载；
1：不限次数加载。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_gld_prsc_prd</name>
              <description>全局加载信号缩减计数器的缩减比例。
0x1：每发生 1 次有效的全局加载触发信号，就产生 glb_ld；
0x2：每发生 2 次有效的全局加载触发信号，就产生 glb_ld；
0x3：每发生 3 次有效的全局加载触发信号，就产生 glb_ld；
…
0xF：每发生 15 次有效的全局加载触发信号，就产生 glb_ld。
其它：保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_gld_cntsynen</name>
              <description>使能 APTCNTSYNC 作为全局加载触发信号。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_gld_prden</name>
              <description>使能 CNT_PRD 作为全局加载触发信号。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rg_gld_zroen</name>
              <description>使能 CNT_ZERO 作为全局加载触发信号。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOAD_STS</name>
          <displayName>LOAD_STS</displayName>
          <description>缓存状态寄存器。</description>
          <addressOffset>0x720</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dg_cfg_ld_sts</name>
              <description>当使能了 DG_CFG 寄存器的缓存，指示DG_CFG 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dg_fed_ld_sts</name>
              <description>当使能了 DG_FEG 寄存器的缓存，指示DG_FEG 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dg_red_ld_sts</name>
              <description>当使能了 DG_REG 寄存器的缓存，指示DG_REG 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pg_out_frc_ld_sts</name>
              <description>当使能了 PG_ACT_FRC 寄存器的缓存，指示PG_ACT_FRC 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pg_act_b_ld_sts</name>
              <description>当使能了 PG_ACT_B 寄存器的缓存，指示PG_ACT_B 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pg_act_a_ld_sts</name>
              <description>当使能了 PG_ACT_A 寄存器的缓存，指示
PG_ACT_A 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tc_refd_ld_sts</name>
              <description>当使能了 TC_REFD 寄存器的缓存，指示TC_REFD 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tc_refc_ld_sts</name>
              <description>当使能了 TC_REFC 寄存器的缓存，指示TC_REFC 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tc_refb_ld_sts</name>
              <description>当使能了 TC_REFB 寄存器的缓存，指示TC_REFB 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tc_refa_ld_sts</name>
              <description>当使能了 TC_REFA 寄存器的缓存，指示TC_REFA 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tc_prd_ld_sts</name>
              <description>当使能了 TC_PRD 寄存器的缓存，指示TC_PRD 寄存器的缓存状态。
0：缓存寄存器空；
1：缓存寄存器满。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_FRC</name>
          <displayName>SYN_FRC</displayName>
          <description>软件强制寄存器。</description>
          <addressOffset>0x730</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_synpg_frc</name>
              <description>强制产生一个 PG_ACT_A/PG_ACT_B 寄存器的独立加载的触发信号。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_int_syn_frc</name>
              <description>强制定时中断缩减计数器更新成INT_PRSC_CFG[rg_int_prsc_phs]中的
值。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_csb_syn_frc</name>
              <description>强制产生一次 APTxSOCB 的触发源。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>rg_csa_syn_frc</name>
              <description>强制产生一次 APTxSOCA 的触发源。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_vcap_frc</name>
              <description>强制边沿滤波逻辑和振荡周期测量逻辑清零和重启一次。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_gld_frc</name>
              <description>强制产生一次全局加载信号的触发信号。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syno_frc</name>
              <description>强制产生一次 APTxSYNCO 的触发源。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rg_syncnt_frc</name>
              <description>强制产生一个 APTCNTSYNC 信号。
0：写 0 无效；
1：写 1 有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT1</name>
      <baseAddress>0x14A01000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT2</name>
      <baseAddress>0x14A02000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT3</name>
      <baseAddress>0x14A03000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT4</name>
      <baseAddress>0x14A04000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT5</name>
      <baseAddress>0x14A05000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT6</name>
      <baseAddress>0x14A06000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT7</name>
      <baseAddress>0x14A07000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="APT0">
      <name>APT8</name>
      <baseAddress>0x14A08000</baseAddress>
    </peripheral>
    <peripheral>
      <name>CAN</name>
      <description>CAN</description>
      <groupName>CAN</groupName>
      <baseAddress>0x14600000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CAN</name>
        <value>71</value>
      </interrupt>
      <registers>
        <register>
          <name>CAN_CONTROL</name>
          <displayName>CAN_CONTROL</displayName>
          <description>CAN_CONTROL 为 CAN控制寄存器</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>test</name>
              <description>test mode使能。0:不使能；1：使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>CCE</name>
              <description>更改配置使能。0：禁止， CPU 不能写 BIT_TIMING 寄存器；1：使能，当 Init 为 1 时， CPU 能写BIT_TIMING 寄存器。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DAR</name>
              <description>关闭自动重传。
0：开启自动重传受干扰的报文；
1：关闭自动重传。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EIE</name>
              <description>错误中断使能。0：禁止；1：使能错误中断， CAN_STATUS 寄存器中的 boff 或 ewarn 变化时会产生中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>SIE</name>
              <description>状态改变中断使能。0：禁止；1：使能状态改变中断，报文传输成功或检测到 CAN 总线错误时会产生中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>IE</name>
              <description>模块中断使能。
0：禁止；
1：使能， CAN 模块中断总开关。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Init</name>
              <description>初始化使能。
0：禁止，此时 CAN 控制器处于正常工作
模式；
1：使能，此时 CAN 控制器处于初始化模
式。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_STATUS</name>
          <displayName>CAN_STATUS</displayName>
          <description>CAN_STATUS 为 CAN 状态寄存器</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserve</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Boff</name>
              <description>Bus-off 状态。
0： CAN 模块不处于 bus-off 状态；
1： CAN 模块处于 bus-off 状态。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Ewarn</name>
              <description>警告状态。
0：所有错误计数器均未达到 96；
1：至少有一个错误计数器达到 96。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Epass</name>
              <description>错误状态。
0： 处于 CAN 协议所定义的主动错误；
1： 处于 CAN 协议所定义的被动错误。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RxOk</name>
              <description>报文接收状态。
0：接收报文失败；
1： 接收报文成功。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxOk</name>
              <description>报文发送状态。
0：发送报文失败；
1：发送报文成功。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>LEC</name>
              <description>错误状态码，用来表示 CAN 总线上最后一
次错误状态。
000：无错误；
001：填充错误；
010：形式错误；
011：应答错误；
100： bit1 错误；
101： bit0 错误；
110： CRC 错误；
111：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_ERROR_COUNTER</name>
          <displayName>CAN_ERROR_COUNTER</displayName>
          <description>CAN_ERROR_COUNTER 为 CAN 错误计数寄存器。</description>
          <addressOffset>0x0008</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserve</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RP</name>
              <description>被动错误接收状态。
0：接收错误计数器未达到 CAN 协议所定
义的被动错误水线；
1： 接收错误计数器达到 CAN 协议所定义
的被动错误水线。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REC</name>
              <description>接收错误计数器。
有效值在 0~127。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEC</name>
              <description>传输错误计数器。
有效值在 0~255。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIT_TIMING</name>
          <displayName>BIT_TIMING</displayName>
          <description>BIT_TIMING 为位时间寄存器。</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00002301</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSeg2</name>
              <description>相位缓冲段 2。
配置值为 0~7， 实际值比配置值多 1。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TSeg1</name>
              <description>相位缓冲段 1。
配置值为 1~15， 实际值比配置值多 1。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>SJW</name>
              <description>再同步跳转宽度。
配置值为 0~3， 实际值比配置值多 1。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>BRP</name>
              <description>波特率系数。
配置值为 0~63， 实际值比配置值多 1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_INTERRUPT</name>
          <displayName>CAN_INTERRUPT</displayName>
          <description>CAN_INTERRUPT 为 CAN 中断寄存器。</description>
          <addressOffset>0x010</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IntId</name>
              <description>中断 ID。
0x0000：无中断；
0x0001：中断源是第 1 个报文对象；
0x0002：中断源是第 2 个报文对象；
0x0003：中断源是第 3 个报文对象；
0x0004：中断源是第 4 个报文对象；
0x0005：中断源是第 5 个报文对象；
0x0006：中断源是第 6 个报文对象；
0x0007：中断源是第 7 个报文对象；
0x0008：中断源是第 8 个报文对象；
0x0009：中断源是第 9 个报文对象；
0x000A：中断源是第 10 个报文对象；
0x000B：中断源是第 11 个报文对象；
0x000C：中断源是第 12 个报文对象；
0x000D：中断源是第 13 个报文对象；
0x000E：中断源是第 14 个报文对象；
0x000F：中断源是第 15 个报文对象；
0x0010：中断源是第 16 个报文对象；
0x0011：中断源是第 17 个报文对象；
0x0012：中断源是第 18 个报文对象；
0x0013：中断源是第 19 个报文对象；
0x0014：中断源是第 20 个报文对象；
0x0015：中断源是第 21 个报文对象；
0x0016：中断源是第 22 个报文对象；
0x0017：中断源是第 23 个报文对象；
0x0018：中断源是第 24 个报文对象；
0x0019：中断源是第 25 个报文对象；
0x001A：中断源是第 26 个报文对象；
0x001B：中断源是第 27 个报文对象；
0x001C：中断源是第 28 个报文对象；
0x001D：中断源是第 29 个报文对象；
0x001E：中断源是第 30 个报文对象；
0x001F：中断源是第 31 个报文对象；
0x0020：中断源是第 32 个报文对象；
0x0021-0x7FFF：无效；
0x8000：状态中断；
0x8001-0xFFFF：无效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_TEST</name>
          <displayName>CAN_TEST</displayName>
          <description>CAN_TEST 为 CAN 调试寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Rx</name>
              <description>CAN_RX 管脚监控。
0： CAN 总线为显性（CAN_RX=’0’） ；1： CAN 总线为隐形（CAN_RX=’1’） 。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Tx</name>
              <description>CAN_TX 管脚控制。
00： 不控制 CAN_TX 管脚；
01：采样点能被 CAN_TX 管脚监视；
10： CAN_TX 管脚驱动显性值（'0’） ；
11： CAN_TX 管脚驱动隐形值（'1’） 。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Lback</name>
              <description>Loop back 模式使能。
0：禁止；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Silent</name>
              <description>Silent 模式使能。
0：禁止；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Basic</name>
              <description>Basic 模式使能。
0：禁止；
1：使能，此时 IF1 寄存器用作 Tx
Buffer， IF2 寄存器用作 Rx Buffer。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRP_EXTENSION</name>
          <displayName>BRP_EXTENSION</displayName>
          <description>BRP_EXTENSION 为 BRP 扩展寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BRPE</name>
              <description>波特率系数扩展。扩展后的波特率系数有 brpe 和 brp 共同组成，其中 brpe 构成 MSBs， brp 构成LSBs。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_COMMAND_REQUEST</name>
          <displayName>IF1_COMMAND_REQUEST</displayName>
          <description>IF1_COMMAND_REQUEST 为 IF1 命令请求寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x0001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>Busy 标志。
0： IF1 命令已经完成；
1： IF1 命令执行中。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Message Number</name>
              <description>报文对象序号。 CPU 写该位域后， IF1 命
令开始执行。
0x00：无效值，将指向 0x20；
0x01~0x20：报文对象序号；
0x21-0x3F：无效值，将指向 0x01-
0x1F。
其他： 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_COMMAND_MASK</name>
          <displayName>IF1_COMMAND_MASK</displayName>
          <description>IF1_COMMAND_MASK 为 IF1 命令掩码寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WR/RD</name>
              <description>读写命令， 控制 IF1 报文缓冲寄存器和
Message RAM 传输方向。0： 读命令，将 Message RAM 中存储的
报文对象回读到 IF1 报文缓冲寄存器；
1： 写命令，将 IF1 报文缓冲寄存器写入到
Message RAM 中存储的报文对象。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Mask</name>
              <description>命令掩码，控制 IF1_MASK 的传输。
当 WR/RD 寄存器为 1， 写命令时：0：不写入， 报文对象的 ID Mask、 Mdir、MXtd 不改变；
1：将 IF1_MASK1 和 IF1_MASK2 寄存器中的ID Mask、 Mdir、 MXtd 写入报文对象。当 WR/RD 寄存器为 0， 读命令时：
0：不回读， IF1_MASK 不改变；1：将报文对象的 ID Mask、 Mdir、 MXtd
回读到 IF1_MASK1 和 IF1_MASK2 寄存器中。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Arb</name>
              <description>命令掩码，控制 IF1_ARBITRATION 的传输。当 WR/RD 寄存器为 1， 写命令时：
0： 不写入， 报文对象的 ID、 Dir、 Xtd、MsgVal 不改变；1：将 IF1_ARBITRATION1 和IF1_ARBITRATION2 中的 ID、 Dir、
Xtd、 MsgVal 位写入报文对象。当 WR/RD 寄存器为 0， 读命令时：0：不回读， IF1_ARBITRATION 不改
变；1：将报文对象的 ID、 Dir、 Xtd、 MsgVal回读到 IF1_ARBITRATION1 和IF1_ARBITRATION2 寄存器中。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Control</name>
              <description>命令掩码，控制
IF1_MESSAGE_CONTROL 的传输。
当 WR/RD 寄存器为 1， 写命令时：
0： 不写入， 报文对象中的
IF1_MESSAGE_CONTROL 相关比特位
不改变；
1：将 IF1_MESSAGE_CONTROL 的比特
位写入报文对象。
当 WR/RD 寄存器为 0， 读命令时：
0：不回读， IF1_MESSAGE_CONTROL
不改变；
1：将报文对象中的相应比特位回读到
IF1_MESSAGE_CONTROL 寄存器中。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ClrIntPnd</name>
              <description>命令掩码，清除报文对象的中断待处理。
当 WR/RD 寄存器为 1，写命令时：
该位域忽略。
当 WR/RD 寄存器为 0，读命令时：
0： 报文对象的 IntPnd 位保持不变；
1：清除报文对象的 IntPnd 位。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxRqst/NewDat</name>
              <description>命令掩码， 控制报文对象的 TxRqst 位或
者 NewDat 位。
当 WR/RD 寄存器为 1 时，写命令时：
访问 TxRqst 位。
0： 将 IF1_MESSAGE_CONTROL 寄存器
的 TxRqst 位写入报文对象；
1： 忽略 IF1_MESSAGE_CONTROL 寄存
器的 TxRqst 位。 直接置位报文对象的
TxRqst 位，请求报文发送。
当 WR/RD 寄存器为 0 时，读命令时：访问 NewDat 位，
IF1_MESSAGE_CONTROL 寄存器的
NewData 位不会被更新。
0： 报文对象的 NewDat 位均保持不变；
1：清除报文对象的 NewDat 位。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DataA</name>
              <description>命令掩码，控制 IF1_DATAA 的传输。
当 WR/RD 寄存器为 1 时，写命令时：
0：报文对象中的数据 Byte 0-3 保持不
变；
1：将 IF1_DATAA 寄存器写入报文对象，
更新报文对象中的数据 Byte 0-3。
当 WR/RD 寄存器为 0 时，读命令时：
0： IF1_DATAA 寄存器保持不变；
1： 将报文对象中的数据 Byte 0-3 回读到
IF1_DATAA 寄存器中。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DataB</name>
              <description>命令掩码，控制 IF1_DATAB 的传输。
当 WR/RD 寄存器为 1 时，写命令时：
0：报文对象中的数据 Byte 4-7 保持不
变；
1：将 IF1_DATAB 寄存器写入报文对象，
更新报文对象中的数据 Byte 4~7。
当 WR/RD 寄存器为 0 时，读命令时：
0： IF1_DATAB 寄存器保持不变；
1： 将报文对象中的数据 Byte 4-7 回读到
IF1_DATAB 寄存器中。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_MASK1</name>
          <displayName>IF1_MASK1</displayName>
          <description>IF1_MASK1 为 IF1 掩码寄存器 1。</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Msk</name>
              <description>报文对象 ID 第 15 位至第 0 位掩码，用于
报文接收过滤。
0： ID 第 15 位至第 0 位不用于报文接收过
滤；
1： ID 第 15 位至第 0 位用于报文接收过
滤。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_MASK2</name>
          <displayName>IF1_MASK2</displayName>
          <description>IF1_MASK2 为 IF1 掩码寄存器 2。</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MXtd</name>
              <description>报文对象的拓展 ID 位（Xtd）掩码，用于
接收报文过滤。
0： Xtd 不用于报文接收过滤；
1： Xtd 用于报文接收过滤。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>MDir</name>
              <description>报文对象的方向位（Dir）掩码，用于接收
报文过滤。
0： Dir 不用于报文接收过滤；
1： Dir 用于报文接收过滤。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Msk</name>
              <description>报文对象 ID 第 28 位至第 16 位掩码，用于
接收报文过滤。0： ID 第 28 位至第 16 位不用于报文接收过滤；1： ID 第 28 位至第 16 位用于报文接收过滤。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_ARBITRATION1</name>
          <displayName>IF1_ARBITRATION1</displayName>
          <description>IF1_ARBITRATION1 为 IF1 仲裁寄存器 1。</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>报文对象的报文 ID 第 15 位至第 0 位。
注意：当报文对象用于收发扩展帧时，应使用全部 ID；当报文对象用于收发标准帧时，应使用 ID的高 11 位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_ARBITRATION2</name>
          <displayName>IF1_ARBITRATION2</displayName>
          <description>IF1_ARBITRATION2 为 IF1 仲裁寄存器 2。</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MsgVal</name>
              <description>报文对象有效使能。
0：禁止，该报文对象无效；
1：使能，该报文对象有效。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Xtd</name>
              <description>报文对象收发帧格式。
0：该报文对象收发标准格式帧；
1：该报文对象收发扩展格式帧。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Dir</name>
              <description>报文对象的方向。
0： 报文对象为接收方向， 接收报文；
1： 报文对象为发送方向， 发送报文。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ID</name>
              <description>报文对象的报文 ID 第 28 位至第 16 位。
注意：当报文对象用于收发扩展帧时，应使用全部 ID；当报文对象用于收发标准帧时，应使用 ID的高 11 位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_MESSAGE_CONTROL</name>
          <displayName>IF1_MESSAGE_CONTROL</displayName>
          <description>IF1_MESSAGE_CONTROL 为 IF1 报文控制寄存器。</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NewDat</name>
              <description>报文对象的新数据写入状态。
报文对象为发送方向时：
0：无新的帧数据写入报文对象，报文对象
成功发送后会清除报文对象中的 newdat；
1：有新的帧数据写入报文对象。
报文对象为接收方向时：
0：报文对象没有接收到新的帧；
1：报文对象接收到了新的帧。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>MsgLst</name>
              <description>报文对象的报文丢失标识（仅在报文对象
为接收方向时有效） 。
0： 报文对象无报文丢失；
1： 报文对象有报文丢失，当报文对象的
newdat 位未被清除，新的报文已接收时，
报文对象的 msglst 置 1。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>IntPnd</name>
              <description>报文对象的中断待处理标识。
0：该报文对象不是中断源；1：该报文对象是中断源。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Umask</name>
              <description>报文对象是否使用报文掩码，用于报文接
收过滤。
0：不使用；
1： 使用相关掩码位（Msk28-0， MXtd 和
Mdir） 用于报文接收过滤。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxIE</name>
              <description>发送中断使能。
0： 不使能，帧发送成功后 intpnd 保持不
变；
1： 使能，帧发送成功后 intpnd 将被置1。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>RxIE</name>
              <description>接收中断使能。
0： 不使能，帧接收成功后 intpnd 保持不
变；
1： 使能， 帧接收成功后 intpnd 将被置1。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>RmtEn</name>
              <description>远程帧使能。
0： 不使能， 接收远程帧后 TxRqst 保持不
变；
1： 使能， 接收远程帧后 TxRqst 置 1。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxRqst</name>
              <description>传输请求。
0：该报文对象没在等待传输；
1：该报文对象请求传输，并且还没传输完
成。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>EoB</name>
              <description>多报文接收模式。
0：该报文对象不是多报文接收模式中最后
一个报文对象；
1：该报文对象是单一报文或是多报文接收
模式中最后一个报文对象。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DLC</name>
              <description>数据长度编码。0x0-0x8：数据帧有 0-8 个数据字节；
0x9~0xF：数据帧有 8 个数据字节。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_DATAA1</name>
          <displayName>IF1_DATAA1</displayName>
          <description>IF1_DATAA1 为 IF1 数据 A1 寄存器。</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA1</name>
              <description>CAN 帧数据 Byte 1</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA0</name>
              <description>CAN 帧数据 Byte 0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_DATAA2</name>
          <displayName>IF1_DATAA2</displayName>
          <description>IF1_DATAA2 为 IF1 数据 A2 寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA3</name>
              <description>CAN 帧数据 Byte 3。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA2</name>
              <description>CAN 帧数据 Byte 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_DATAB1</name>
          <displayName>IF1_DATAB1</displayName>
          <description>IF1_DATAB1 为 IF1 数据 B1 寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA5</name>
              <description>CAN 帧数据 Byte 5。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA4</name>
              <description>CAN 帧数据 Byte 4。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF1_DATAB2</name>
          <displayName>IF1_DATAB2</displayName>
          <description>IF1_DATAB2 为 IF1 数据 B2 寄存器。</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA7</name>
              <description>CAN 帧数据 Byte 7。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA6</name>
              <description>CAN 帧数据 Byte 6。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_COMMAND_REQUEST</name>
          <displayName>IF2_COMMAND_REQUEST</displayName>
          <description>IF2_COMMAND_REQUEST 为 IF2 命令请求寄存器。</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>busy 标志。
0： IF2 命令已经完成；
1： IF2 命令执行中。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Message Number</name>
              <description>报文对象序号。 CPU 写该位域后， IF2 命
令开始执行。
0x00：无效值，将指向 0x20；
0x01~0x20：报文对象序号；
0x21-0x3F：无效值，将指向 0x01-0x1F。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_COMMAND_MASK</name>
          <displayName>IF2_COMMAND_MASK</displayName>
          <description>IF2_COMMAND_MASK 为 IF2 命令掩码寄存器。</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WR/RD</name>
              <description>读写命令， 控制 IF2 报文缓冲寄存器和
message ram 传输方向。
0： 读命令，将 message ram 中存储的报
文对象回读到 IF2 报文缓冲寄存器；
1： 写命令，将 IF2 报文缓冲寄存器写入到
message ram 中存储的报文对象。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Mask</name>
              <description>命令掩码，控制 IF2_MASK 的传输。
当 wr/rd 寄存器为 1， 写命令时：0：不写入， 报文对象的 id mask、 mdir、mxtd 不改变；
1：将 IF2_MASK1 和 IF2_MASK2 寄存器中的 id mask、 mdir、 mxtd 写入报文对象。
当 wr/rd 寄存器为 0， 读命令时：0：不回读， IF2_MASK 不改变；1：将报文对象的 id mask、 mdir、 mxtd 回
读到 IF2_MASK1 和 IF2_MASK2 寄存器中。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Arb</name>
              <description>命令掩码，控制 IF2_ARBITRATION 的传
输。
当 WR/RD 寄存器为 1， 写命令时：
0： 不写入， 报文对象的 id、 dir、 xtd、
msgval 不改变；
1：将 IF2_ARBITRATION1 和
IF2_ARBITRATION2 中的 ID、 dir、 xtd、
msgval 位写入报文对象。
当 WR/RD 寄存器为 0， 读命令时：0：不回读， IF2_ ARBITRATION 不改
变；
1：将报文对象的 ID、 dir、 xtd、 msgVal
回读到 IF2_ARBITRATION1 和
IF2_ARBITRATION2 寄存器中。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Control</name>
              <description>命令掩码，控制
IF2_MESSAGE_CONTROL 的传输。
当 WR/RD 寄存器为 1， 写命令时：
0： 不写入， 报文对象中的IF2_MESSAGE_CONTROL 相关比特位不改变；
1：将 IF2_MESSAGE_CONTROL 的比特位写入报文对象。当 WR/RD 寄存器为 0， 
读命令时：
0：不回读， IF2_MESSAGE_CONTROL不改变；1：将报文对象中的相应比特位回读到IF2_MESSAGE_CONTROL 寄存器中。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ClrIntPnd</name>
              <description>命令掩码，清除报文对象的中断待处理。
当 WR/RD 寄存器为 1，写命令时：
该位域忽略。
当 WR/RD 寄存器为 0，读命令时：
0： 报文对象的 IntPnd 位保持不变；
1：清除报文对象的 IntPnd 位。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxRqst/NewDat</name>
              <description>命令掩码， 控制报文对象的 TxRqst 位或者NewDat 位。
当 WR/RD 寄存器为 1 时，写命令时：
访问 TxRqst 位。
0：报文对象 TxRqst 位保持不变；
1：置位报文对象的 TxRqst 位，请求报文发送。
当 WR/RD 寄存器为 0 时，读命令时：
访问 NewDat 位。
0：报文对象的 NewDat 位保持不变；
1：清除报文对象的 NewDat 位。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DataA</name>
              <description>命令掩码，控制 IF2_DATAA 的传输。
当 WR/RD 寄存器为 1 时，写命令时：
0：报文对象中的数据 Byte 0-3 保持不
变；
1：将 IF2_DATAA 寄存器写入报文对象，
更新报文对象中的数据 Byte 0-3。
当 WR/RD 寄存器为 0 时，读命令时：
0： IF2_DATAA 寄存器保持不变；
1： 将报文对象中的数据 Byte 0-3 回读到
IF2_DATAA 寄存器中。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DataB</name>
              <description>命令掩码，控制 IF2_DATAB 的传输。
当 WR/RD 寄存器为 1 时，写命令时：
0：报文对象中的数据 Byte 4-7 保持不
变；
1：将 IF2_DATAB 寄存器写入报文对象，
更新报文对象中的数据 Byte 4-7。
当 WR/RD 寄存器为 0 时，读命令时：
0： IF2_DATAB 寄存器保持不变；
1： 将报文对象中的数据 Byte 4-7 回读到
IF2_DATAB 寄存器中。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_MASK1</name>
          <displayName>IF2_MASK1</displayName>
          <description>IF2_MASK1 为 IF2 掩码寄存器 1。</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Msk</name>
              <description>报文对象 ID 第 15 位至第 0 位掩码，用于
报文接收过滤。
0： ID 第 15 位至第 0 位不用于报文接收过
滤；
1： ID 第 15 位至第 0 位用于报文接收过
滤。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_MASK2</name>
          <displayName>IF2_MASK2</displayName>
          <description>IF2_MASK2 为 IF2 掩码寄存器 2。</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MXtd</name>
              <description>报文对象的拓展 ID 位（xtd）掩码，用于
报文接收过滤。
0： xtd 不用于报文接收过滤；
1： xtd 用于报文接收过滤。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Mdir</name>
              <description>报文对象的方向位（dir）掩码，用于报文
接收过滤。
0： dir 不用于报文接收过滤；
1： dir 用于报文接收过滤。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Msk</name>
              <description>报文对象 ID 第 28 位至第 16 位掩码，用于
报文接收过滤。0： ID 第 28 位至第 16 位不用于报文接收过滤；1： ID 第 28 位至第 16 位用于报文接收过滤。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_ARBITRATION1</name>
          <displayName>IF2_ARBITRATION1</displayName>
          <description>IF2_ARBITRATION1 为 IF2 仲裁寄存器 1。</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID</name>
              <description>报文对象的报文 ID 第 15 位至第 0 位。
注意：
当报文对象用于收发扩展帧时，应使用全
部 ID；
当报文对象用于收发标准帧时，应使用 ID
的高 11 位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_ARBITRATION2</name>
          <displayName>IF2_ARBITRATION2</displayName>
          <description>IF2_ARBITRATION2 为 IF2 仲裁寄存器 2。</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MsgVal</name>
              <description>报文对象有效使能。
0：禁止，该报文对象无效；
1：使能，该报文对象有效。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Xtd</name>
              <description>报文对象收发帧格式。
0：该报文对象收发标准格式帧；
1：该报文对象收发扩展格式帧。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dir</name>
              <description>报文对象的方向。
0： 报文对象为接收方向， 接收报文；1： 报文对象为发送方向， 发送报文。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ID</name>
              <description>报文对象的报文 ID 第 28 位至第 16 位。
注意：
当报文对象用于收发扩展帧时，应使用全
部 ID；
当报文对象用于收发标准帧时，应使用 ID
的高 11 位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_MESSAGE_CONTROL</name>
          <displayName>IF2_MESSAGE_CONTROL</displayName>
          <description>IF2_MESSAGE_CONTROL 为 IF2 报文控制寄存器。</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NewDat</name>
              <description>报文对象的帧数据标识。
报文对象为发送方向时：
0：无新的帧数据写入报文对象，报文对象
成功发送后会清除报文对象中的 newdat；
1：有新的帧数据写入报文对象。
报文对象为接收方向时：
0：报文对象没有接收到新的帧；
1：报文对象接收到了新的帧。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>MsgLst</name>
              <description>报文对象的报文丢失标识（仅在报文对象
为接收方向时有效） 。
0： 报文对象无报文丢失；
1： 报文对象有报文丢失，当报文对象的
newdat 位未被清除，新的报文已接收时，
报文对象的 msglst 置 1。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>IntPnd</name>
              <description>报文对象的中断待处理标识。0：该报文对象不是中断源；
1：该报文对象是中断源。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>Umask</name>
              <description>报文对象是否使用报文掩码，用于报文接
收过滤。
0：不使用；
1： 使用相关掩码位（msk28-0， mxtd 和
mdir） 用于报文接收过滤。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxIE</name>
              <description>发送中断使能。
0： 不使能，帧发送成功后 intpnd 保持不
变；
1： 使能，帧发送成功后 intPnd 将被置1。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>RxIE</name>
              <description>接收中断使能。
0： 不使能，帧接收成功后 intpnd 保持不
变；
1： 使能， 帧接收成功后 intpnd 将被置1。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>RmtEn</name>
              <description>远程帧使能。
0： 不使能， 接收远程帧后 TxRqst 保持不
变；
1： 使能， 接收远程帧后 TxRqst 置 1。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>TxRqst</name>
              <description>传输请求。
0：该报文对象没在等待传输；
1：该报文对象请求传输，并且还没传输完
成。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>EoB</name>
              <description>多报文接收模式。
0：该报文对象不是多报文接收模式中最后
一个报文对象；
1：该报文对象是单一报文或是多报文接收
模式中最后一个报文对象。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DLC</name>
              <description>数据长度编码。
0x0-0x8：数据帧有 0-8 个数据字节；
0x9-0xF：数据帧有 8 个数据字节。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_DATAA1</name>
          <displayName>IF2_DATAA1</displayName>
          <description>IF2_DATAA1 为 IF2 数据 A1 寄存器。</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA1</name>
              <description>CAN 帧数据 Byte 1。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA0</name>
              <description>CAN 帧数据 Byte 0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_DATAA2</name>
          <displayName>IF2_DATAA2</displayName>
          <description>IF2_DATAA2 为 IF2 数据 A2 寄存器。</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA3</name>
              <description>CAN 帧数据 Byte 3。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA2</name>
              <description>CAN 帧数据 Byte 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_DATAB1</name>
          <displayName>IF2_DATAB1</displayName>
          <description>IF2_DATAB1 为 IF2 数据 B1 寄存器。</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA5</name>
              <description>CAN 帧数据 Byte 5。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA4</name>
              <description>CAN 帧数据 Byte 4。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IF2_DATAB2</name>
          <displayName>IF2_DATAB2</displayName>
          <description>IF2_DATAB2 为 IF2 数据 B2 寄存器。</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DATA7</name>
              <description>CAN 帧数据 Byte 7。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DATA6</name>
              <description>CAN 帧数据 Byte 6。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TRANSMISSION_REQUEST1</name>
          <displayName>TRANSMISSION_REQUEST1</displayName>
          <description>TRANSMISSION_REQUEST1 为传输请求状态寄存器 1。</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TxRqst16-1</name>
              <description>传输请求状态（TxRqst16-1 每 bit 分别对
应报文对象 16-1） 。 CPU 可以回读检查传
输请求中的报文对象。 CPU 可以通过 IF
报文对象接口寄存器组， 配置报文对象发
出传输请求。
0：该报文对象没有等待传输；
1：该报文对象请求发送，并且还没传输完
成。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRANSMISSION_REQUEST2</name>
          <displayName>TRANSMISSION_REQUEST2</displayName>
          <description>TRANSMISSION_REQUEST2 为传输请求状态寄存器 2。</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TxRqst32-17</name>
              <description>传输请求状态（TxRqst32-17 每 bit 分别对
应报文对象 32-17） 。 CPU 可以回读检查
传输请求中的报文对象。 CPU 可以通过 IF
报文对象接口寄存器组， 配置报文对象发
出传输请求。
0：该报文对象没有等待传输；
1：该报文对象请求发送，并且还没传输完
成。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NEW_DATA1</name>
          <displayName>NEW_DATA1</displayName>
          <description>NEW_DATA1 为新数据状态寄存器 1。</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NewDat16-1</name>
              <description>新数据写入状态（newdat16-1 每 bit 分别
对应报文对象 16-1） 。 CPU 可以回读检查
报文对象是否接收到新的数据帧。 CPU 可
以通过 IF 报文对象接口寄存器组， 配置报
文对象 newdat 位域置位或清零。 CAN 控
制器的报文对象在接收报文成功后， 相应
的 newdat 自动置位。
0：无新数据写入该报文对象；
1：有新数据写入该报文对象。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NEW_DATA2</name>
          <displayName>NEW_DATA2</displayName>
          <description>NEW_DATA2 为新数据状态寄存器 2。</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NewDat32-17</name>
              <description>新数据写入状态（newdat32-17 每 bit 分别
对应报文对象 32-17） 。 CPU 可以回读检
查报文对象是否接收到新的数据帧。 CPU
可以通过 IF 报文对象接口寄存器组， 配置
报文对象 newdat 位域置位或清零。 CAN
控制器的报文对象在接收报文成功后， 相
应的 newdat 自动置位。
0：无新数据写入该报文对象；
1：有新数据写入该报文对象。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_PENDING1</name>
          <displayName>INTERRUPT_PENDING1</displayName>
          <description>INTERRUPT_PENDING1 为中断待处理状态寄存器 1。</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>intpnd16-1</name>
              <description>中断待处理状态（intpnd16-1 每 bit 分别对
应报文对象 16-1） 。 CPU 可以回读检查报
文对象是否是中断源。 CPU 可以通过 IF
报文对象接口寄存器组， 配置报文对象
intpnd 位域置位或清零。 CAN 控制器的报
文对象在接收报文成功后，或者发送报文
成功后，相应的 intpnd 自动置位。
0：该报文对象不是中断源；
1：该报文对象是中断源。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_PENDING2</name>
          <displayName>INTERRUPT_PENDING2</displayName>
          <description>INTERRUPT_PENDING2 为中断待处理状态寄存器 2。</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>intpnd32-17</name>
              <description>中断待处理状态（intpnd32-17 每 bit 分别
对应报文对象 32-17） 。 CPU 可以回读检
查报文对象是否是中断源。 CPU 可以通过
IF 报文对象接口寄存器组， 配置报文对象
intpnd 位域置位或清零。 CAN 控制器的报
文对象在接收报文成功后，或者发送报文
成功后，相应的 intpnd 自动置位。
0：该报文对象不是中断源；
1：该报文对象是中断源。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MESSAGE_VALID1</name>
          <displayName>MESSAGE_VALID1</displayName>
          <description>MESSAGE_VALID1 为报文有效状态寄存器 1。</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MsgVal16-1</name>
              <description>报文对象有效状态（msgval16-1 每 bit 分
别对应报文对象 16-1） 。 CPU 可以回读检
查报文对象是否有效。 CPU 可以通过 IF
报文对象接口寄存器组， 配置报文对象
msgval 位域置位或清零。
0：该报文对象无效；
1：该报文对象有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MESSAGE_VALID2</name>
          <displayName>MESSAGE_VALID2</displayName>
          <description>MESSAGE_VALID2 为报文有效状态寄存器 2。</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MsgVal32-17</name>
              <description>报文对象有效状态（msgval32-17 每 bit 分
别对应报文对象 32-17） 。 CPU 可以回读
检查报文对象是否有效。 CPU 可以通过 IF
报文对象接口寄存器组， 配置报文对象
msgval 位域置位或清零。
0：该报文对象无效；
1：该报文对象有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CAPM0</name>
      <description>capm_ccr peripheral interface</description>
      <groupName>CAPM</groupName>
      <baseAddress>0x14B00000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x50</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>capm_ccr</name>
        <value>19</value>
      </interrupt>
      <registers>
        <register>
          <name>REV_INFO</name>
          <displayName>REV_INFO</displayName>
          <description>Revision Information，版本信息。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x01210915</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>revision</name>
              <description>IP版本号。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>y_m_d_info</name>
              <description>版本日期（20XX年/月/日）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSR</name>
          <displayName>TSR</displayName>
          <description>Time-Stamp Register，时间戳计数器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>tsr</name>
              <description>时间戳计数器，可用于监视计数器状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSR_DIV</name>
          <displayName>TSR_DIV</displayName>
          <description>Time-Stamp Divider Register，时间戳计数器分频配置寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tscnt_div</name>
              <description>计数器分频。
0x0000:每1clk计数器+1；
0x0001:每2clk计数器+1；
0x0002:每3clk计数器+1；
…
0xFFFF:每65536clk计数器+1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EAR</name>
          <displayName>EAR</displayName>
          <description>Event Amount Register，边沿数量寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ear</name>
              <description>边沿数量计数值，只读。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EAR_CMP</name>
          <displayName>EAR_CMP</displayName>
          <description>EAR Compare Value Register，边沿数量比较寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>eacmp</name>
              <description>边沿数量计数比较值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNC_PHS</name>
          <displayName>SYNC_PHS</displayName>
          <description>Sync Phase，同步相位寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>sync_phs</name>
              <description>计数器同步相位值寄存器，硬件同步源或软件同步（sync_sw）有效时，将TSR寄存器置位为该值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR1</name>
          <displayName>ECR1</displayName>
          <description>Event 1 Capture Register，捕获事件1时间戳。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ecr1</name>
              <description>捕获寄存器1（事件1）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR2</name>
          <displayName>ECR2</displayName>
          <description>Event 2 Capture Register，捕获事件2时间戳。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ecr2</name>
              <description>捕获寄存器2（事件2）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR3</name>
          <displayName>ECR3</displayName>
          <description>Event 3 Capture Register，捕获事件3时间戳。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ecr3</name>
              <description>捕获寄存器3（事件3）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR4</name>
          <displayName>ECR4</displayName>
          <description>Event 4 Capture Register，捕获事件4时间戳。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ecr4</name>
              <description>捕获寄存器4（事件4）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECSEQR</name>
          <displayName>ECSEQR</displayName>
          <description>Event Capture 
Sequence Register，事件捕获序列。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crt_edge</name>
              <description>当前输入信号电平（反映原输入信号的电平，不受预分频影响）。
00：当前为低电平；
01：上升沿；
10：下降沿；
11：高电平。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>nxtldecr</name>
              <description>读取下个被加载的ECR。
00：ECR1；
01：ECR2；
10：ECR3；
11：ECR4。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FTCR</name>
          <displayName>FTCR</displayName>
          <description>Filter Control Register，滤波控制。</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ft_lev</name>
              <description>滤波等级配置。
0x0000：不过滤毛刺；
0x0001：过滤最宽1时钟周期宽度毛刺；
……
0x1FFF：过滤最宽8191时钟周期宽度毛刺。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ft_en</name>
              <description>滤波功能使能开关。
0：关闭；
1：开启。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR1</name>
          <displayName>CCR1</displayName>
          <description>Control and Configure Register 1，输入信号处理，事件产生和行为模式寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000600</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt_edge_sel</name>
              <description>边沿数量计数的边沿类型选择。
00：不记录边沿数量；
01：对上升沿数量计数；
10：对下降沿数量计数；
11：对双沿数量计数。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>psc</name>
              <description>输入信号预分频系数。
0x00：不分频；
0x01：输入信号2倍分频；
0x02：输入信号4倍分频；
...
0xFF：输入信号510倍分频。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dmaevt_sel</name>
              <description>在捕获序列中，决定由哪个事件产生DMA请求。
00：事件1（EVT1）；
01：事件2（EVT2）；
10：事件3（EVT3）；
11：事件4（EVT4）。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ecrlden</name>
              <description>捕获使能。
0：关闭捕获；
1：开启捕获。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt4rst</name>
              <description>事件4是否复位TSR。
0：事件4不复位TSR；
1：根据该捕获事件复位TSR。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt4pol</name>
              <description>事件4捕获边沿选择。
0：事件4捕获下降沿；
1：事件4捕获上升沿。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt3rst</name>
              <description>事件3是否复位TSR。
0x0:事件3不复位TSR；
0x1:根据该捕获事件复位TSR。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt3pol</name>
              <description>事件3捕获边沿选择。
0：事件3捕获下降沿；
1：事件3捕获上升沿。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt2rst</name>
              <description>事件2是否复位TSR。
0:事件2不复位TSR；
1:根据该捕获事件复位TSR。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt2pol</name>
              <description>事件2捕获边沿选择。
0：事件2捕获下降沿；
1：事件2捕获上升沿。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt1rst</name>
              <description>事件1是否复位TSR。
0:事件1不复位TSR；
1:根据该捕获事件复位TSR。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt1pol</name>
              <description>事件1捕获边沿选择。
0：事件1捕获下降沿；
1：事件1捕获上升沿。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR2</name>
          <displayName>CCR2</displayName>
          <description>Control and Configure Register 2，仿真器模式。</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>emu_stop_en</name>
              <description>仿真器停止TSR使能。
0：禁止仿真器停止计数器；
1：允许仿真器停止计数器。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR3</name>
          <displayName>CCR3</displayName>
          <description>Control and Configure Register 3，工作模式。</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>seq_stop</name>
              <description>捕获序列终点/循环边界。
00：事件1（EVT1）为捕获终点/循环边界；
01：事件2（EVT2）为捕获终点/循环边界；
10：事件3（EVT3）为捕获终点/循环边界；
11：事件4（EVT4）为捕获终点/循环边界。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cap_mode</name>
              <description>捕获模式选择。
0：循环捕获模式；（事件1到循环边界后循环）；
1：单轮次捕获模式。（事件1到捕获终点后结束）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTENR</name>
          <displayName>INTENR</displayName>
          <description>Interrupt Enable Register，中断使能寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmareq_ovf_en</name>
              <description>DMA请求溢出中断使能。不使能时，即屏蔽相应的中断状态，不影响相应的原始中断。若全部不使能，模块不会上报中断给CPU。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ear_ovf_en</name>
              <description>边沿数量计数溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>earcmp_match_en</name>
              <description>边沿数量计数比较匹配中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ecr_ovf_en</name>
              <description>捕获溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsr_ovf_en</name>
              <description>TSR溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt4_en</name>
              <description>事件4中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt3_en</name>
              <description>事件3中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt2_en</name>
              <description>事件2中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt1_en</name>
              <description>事件1中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTRAWR</name>
          <displayName>INTRAWR</displayName>
          <description>Raw Interrupt Register，原始中断寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmareq_ovf_raw</name>
              <description>DMA请求溢出原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ear_ovf_raw</name>
              <description>边沿数量计数溢出原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>earcmp_match_raw</name>
              <description>边沿数量比较匹配原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ecr_ovf_raw</name>
              <description>捕获溢出原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsr_ovf_raw</name>
              <description>TSR溢出原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt4_raw</name>
              <description>事件4原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt3_raw</name>
              <description>事件3原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt2_raw</name>
              <description>事件2原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>evt1_raw</name>
              <description>事件1原始中断，写1清除。
0：无原始中断；
1：有原始中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTINJR</name>
          <displayName>INTINJR</displayName>
          <description>Interrupt Injection Register，中断注入寄存器。</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmareq_ovf_inj</name>
              <description>注入DMA请求溢出原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ear_ovf_inj</name>
              <description>注入边沿数量计数溢出原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>earcmp_match_inj</name>
              <description>注入边沿数量比较匹配原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ecr_ovf_inj</name>
              <description>注入捕获溢出原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>tsr_ovf_inj</name>
              <description>注入TSR溢出原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>evt4_inj</name>
              <description>注入事件4原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>evt3_inj</name>
              <description>注入事件3原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>evt2_inj</name>
              <description>注入事件2原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>evt1_inj</name>
              <description>注入事件1原始中断。写1自动清零。
0：不注入；
1：注入。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INTFLGR</name>
          <displayName>INTFLGR</displayName>
          <description>Interrupt Flag Register，中断标志/状态寄存器。</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmareq_ovf_int</name>
              <description>DMA请求溢出中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ear_ovf_int</name>
              <description>边沿数量计数溢出中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>earcmp_match_int</name>
              <description>边沿数量计数比较匹配中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ecr_ovf_int</name>
              <description>捕获溢出中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tsr_ovf_int</name>
              <description>TSR溢出中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>evt4_int</name>
              <description>事件4中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>evt3_int</name>
              <description>事件3中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>evt2_int</name>
              <description>事件2中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>evt1_int</name>
              <description>事件1中断标志。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CAPM0">
      <name>CAPM1</name>
      <baseAddress>0x14B01000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="CAPM0">
      <name>CAPM2</name>
      <baseAddress>0x14B02000</baseAddress>
    </peripheral>
    <peripheral>
      <name>CAPM_COMM</name>
      <description>capm_comm peripheral interface</description>
      <groupName>CAPM_COMM</groupName>
      <baseAddress>0x14B03000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x34</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>capm_comm</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>REV_INFO</name>
          <displayName>REV_INFO</displayName>
          <description>Revision Information，版本信息寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x01210528</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>revision</name>
              <description>IP版本号。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>y_m_d_info</name>
              <description>版本日期（20XX年/月/日）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPM_GENE_CR</name>
          <displayName>CAPM_GENE_CR</displayName>
          <description>Capture module general control Reg，通用配置寄存器。包含：软件同步触发、工作状态复位和 TSR 计数器启停控制。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000700</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sync_sw_capm2</name>
              <description>触发CAPM2同步，对TSR置位，复位捕获序列。软件写1后自动清零。
0：不同步；
1：同步。写1后自动清零。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>sync_sw_capm1</name>
              <description>触发CAPM1同步，对TSR置位，复位捕获序列。软件写1后自动清零。
0：不同步；
1：同步。写1后自动清零。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>sync_sw_capm0</name>
              <description>触发CAPM0同步，对TSR置位，复位捕获序列。软件写1后自动清零。
0：不同步；
1：同步。写1后自动清零。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>stat_rst_capm2</name>
              <description>CAPM2工作状态复位，复位范围包括：TSR计数器、EAR计数器、捕获序列、TSR分频计数器和原始中断。
0：不复位；
1：复位。写1后自动清零。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>stat_rst_capm1</name>
              <description>CAPM1工作状态复位，复位范围包括：TSR计数器、EAR计数器、捕获序列、TSR分频计数器和原始中断。
0：不复位；
1：复位。写1后自动清零。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>stat_rst_capm0</name>
              <description>CAPM0工作状态复位，复位范围包括：TSR计数器、EAR计数器、捕获序列、TSR分频计数器和原始中断。
0：不复位；
1：复位。写1后自动清零。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tsr_stop_capm2</name>
              <description>CAPM2 TSR暂停计数使能。
0：CAPM2 TSR继续计数；
1：CAPM2 TSR暂停计数。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsr_stop_capm1</name>
              <description>CAPM1 TSR暂停计数使能。
0：CAPM2 TSR继续计数；
1：CAPM2 TSR暂停计数。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsr_stop_capm0</name>
              <description>CAPM0 TSR暂停计数使能。
0：CAPM2 TSR继续计数；
1：CAPM2 TSR暂停计数。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>restart_capm2</name>
              <description>CAPM2开始一次新的单轮次捕获。
0：不开始；
1：开始。写1后自动清零。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>restart_capm1</name>
              <description>CAPM1开始一次新的单轮次捕获。
0：不开始；
1：开始。写1后自动清零。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>restart_capm0</name>
              <description>CAPM0开始一次新的单轮次捕获。
0：不开始；
1：开始。写1后自动清零。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNC_SELR0</name>
          <displayName>SYNC_SELR0</displayName>
          <description>Sync Selection Register(for CAPM0)，CAPM0同步设置选择寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm0_synci_en</name>
              <description>CAPM0 硬件，软件同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm0_sync_sel</name>
              <description>CAPM0的硬件同步源选择。
0x0：无同步源；
0x1：APT0同步输出信号；
0x2：APT1同步输出信号；
0x3：APT2同步输出信号；
0x4：APT3同步输出信号；
0x5：APT4同步输出信号；
0x6：APT5同步输出信号；
0x7：APT6同步输出信号；
0x8：APT7同步输出信号；
0x9：APT8同步输出信号；0xA：无同步源；
…
0xF：无同步源。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNC_SELR1</name>
          <displayName>SYNC_SELR1</displayName>
          <description>Sync Selection Register(for CAPM1)，CAPM1同步设置选择寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm1_synci_en</name>
              <description>CAPM1 硬件，软件同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm1_sync_sel</name>
              <description>CAPM1的硬件同步源选择：
同capm0_sync_sel。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNC_SELR2</name>
          <displayName>SYNC_SELR2</displayName>
          <description>Sync Selection Register(for CAPM2)，CAPM2同步设置选择寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm2_synci_en</name>
              <description>CAPM2 硬件，软件同步使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm2_sync_sel</name>
              <description>CAPM2的硬件同步源选择：同capm0_sync_sel。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INPUT_SELR0</name>
          <displayName>INPUT_SELR0</displayName>
          <description>Input Source Selection Register(for CAPM0)，CAPM0输入源选择寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm0_in_sel</name>
              <description>CAPM0输入源选择。
0：CAPM0_SRC0；
1：CAPM0_SRC1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INPUT_SELR1</name>
          <displayName>INPUT_SELR1</displayName>
          <description>Input Source Selection Register(for CAPM1)，CAPM1输入源选择寄存器。</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm1_in_sel</name>
              <description>CAPM1输入源选择。
0：CAPM1_SRC0；
1：CAPM1_SRC1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INPUT_SELR2</name>
          <displayName>INPUT_SELR2</displayName>
          <description>Input Source Selection Register(for CAPM2)，CAPM2输入源选择寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm2_in_sel</name>
              <description>CAPM2输入源选择。
0：CAPM2_SRC0；
1：CAPM2_SRC1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CFD</name>
      <description>CFD_APB_REG peripheral interface</description>
      <groupName>CFD</groupName>
      <baseAddress>0x10020000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CFD_APB_REG</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>CFDVER</name>
          <displayName>CFDVER</displayName>
          <description>CFD Version，CFD版本信息寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x01210927</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_ver</name>
              <description>版本信息。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_step</name>
              <description>版本信息。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_substep</name>
              <description>版本信息。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>year</name>
              <description>年。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>month_day</name>
              <description>月日。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDCTRL</name>
          <displayName>CFDCTRL</displayName>
          <description>CFD Control，CFD控制寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cfden</name>
              <description>CFD 使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDWDOH</name>
          <displayName>CFDWDOH</displayName>
          <description>CFD Check Window High Value，CFD检查窗口上限寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x0000001F</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cfdwdoh</name>
              <description>CFD 检查窗口上界限，默认为（从0x0计数到0x1F）32个LOSC周期即检测时间1ms，CFDCNT大于等于该值说明检测到PLL参考时钟失效（Clock_fail）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDCNTLOCK</name>
          <displayName>CFDCNTLOCK</displayName>
          <description>CFD Count Lock Value，CFD计数锁存值寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cfdcnt_lock</name>
              <description>CFD 内部计数器计数锁存值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDINTENA</name>
          <displayName>CFDINTENA</displayName>
          <description>CFD Interrupt Enable，CFD中断使能寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>clk_fail_en</name>
              <description>CFD 检测到PLL参考时钟失效中断使能。不使能时，即屏蔽相应的中断状态，不影响相应的原始中断。若全部不使能，CFD不会上报中断给CPU。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_en</name>
              <description>CFD 检测结束中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDINTSTS</name>
          <displayName>CFDINTSTS</displayName>
          <description>CFD Interrupt Status，CFD中断状态寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>clk_fail_int</name>
              <description>CFD 检测到PLL参考时钟失效中断。
0：无中断；
1：有中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>chk_end_int</name>
              <description>CFD 检测结束中断。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDINTRAW</name>
          <displayName>CFDINTRAW</displayName>
          <description>CFD Raw Interrupt，CFD原始中断寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>clk_fail_raw</name>
              <description>CFD 检测到PLL参考时钟失效原始中断。当CMCTRL[cmen]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_raw</name>
              <description>CFD 检测结束中断原始中断。当CMCTRL[cmen]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CFDINTINJ</name>
          <displayName>CFDINTINJ</displayName>
          <description>CFD Interrupt Injection，CFD中断注入寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>clk_fail_inj</name>
              <description>CFD 检测到PLL参考时钟失效中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_inj</name>
              <description>CFD 检测结束中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CMM</name>
      <description>CMM_APB_REG peripheral interface</description>
      <groupName>CMM</groupName>
      <baseAddress>0x10010000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x2c</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CMM_APB_REG</name>
        <value>11</value>
      </interrupt>
      <registers>
        <register>
          <name>CMVER</name>
          <displayName>CMVER</displayName>
          <description>CMM Version，CMM版本信息寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x01210922</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_ver</name>
              <description>版本信息。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_step</name>
              <description>版本信息。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_substep</name>
              <description>版本信息。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>year</name>
              <description>年。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>month_day</name>
              <description>月日。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMCTRL</name>
          <displayName>CMCTRL</displayName>
          <description>CMM Control，CMM控制寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmen</name>
              <description>CMM使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMTGTCTRL</name>
          <displayName>CMTGTCTRL</displayName>
          <description>CMM Target Clock Control，CMM目标时钟控制寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tgt_edgesel</name>
              <description>CMM 目标时钟有效沿选择。
00：上升沿；
01：下降沿；
10：双沿；
11：无有效沿。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tgtscale</name>
              <description>CMM 目标时钟分频系数，偶数倍占空比50%分频，CMM使用分频后的时钟作为被监控对象。
000：不分频；
001：32分频；
010：128分频；
011：1024分频；
100：8192分频；
其他：8192分频。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tgtsel</name>
              <description>CMM 目标时钟源选择。
000：目标时钟源0，clk_losc；
001：目标时钟源1，clk_hosc；
010：目标时钟源2，clk_xtal；
011：目标时钟源3，clk_hs；
100：目标时钟源4，clk_ls；
101：目标时钟源5，暂无；
110：目标时钟源6，暂无；
111：目标时钟源7，暂无。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMREFCTRL</name>
          <displayName>CMREFCTRL</displayName>
          <description>CMM Reference Clock Control，CMM参考时钟控制寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>refdiv</name>
              <description>CMM 参考时钟分频系数，CMM使用分频后的时钟作为监控参考。
00：不分频；
01：4分频；
10：8分频；
11：32分频。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>refsel</name>
              <description>CMM 参考时钟源选择。
00：参考时钟源0，clk_losc；
01：参考时钟源1，clk_hosc；
10：参考时钟源2，clk_xtal；
11：参考时钟源3，clk_hs。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMWDOH</name>
          <displayName>CMWDOH</displayName>
          <description>CMM Check Window High，CMM检查窗口上限寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmwdoh</name>
              <description>CMM 检查窗口上界限，CMCNT大于该值说明频率错误。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMWDOL</name>
          <displayName>CMWDOL</displayName>
          <description>CMM Check Window Low，CMM检查窗口下限寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmwdol</name>
              <description>CMM 检查窗口下界限，CMCNT小于该值说明频率错误。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMCNTLOCK</name>
          <displayName>CMCNTLOCK</displayName>
          <description>CMM Count Locked Value，CMM计数锁存值寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmcnt_lock</name>
              <description>CMM 内部计数器计数锁存值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMINTENA</name>
          <displayName>CMINTENA</displayName>
          <description>CMM Interrupt Enable，CMM中断使能寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>freq_err_en</name>
              <description>CMM 频率错误中断使能。不使能时，即屏蔽相应的中断状态，不影响相应的原始中断。若全部不使能，CMM不会上报中断给CPU。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_en</name>
              <description>CMM 检测结束中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cnt_ovf_en</name>
              <description>CMM 计数溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMINTSTS</name>
          <displayName>CMINTSTS</displayName>
          <description>CMM Interrupt Status，CMM中断状态寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>freq_err_int</name>
              <description>CMM 频率错误中断状态。
0：无中断；
1：有中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>chk_end_int</name>
              <description>CMM 检测结束中断状态。
0：无中断；
1：有中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt_ovf_int</name>
              <description>CMM 计数溢出中断状态。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMINTRAW</name>
          <displayName>CMINTRAW</displayName>
          <description>CMM Raw Interrupt，CMM原始中断寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>freq_err_raw</name>
              <description>CMM 频率错误原始中断。当CMCTRL[cmen]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_raw</name>
              <description>CMM 检测结束中断原始中断。当CMCTRL[cmen]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>cnt_ovf_raw</name>
              <description>CMM 计数溢出中断原始中断。当CMCTRL[cmen]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMINTINJ</name>
          <displayName>CMINTINJ</displayName>
          <description>CMM Interrupt Injection，CMM中断注入寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>freq_err_inj</name>
              <description>CMM 频率错误中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>chk_end_inj</name>
              <description>CMM 检测结束中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>cnt_ovf_inj</name>
              <description>CMM 计数溢出中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CRC</name>
      <description>CRC_CFG peripheral interface</description>
      <groupName>CRC</groupName>
      <baseAddress>0x14800000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x29</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CRC_CFG</name>
        <value>11</value>
      </interrupt>
      <registers>
        <register>
          <name>CRC_CTRL_CFG0</name>
          <displayName>CRC_CTRL_CFG0</displayName>
          <description>CRC控制寄存器0,用于选择CRC算法及数据有效位。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_mode</name>
              <description>CRC算法选择。
00x：CRC8_07；
010：CRC16_8005；
011：CRC16_1021；
10x：CRC32_04c11d87；
其他：保留。
X代表0或者1。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>crc_byte_mode</name>
              <description>数据有效字节选择。
00：低8bit有效；
01：低16bit有效；
10：低24bit有效（reserved）；
11：32bit有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_CFG1</name>
          <displayName>CRC_CTRL_CFG1</displayName>
          <description>CRC控制寄存器1。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_init</name>
              <description>CRC初始化信号，高有效，为单周期脉冲信号，相当于CRC模块的软复位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_CFG2</name>
          <displayName>CRC_CTRL_CFG2</displayName>
          <description>CRC控制寄存器2。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_ld</name>
              <description>CRC期望输出值加载信号，高有效，单周期脉冲。当crc_ld有效时，系统将对CRC进行初始值加载（从CRC_CHECK_IN加载到CRC_OUT）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT_MAX</name>
          <displayName>CNT_MAX</displayName>
          <description>总线反压计数器计数最大值寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>cnt_max</name>
              <description>总线反压计数器计数最大值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CHECK_IN</name>
          <displayName>CRC_CHECK_IN</displayName>
          <description>LOAD 功能配置期望输出值寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>crc_check_in</name>
              <description>LOAD功能配置期望输出值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_DATA_IN</name>
          <displayName>CRC_DATA_IN</displayName>
          <description>CRC 数据输入寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>crc_data_in</name>
              <description>需要计算的CRC数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_OUT</name>
          <displayName>CRC_OUT</displayName>
          <description>CRC 计算结果寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>crc_out</name>
              <description>crc计算结果寄存器，不足位补零。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_STATUS</name>
          <displayName>CRC_CTRL_STATUS</displayName>
          <description>CRC 状态寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_fifo_empty</name>
              <description>FIFO空标志位。
0：无效；
1：有效。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_fifo_full</name>
              <description>FIFO满标志位。
0：无效；
1：有效。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_INT</name>
          <displayName>CRC_CTRL_INT</displayName>
          <description>总线反压超时中断寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pready_timeout</name>
              <description>pready反压超时中断。
0：无效；
1：有效。
向此寄存器写 1 可以清除该中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_INTMASK</name>
          <displayName>CRC_CTRL_INTMASK</displayName>
          <description>中断屏蔽寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pready_timeout_int_mask</name>
              <description>pready_timeout中断屏蔽。
0：不屏蔽中断；
1：屏蔽中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CTRL_ERRINJ</name>
          <displayName>CRC_CTRL_ERRINJ</displayName>
          <description>中断错误注入寄存器，向此寄存器写 1 进行错误注入后会软
件触发 pready 反压超时中断。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>time_out_err_inj</name>
              <description>pready反压超时源中断错误注入。
0：无错误注入
1：有错误注入</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CRG</name>
      <description>CRG_PERIAPBIF peripheral interface</description>
      <groupName>CRG</groupName>
      <baseAddress>0x10000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x204</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CRG_PERIAPBIF</name>
        <value>43</value>
      </interrupt>
      <registers>
        <register>
          <name>PERI_CRG0</name>
          <displayName>PERI_CRG0</displayName>
          <description>pll寄存器0。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_ref_cksel</name>
              <description>PLL输入参考时钟clk_pll_ref时钟源选择信号：
0：选择clk_hosc；
1：选择clk_xtal。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG1</name>
          <displayName>PERI_CRG1</displayName>
          <description>pll寄存器1。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_prediv</name>
              <description>PLL内部前置分频器分频比
0x0：1；
0x1：1；
0x2：2；
0x3：4；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG2</name>
          <displayName>PERI_CRG2</displayName>
          <description>pll寄存器2。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_fbdiv</name>
              <description>PLL内部反馈分频器分频比
允许配置范围8'd6 ~ 8'd63；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG3</name>
          <displayName>PERI_CRG3</displayName>
          <description>pll寄存器3。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_postdiv</name>
              <description>PLL内部后置分频器分频比
0x0：1；
0x1：2；
0x2：4；
0x3：8；
0x4：16；
0x5：32；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG4</name>
          <displayName>PERI_CRG4</displayName>
          <description>pll寄存器4。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_pd</name>
              <description>PLL使能控制
0：PLL上电使能；
1：PLL下电关闭。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG5</name>
          <displayName>PERI_CRG5</displayName>
          <description>pll寄存器5。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00422000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_lockdet_pd</name>
              <description>PLL锁定检测控制
0：PLL锁定检测使能；
1：PLL锁定检测关闭。
PLL下电关闭时时需关闭锁定检测，PLL上电使能后需打开锁定检测。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG6</name>
          <displayName>PERI_CRG6</displayName>
          <description>pll寄存器6。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_test_clk</name>
              <description>CLKOUT_TEST测试口输出功能选择：
3'd0:FPFD 信号
3'd1:CKFB 信号
3'd2:锁定检测器输出信号
3'd3:FOUTPOSTDIV的128分频输出信号
3'd4:未分配，输出0
3'd5:未分配，输出0
3'd6:未分配，输出0
3'd7:未分配，输出0</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留；</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG7</name>
          <displayName>PERI_CRG7</displayName>
          <description>系统时钟控制寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ck_switchen</name>
              <description>时钟切换交互功能使能：
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留；</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>core_cksel</name>
              <description>core_cksel信号：
    00：选择clk_hosc；
    01：旋转clk_xtal；
    10：选择clk_pll；
    11:保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG8</name>
          <displayName>PERI_CRG8</displayName>
          <description>pll输出lock信息寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_lock</name>
              <description>pll lock信号：</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG20</name>
          <displayName>PERI_CRG20</displayName>
          <description>uart0时钟及软复位控制寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart0_srst_req</name>
              <description>uart0软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart0_cksel</name>
              <description>uart0时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart0_cken</name>
              <description>uart0时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG21</name>
          <displayName>PERI_CRG21</displayName>
          <description>uart1时钟及软复位控制寄存器。</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart1_srst_req</name>
              <description>uart1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart1_cksel</name>
              <description>uart1时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart1_cken</name>
              <description>uart1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG22</name>
          <displayName>PERI_CRG22</displayName>
          <description>uart2时钟及软复位控制寄存器。</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart2_srst_req</name>
              <description>uart2软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart2_cksel</name>
              <description>uart2时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uart2_cken</name>
              <description>uart2时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG23</name>
          <displayName>PERI_CRG23</displayName>
          <description>timer0/1时钟及软复位控制寄存器。</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer01_srst_req</name>
              <description>timer0/1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer01_cksel</name>
              <description>timer0/1时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer01_cken</name>
              <description>timer0/1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG24</name>
          <displayName>PERI_CRG24</displayName>
          <description>timer2/3时钟及软复位控制寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer23_srst_req</name>
              <description>timer2/3软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer23_cksel</name>
              <description>timer2/3时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timer23_cken</name>
              <description>timer2/3时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG25</name>
          <displayName>PERI_CRG25</displayName>
          <description>gpt0时钟及软复位控制寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt0_srst_req</name>
              <description>gpt0软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt0_cksel</name>
              <description>gpt0时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt0_cken</name>
              <description>gpt0时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG26</name>
          <displayName>PERI_CRG26</displayName>
          <description>gpt1时钟及软复位控制寄存器。</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt1_srst_req</name>
              <description>gpt1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt1_cksel</name>
              <description>gpt1时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpt1_cken</name>
              <description>gpt1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG27</name>
          <displayName>PERI_CRG27</displayName>
          <description>wdog时钟及软复位控制寄存器。</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdog_srst_req</name>
              <description>wdog软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdog_cksel</name>
              <description>wdog时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdog_cken</name>
              <description>wdog时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG28</name>
          <displayName>PERI_CRG28</displayName>
          <description>spi时钟及软复位控制寄存器。</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>spi_srst_req</name>
              <description>spi软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>spi_cksel</name>
              <description>spi时钟选择信号：
  00：选择clk_ls时钟；
  01：选择clk_ls/2时钟；
  10：选择clk_ls/4时钟；
  11：选择clk_ls/8时钟。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>spi_cken</name>
              <description>spi时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG29</name>
          <displayName>PERI_CRG29</displayName>
          <description>can时钟及软复位控制寄存器。</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>can_srst_req</name>
              <description>can软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>can_cken</name>
              <description>can时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG30</name>
          <displayName>PERI_CRG30</displayName>
          <description>capm时钟及软复位控制寄存器。</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x00070000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm2_srst_req</name>
              <description>capm2软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm1_srst_req</name>
              <description>capm1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm0_srst_req</name>
              <description>capm0软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>capm2_cken</name>
              <description>capm2时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm1_cken</name>
              <description>capm1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>capm0_cken</name>
              <description>capm0时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG31</name>
          <displayName>PERI_CRG31</displayName>
          <description>dma时钟及软复位控制寄存器。</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_srst_req</name>
              <description>dma软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_cken</name>
              <description>dma时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG32</name>
          <displayName>PERI_CRG32</displayName>
          <description>eflash时钟及软复位控制寄存器。</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>eflash_cken</name>
              <description>eflash时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG33</name>
          <displayName>PERI_CRG33</displayName>
          <description>gpio时钟及软复位控制寄存器。</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio7_srst_req</name>
              <description>gpio7软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio6_srst_req</name>
              <description>gpio6软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio5_srst_req</name>
              <description>gpio5软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio4_srst_req</name>
              <description>gpio4软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio3_srst_req</name>
              <description>gpio3软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio2_srst_req</name>
              <description>gpio2软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio1_srst_req</name>
              <description>gpio1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio0_srst_req</name>
              <description>gpio0软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio7_cken</name>
              <description>gpio7时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio6_cken</name>
              <description>gpio6时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio5_cken</name>
              <description>gpio5时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio4_cken</name>
              <description>gpio4时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio3_cken</name>
              <description>gpio3时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio2_cken</name>
              <description>gpio2时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio1_cken</name>
              <description>gpio1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>gpio0_cken</name>
              <description>gpio0时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG34</name>
          <displayName>PERI_CRG34</displayName>
          <description>i2c时钟及软复位控制寄存器。</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_srst_req</name>
              <description>i2c软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_cken</name>
              <description>i2c时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG35</name>
          <displayName>PERI_CRG35</displayName>
          <description>iwdog时钟及软复位控制寄存器。</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>iwdog_srst_req</name>
              <description>iwdog软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>iwdog_cken</name>
              <description>iwdog时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG36</name>
          <displayName>PERI_CRG36</displayName>
          <description>qdm时钟及软复位控制寄存器。</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdm0_srst_req</name>
              <description>qdm软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdm0_cken</name>
              <description>qdm时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG38</name>
          <displayName>PERI_CRG38</displayName>
          <description>coresight时钟及软复位控制寄存器。</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cs_cken</name>
              <description>coresight自动时钟门控功能控制：
0：自动门控功能打开关断；
1：自动门控功能关闭。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG39</name>
          <displayName>PERI_CRG39</displayName>
          <description>crc时钟及软复位控制寄存器。</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_srst_req</name>
              <description>crc软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_cken</name>
              <description>crc时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG40</name>
          <displayName>PERI_CRG40</displayName>
          <description>APT时钟及软复位控制寄存器。</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x01FF0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt8_srst_req</name>
              <description>apt8软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt7_srst_req</name>
              <description>apt7软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt6_srst_req</name>
              <description>apt6软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt5_srst_req</name>
              <description>apt5软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt4_srst_req</name>
              <description>apt4软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt3_srst_req</name>
              <description>apt3软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt2_srst_req</name>
              <description>apt2软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt1_srst_req</name>
              <description>apt1软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt0_srst_req</name>
              <description>apt0软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt8_cken</name>
              <description>apt8时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt7_cken</name>
              <description>apt7时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt6_cken</name>
              <description>apt6时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt5_cken</name>
              <description>apt5时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt4_cken</name>
              <description>apt4时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt3_cken</name>
              <description>apt3时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt2_cken</name>
              <description>apt2时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt1_cken</name>
              <description>apt1时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt0_cken</name>
              <description>apt0时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG41</name>
          <displayName>PERI_CRG41</displayName>
          <description>ADC0寄存器。</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc0_ana_srst_req</name>
              <description>adc0模拟部分软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc0sys_srst_req</name>
              <description>adc0控制器配置时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc0_srst_req</name>
              <description>adc0控制器采样时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc0_cksel</name>
              <description>adc0采样时钟源选择信号。
  00：选择clk_hosc时钟；
  01：选择clk_xtal时钟；
  1x：选择pll时钟经过adc0_div分频后的时钟。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc0_div</name>
              <description>adc0采样时钟分频参数，配置范围为[0-15]。
adc0_cksel = 2'b1x时，adc0采样时钟频率为：
Fclk_vco/(adc0_div[4:1] + 0.5*adc0_div[0] +1)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc0sys_cken</name>
              <description>adc0控制器配置时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc0_cken</name>
              <description>adc0控制器采样时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG42</name>
          <displayName>PERI_CRG42</displayName>
          <description>ADC1寄存器。</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc1_ana_srst_req</name>
              <description>adc1模拟部分软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc1sys_srst_req</name>
              <description>adc1控制器配置时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc1_srst_req</name>
              <description>adc1控制器采样时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc1_cksel</name>
              <description>adc1采样时钟源选择信号。
  00：选择clk_hosc时钟；
  01：选择clk_xtal时钟；
  1x：选择pll时钟经过adc1_div分频后的时钟。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc1_div</name>
              <description>adc1采样时钟分频参数，配置范围为[0-15]。
adc1_cksel = 2'b1x时，adc1采样时钟频率为：
Fclk_vco/(adc1_div[4:1] + 0.5*adc1_div[0] +1)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc1sys_cken</name>
              <description>adc1控制器配置时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc1_cken</name>
              <description>adc1控制器采样时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG43</name>
          <displayName>PERI_CRG43</displayName>
          <description>ADC2寄存器。</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc2_ana_srst_req</name>
              <description>adc2模拟部分软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc2sys_srst_req</name>
              <description>adc2控制器配置时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc2_srst_req</name>
              <description>adc2控制器采样时钟域软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc2_cksel</name>
              <description>adc2采样时钟源选择信号。
  00：选择clk_hosc时钟；
  01：选择clk_xtal时钟；
  1x：选择clk_vco经过adc2_div分频后的时钟。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc2_div</name>
              <description>adc2采样时钟分频参数，配置范围为[0-15]。
adc2_cksel = 2'b1x时，adc2采样时钟频率为：
Fclk_vco/(adc2_div[4:1] + 0.5*adc2_div[0] +1)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc2sys_cken</name>
              <description>adc2控制器配置时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>adc2_cken</name>
              <description>adc2控制器采样时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG44</name>
          <displayName>PERI_CRG44</displayName>
          <description>ACMP时钟及软复位控制寄存器。</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>acmp2_srst_req</name>
              <description>acmp2控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>acmp1_srst_req</name>
              <description>acmp1控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>acmp0_srst_req</name>
              <description>acmp0控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>acmp2_cken</name>
              <description>acmp2控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>acmp1_cken</name>
              <description>acmp1控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>acmp0_cken</name>
              <description>acmp0控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG45</name>
          <displayName>PERI_CRG45</displayName>
          <description>DAC寄存器。</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0x00004447</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac2_srst_req</name>
              <description>dac2控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac1_srst_req</name>
              <description>dac1控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac0_srst_req</name>
              <description>dac0控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac2_div</name>
              <description>dac2模拟部分工作时钟分频参数
时钟频率为Fclk_pll_ref/(dac2_div+1)。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac1_div</name>
              <description>dac1模拟部分工作时钟分频参数
时钟频率为Fclk_pll_ref/(dac1_div+1)。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac0_div</name>
              <description>dac0模拟部分工作时钟分频参数
时钟频率为Fclk_pll_ref/(dac0_div+1)。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac2_cken</name>
              <description>dac2控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac1_cken</name>
              <description>dac1控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dac0_cken</name>
              <description>dac0控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG46</name>
          <displayName>PERI_CRG46</displayName>
          <description>PGA时钟及软复位控制寄存器。</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga2_srst_req</name>
              <description>pga2控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga1_srst_req</name>
              <description>pga1控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga0_srst_req</name>
              <description>pga0控制器软复位请求：
0：不复位；
1：复位。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga2_cken</name>
              <description>pga2控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga1_cken</name>
              <description>pga1控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga0_cken</name>
              <description>pga0控制器时钟门控：
0：关断；
1：打开。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG47</name>
          <displayName>PERI_CRG47</displayName>
          <description>时钟输出控制寄存器。</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>test_clk_en</name>
              <description>test_clk_en
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>test_clk_sel</name>
              <description>test_clk时钟选择：
0x0：clk_pll/1024；
0x1：clk_hosc；
0x2：clk_losc；
0x3：clk_xtal；
0x4：clk_dac0；
0x5：clk_dac1；
0x6：clk_dac2；
0x7：clk_adc0；
0x8：clk_adc1；
0x9：clk_adc2；
其它：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_CRG48</name>
          <displayName>PERI_CRG48</displayName>
          <description>PVD复位控制寄存器。</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pvd_rst_enable</name>
              <description>pvd复位使能
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DAC0</name>
      <description>数模转换器</description>
      <groupName>DAC</groupName>
      <baseAddress>0x18300000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DAC</name>
        <value>63</value>
      </interrupt>
      <registers>
        <register>
          <name>DAC_CTRL</name>
          <displayName>DAC_CTRL</displayName>
          <description>DAC控制寄存器</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac_sine_num</name>
              <description>DAC 正弦波间隔计数值（时钟 10M 时，输出 0.3Msps 正弦波，配置为 0x21）。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac_sine_en</name>
              <description>DAC 正弦波模式使能。0：不使能；1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac_en</name>
              <description>DAC 使能。0：不使能；1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_VALUE</name>
          <displayName>DAC_VALUE</displayName>
          <description>配置值寄存器</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dac_value</name>
              <description>DAC 数字信号，对应电压 V=(dac_value*(VDDA−VSSA)) / 256。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="DAC0">
      <name>DAC1</name>
      <baseAddress>0x18301000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="DAC0">
      <name>DAC2</name>
      <baseAddress>0x18302000</baseAddress>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA peripheral interface</description>
      <groupName>DMA</groupName>
      <baseAddress>0x1C000000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>DMAC_INT_STAT</name>
          <displayName>DMAC_INT_STAT</displayName>
          <description>中断状态寄存器</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_int_stat</name>
              <description>通道3经屏蔽后的中断状态。
0：未产生中断；
1：已产生中断（传输错误或传输完成）。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_int_stat</name>
              <description>通道2经屏蔽后的中断状态。
0：未产生中断；
1：已产生中断（传输错误或传输完成）。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_int_stat</name>
              <description>通道1经屏蔽后的中断状态。
0：未产生中断；
1：已产生中断（传输错误或传输完成）。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_int_stat</name>
              <description>通道0经屏蔽后的中断状态。
0：未产生中断；
1：已产生中断（传输错误或传输完成）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_INT_TC_STAT</name>
          <displayName>DMAC_INT_TC_STAT</displayName>
          <description>传输完成中断状态寄存器</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_int_tc_stat</name>
              <description>通道3经屏蔽后的传输完成中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_int_tc_stat</name>
              <description>通道2经屏蔽后的传输完成中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_int_tc_stat</name>
              <description>通道1经屏蔽后的传输完成中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_int_tc_stat</name>
              <description>通道0经屏蔽后的传输完成中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_INT_TC_CLR</name>
          <displayName>DMAC_INT_TC_CLR</displayName>
          <description>传输完成中断清除寄存器</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_int_tc_clr</name>
              <description>清除通道3传输完成中断。
0：不清除；
1：清除。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch2_int_tc_clr</name>
              <description>清除通道2传输完成中断。
0：不清除；
1：清除。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch1_int_tc_clr</name>
              <description>清除通道1传输完成中断。
0：不清除；
1：清除。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch0_int_tc_clr</name>
              <description>清除通道0传输完成中断。
0：不清除；
1：清除。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_INT_ERR_STAT</name>
          <displayName>DMAC_INT_ERR_STAT</displayName>
          <description>错误中断状态寄存器</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_int_err_stat</name>
              <description>通道3经屏蔽后的错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_int_err_stat</name>
              <description>通道2经屏蔽后的错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_int_err_stat</name>
              <description>通道1经屏蔽后的错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_int_err_stat</name>
              <description>通道0经屏蔽后的错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_INT_ERR_CLR</name>
          <displayName>DMAC_INT_ERR_CLR</displayName>
          <description>错误中断清除寄存器</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_int_err_clr</name>
              <description>清除通道3错误中断。
0：不清除；
1：清除。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch2_int_err_clr</name>
              <description>清除通道2错误中断。
0：不清除；
1：清除。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch1_int_err_clr</name>
              <description>清除通道1错误中断。
0：不清除；
1：清除。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch0_int_err_clr</name>
              <description>清除通道0错误中断。
0：不清除；
1：清除。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_RAW_INT_TC_STAT</name>
          <displayName>DMAC_RAW_INT_TC_STAT</displayName>
          <description>原始传输完成中断状态寄存器</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_raw_int_tc</name>
              <description>通道3原始传输完成中断状态。
0：未产生传输完成中断；
1：产生传输完成中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_raw_int_tc</name>
              <description>通道2原始传输完成中断状态。
0：未产生传输完成中断；
1：产生传输完成中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_raw_int_tc</name>
              <description>通道1原始传输完成中断状态。
0：未产生传输完成中断；
1：产生传输完成中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_raw_int_tc</name>
              <description>通道0原始传输完成中断状态。
0：未产生传输完成中断；
1：产生传输完成中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_RAW_INT_ERR_STAT</name>
          <displayName>DMAC_RAW_INT_ERR_STAT</displayName>
          <description>原始错误中断寄存器</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_raw_int_err</name>
              <description>通道3原始错误中断状态。
0：未产生错误中断；
1：产生错误中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_raw_int_err</name>
              <description>通道2原始错误中断状态。
0：未产生错误中断；
1：产生错误中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_raw_int_err</name>
              <description>通道1原始错误中断状态。
0：未产生错误中断；
1：产生错误中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_raw_int_err</name>
              <description>通道0原始错误中断状态。
0：未产生错误中断；
1：产生错误中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_ENABLED_CHNS </name>
          <displayName>DMAC_ENABLED_CHNS </displayName>
          <description>通道使能状态寄存器</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>4</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch3_enabled</name>
              <description>通道3使能状态。
0：禁止；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch2_enabled</name>
              <description>通道2使能状态。
0：禁止；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch1_enabled</name>
              <description>通道1使能状态。
0：禁止；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch0_enabled</name>
              <description>通道0使能状态。
0：禁止；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_SOFT_BREQ </name>
          <displayName>DMAC_SOFT_BREQ </displayName>
          <description>软件 BURST 传输请求寄存器</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_breq</name>
              <description>用于软件控制产生 DMA BURST 传输请求，每比特对应
请求请参见 DMAC 的硬件请求线。
当写该寄存器时：
0：无影响；
1：产生 DMA BURST 传输请求，当传输结束时该寄存
器中的相应位被清零。
当读该寄存器时：
0：与请求线 DMACBREQ[15:0]对应的外设未发出 DMA
BURST 请求；
1：与请求线 DMACBREQ[15:0]对应的外设正在请求
DMA BURST 传输。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_SOFT_SREQ </name>
          <displayName>DMAC_SOFT_SREQ </displayName>
          <description>软件SINGLE传输请求寄存器</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_sreq</name>
              <description>用于软件控制产生 DMA SINGLE 传输请求，每比特对应
请求请参见 DMAC 的硬件请求线。
当写该寄存器时：
0：无影响；
1：产生 DMA SINGLE 传输请求，当传输结束时该寄存
器中的相应位被清零。
当读该寄存器时：
0：与请求线 DMACSREQ[15:0]对应的外设未发出 DMA
SINGLE 请求；
1：与请求线 DMACSREQ[15:0]对应的外设正在请求
DMA SINGLE 传输。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_SOFT_LBREQ </name>
          <displayName>DMAC_SOFT_LBREQ </displayName>
          <description>软件最后一个BURST请求寄存器</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_lbreq</name>
              <description> 由软件发起 last burst 请求。
0：无影响；
1：产生 DMA last burst 传输请求，当传输结束时该寄
存器中的相应位被清零。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_SOFT_LSREQ </name>
          <displayName>DMAC_SOFT_LBREQ </displayName>
          <description>软件最后一个SINGLE请求寄存器</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_lsreq</name>
              <description>由软件发起 last single 传输请求。
0：无影响；
1：产生一个 DMA last single 传输请求，当传输结束时
该寄存器中的相应位被清零。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_CONFIG</name>
          <displayName>DMAC_CONFIG</displayName>
          <description>DMAC配置寄存器</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>m2_endianness</name>
              <description>Master 2 字节顺序配置。
0：小端格式；
1：大端格式。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>m1_endianness</name>
              <description>Master 1 字节顺序配置。
0：小端格式；
1：大端格式。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dmac_enable</name>
              <description>DMA 控制器使能。
0：禁止 DMA 控制器；
1：使能 DMA 控制器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_SYNC</name>
          <displayName>DMAC_SYNC</displayName>
          <description>请求线同步使能寄存器</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmac_sync</name>
              <description>控制是否需要对请求线进行同步，每比特对应请求请
参见 DMAC 的硬件请求线。
0：使能对应外设的 DMA 请求信号同步逻辑；
1：禁止对应外设的 DMA 请求信号同步逻辑。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C0_SRC_ADDR</name>
          <displayName>DMAC_C0_SRC_ADDR</displayName>
          <description>通道0源地址寄存器</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>src_addr</name>
              <description>DMA 源地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C0_DEST_ADDR</name>
          <displayName>DMAC_C0_DEST_ADDR</displayName>
          <description>通道0目的地址寄存器</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dest_addr</name>
              <description>DMA目的地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C0_LLI</name>
          <displayName>DMAC_C0_LLI</displayName>
          <description>通道0链表信息寄存器</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ll_item</name>
              <description>下一个链表节点地址的[31:2]位，地址位[1:0]为 0。要求链
表地址 4Byte 对齐。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留，写入时必须写 0，读出时应屏蔽该位。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ll_master</name>
              <description>用于载入下一个链表节点的 Master。
0： Master 1；
1： Master 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C0_CONTROL</name>
          <displayName>DMAC_C0_CONTROL</displayName>
          <description>通道0控制寄存器</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int_tc_enable</name>
              <description>传输完成中断使能位。该位用于决定当前链表节点是否触
发传输完成中断。
0：当前链表节点不触发传输完成中断；
1：当前链表节点触发传输完成中断。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dest_incr</name>
              <description>目的地址递增。
0：目的地址不递增；
1：目的地址每传一个数就递增一次。
目的设备为外设时目的地址不递增；目的设备为存储器时
目的地址递增。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_incr</name>
              <description>源地址递增。
0：源地址不递增；
1：源地址每传一个数就递增一次。
源设备为外设时源地址不递增；源设备为存储器时源地址
递增。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_select</name>
              <description>设置访问目的设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_select</name>
              <description>设置访问源设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dwidth</name>
              <description>目的设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>swidth</name>
              <description>源设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dbsize</name>
              <description>目的设备 burst 长度。
表示目的设备请求 1 次 burst 传输（BREQ）， DMAC 向
目的地址（固定或递增地址）写数据的个数。
若目的设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若目的设备是外设， 内部无 FIFO，若配置了目的地址递
增，则 burst 长度不能超过外设的地址空间。 否则，递增
的目的地址会超过该设备的地址空间，若该地址无映射，
那么可能导致无法预料的结果。
若目的设备是存储器， 若配置了目的地址递增， 则 burst
长度的配置需要考虑存储器地址边界。 目的地址+burst 长
度不能超过其存储器地址边界。 否则， 目的地址递增会访
问到超过该设备的地址空间，若该地址无映射，那么可能
导致无法预料的结果。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sbsize</name>
              <description>源设备 burst 长度。
表示源设备请求 1 次 burst 传输（BREQ）， DMAC 从源
地址（固定或递增地址）读数据的个数。
若源设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若源设备是外设， 内部无 FIFO，若配置了源地址递增，则
burst 长度不能超过外设的地址空间。 否则，递增的源地址
会超过该设备的地址空间，若该地址无映射，那么可能导
致无法预料的结果。
若源设备是存储器， 若配置了源地址递增， 则 burst 长度
的配置需要考虑存储器地址边界。 源地址+burst 长度不能
超过其存储器地址边界。 否则， 源地址递增会访问到超过
该设备的地址空间，若该地址无映射，那么可能导致无法
预料的结果。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>trans_size</name>
              <description>通过写该寄存器可设定 DMA 传输的长度，前提是 DMAC
是流控制器。这里 transfer size 表示的源设备待传数据的
个数。
读该寄存器可得到在与目的设备相连的总线上已传出的数
据个数。
当该通道处于活动状态时，读该寄存器得不到有效信息。
这是因为当软件得到读出的寄存器值，该寄存器的值已经
随着通道传输改变了。对该寄存器的读操作一般是用在通
道被启动后然后又停止传输时。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C0_CONFIG</name>
          <displayName>DMAC_C0_CONFIG</displayName>
          <description>通道0配置寄存器</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_halt</name>
              <description>Halt 位。
0：允许 DMA 请求；
1：忽略后来的 DMA 请求，通道 FIFO 中的内容都被传
完。
该位可以和 Active 位以及通道使能位一起用于无数据丢失
地关闭一个 DMA 通道。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_active</name>
              <description>Active 位。
0：通道 FIFO 中没有数据；
1：通道 FIFO 中有数据。
该位可以和 Halt 位以及通道使能位一起用于无数据丢失地
关闭一个 DMA 通道。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch_lock</name>
              <description>Lock 位。
0：禁止总线上 lock 传输；
1：使能总线上 lock 传输。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tc_int_msk</name>
              <description>传输完成中断屏蔽位。
0：屏蔽本通道的传输完成中断。
1：不屏蔽本通道的传输完成中断。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>err_int_msk</name>
              <description>错误中断屏蔽位。
0：屏蔽本通道的错误中断。
1：不屏蔽本通道的错误中断。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flow_ctrl</name>
              <description>流控及传输类型字段。
该字段用于指定流控制器和传输类型。流控制器可以是
DMAC、源设备和目的设备。
传输类型可以是存储器到外设、外设到存储器、外设到外
设、存储器到存储器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_periph</name>
              <description>目的设备。该字段用于选择一个外设请求信号作为本通道
的 DMA 目的设备的请求信号。
如果 DMA 传输的目的设备是存储器则该字段被忽略。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_periph</name>
              <description>源设备。该字段用于选择一个外设请求信号作为本通道的
DMA 源设备的请求信号。
如果 DMA 传输的源设备是存储器则该字段被忽略。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_en</name>
              <description>通道使能位。读该寄存器可得知本通道当前是处于什么状
态（也可通过读寄存器 DMAC_ENABLED_CHNS 得
到） 。
0：关闭通道；
1：启动通道。
通过清零可关闭通道。将该位被清零时，当前的总线传输
会继续执行直到完成。然后通道关闭， FIFO 中剩余的数据
全部丢失；当最后一个 LLI 完成或传输中出现错误时，通
道也会被关闭，同时该位被清零；如果要关闭通道，而又
不使通道 FIFO 中的数据丢失，则 Halt 位也必须同时被置
位，使通道忽略后来的 DMA 请求。然后必须轮询 active
位，直到其值变为 0，表明通道 FIFO 中不再留有数据。此
时才能够清除 enable 位。
通过置位启动通道必须先重新初始化通道，然后才能再次
启动通道；若通过简单的置位启动通道，会引发不可预测
性的后果。
当刚通过写 DMAC_Cn_CONFIG [0]位关闭一个通道时，必
须要等到轮询到寄存器 DMAC_ENABLED_CHNS 中的相
应 bit 为 0 后，才能将 DMAC_Cn_CONFIG [0]重新置位。
这是因为通道实际的关闭并没有在将 DMAC_Cn_CONFIG
[0]清零后立即生效。总线 burst 的运行时延时也必须要考
虑到。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C1_SRC_ADDR</name>
          <displayName>DMAC_C1_SRC_ADDR</displayName>
          <description>通道1源地址寄存器</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>src_addr</name>
              <description>DMA 源地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C1_DEST_ADDR</name>
          <displayName>DMAC_C1_DEST_ADDR</displayName>
          <description>通道1目的地址寄存器</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dest_addr</name>
              <description>DMA目的地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C1_LLI</name>
          <displayName>DMAC_C1_LLI</displayName>
          <description>通道1链表信息寄存器</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ll_item</name>
              <description>下一个链表节点地址的[31:2]位，地址位[1:0]为 0。要求链
表地址 4Byte 对齐。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description> 保留，写入时必须写 0，读出时应屏蔽该位。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ll_master</name>
              <description>用于载入下一个链表节点的 Master。
0： Master 1；
1： Master 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C1_CONTROL</name>
          <displayName>DMAC_C1_CONTROL</displayName>
          <description>通道1控制寄存器</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int_tc_enable</name>
              <description>传输完成中断使能位。该位用于决定当前链表节点是否触
发传输完成中断。
0：当前链表节点不触发传输完成中断；
1：当前链表节点触发传输完成中断。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dest_incr</name>
              <description>目的地址递增。
0：目的地址不递增；
1：目的地址每传一个数就递增一次。
目的设备为外设时目的地址不递增；目的设备为存储器时
目的地址递增。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_incr</name>
              <description>源地址递增。
0：源地址不递增；
1：源地址每传一个数就递增一次。
源设备为外设时源地址不递增；源设备为存储器时源地址
递增。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_select</name>
              <description>设置访问目的设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_select</name>
              <description>设置访问源设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dwidth</name>
              <description>目的设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>swidth</name>
              <description>源设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dbsize</name>
              <description>目的设备 burst 长度。
表示目的设备请求 1 次 burst 传输（BREQ）， DMAC 向
目的地址（固定或递增地址）写数据的个数。
若目的设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若目的设备是外设， 内部无 FIFO，若配置了目的地址递
增，则 burst 长度不能超过外设的地址空间。 否则，递增
的目的地址会超过该设备的地址空间，若该地址无映射，
那么可能导致无法预料的结果。
若目的设备是存储器， 若配置了目的地址递增， 则 burst
长度的配置需要考虑存储器地址边界。 目的地址+burst 长
度不能超过其存储器地址边界。 否则， 目的地址递增会访
问到超过该设备的地址空间，若该地址无映射，那么可能
导致无法预料的结果。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sbsize</name>
              <description>源设备 burst 长度。
表示源设备请求 1 次 burst 传输（BREQ）， DMAC 从源
地址（固定或递增地址）读数据的个数。
若源设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若源设备是外设， 内部无 FIFO，若配置了源地址递增，则
burst 长度不能超过外设的地址空间。 否则，递增的源地址
会超过该设备的地址空间，若该地址无映射，那么可能导
致无法预料的结果。
若源设备是存储器， 若配置了源地址递增， 则 burst 长度
的配置需要考虑存储器地址边界。 源地址+burst 长度不能
超过其存储器地址边界。 否则， 源地址递增会访问到超过
该设备的地址空间，若该地址无映射，那么可能导致无法
预料的结果。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>trans_size</name>
              <description>通过写该寄存器可设定 DMA 传输的长度，前提是 DMAC
是流控制器。这里 transfer size 表示的源设备待传数据的
个数。
读该寄存器可得到在与目的设备相连的总线上已传出的数
据个数。
当该通道处于活动状态时，读该寄存器得不到有效信息。
这是因为当软件得到读出的寄存器值，该寄存器的值已经
随着通道传输改变了。对该寄存器的读操作一般是用在通
道被启动后然后又停止传输时。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C1_CONFIG</name>
          <displayName>DMAC_C1_CONFIG</displayName>
          <description>通道1配置寄存器</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_halt</name>
              <description>Halt 位。
0：允许 DMA 请求；
1：忽略后来的 DMA 请求，通道 FIFO 中的内容都被传
完。
该位可以和 Active 位以及通道使能位一起用于无数据丢失
地关闭一个 DMA 通道。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_active</name>
              <description>Active 位。
0：通道 FIFO 中没有数据；
1：通道 FIFO 中有数据。
该位可以和 Halt 位以及通道使能位一起用于无数据丢失地
关闭一个 DMA 通道。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch_lock</name>
              <description>Lock 位。
0：禁止总线上 lock 传输；
1：使能总线上 lock 传输。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tc_int_msk</name>
              <description>传输完成中断屏蔽位。
0：屏蔽本通道的传输完成中断。
1：不屏蔽本通道的传输完成中断。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>err_int_msk</name>
              <description>错误中断屏蔽位。
0：屏蔽本通道的错误中断。
1：不屏蔽本通道的错误中断。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flow_ctrl</name>
              <description>流控及传输类型字段。
该字段用于指定流控制器和传输类型。流控制器可以是
DMAC、源设备和目的设备。
传输类型可以是存储器到外设、外设到存储器、外设到外
设、存储器到存储器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_periph</name>
              <description>目的设备。该字段用于选择一个外设请求信号作为本通道
的 DMA 目的设备的请求信号。
如果 DMA 传输的目的设备是存储器则该字段被忽略。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_periph</name>
              <description>源设备。该字段用于选择一个外设请求信号作为本通道的
DMA 源设备的请求信号。
如果 DMA 传输的源设备是存储器则该字段被忽略。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_en</name>
              <description>通道使能位。读该寄存器可得知本通道当前是处于什么状
态（也可通过读寄存器 DMAC_ENABLED_CHNS 得
到） 。
0：关闭通道；
1：启动通道。
通过清零可关闭通道。将该位被清零时，当前的总线传输
会继续执行直到完成。然后通道关闭， FIFO 中剩余的数据
全部丢失；当最后一个 LLI 完成或传输中出现错误时，通
道也会被关闭，同时该位被清零；如果要关闭通道，而又
不使通道 FIFO 中的数据丢失，则 Halt 位也必须同时被置
位，使通道忽略后来的 DMA 请求。然后必须轮询 active
位，直到其值变为 0，表明通道 FIFO 中不再留有数据。此
时才能够清除 enable 位。
通过置位启动通道必须先重新初始化通道，然后才能再次
启动通道；若通过简单的置位启动通道，会引发不可预测
性的后果。
当刚通过写 DMAC_Cn_CONFIG [0]位关闭一个通道时，必
须要等到轮询到寄存器 DMAC_ENABLED_CHNS 中的相
应 bit 为 0 后，才能将 DMAC_Cn_CONFIG [0]重新置位。
这是因为通道实际的关闭并没有在将 DMAC_Cn_CONFIG
[0]清零后立即生效。总线 burst 的运行时延时也必须要考
虑到。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C2_SRC_ADDR</name>
          <displayName>DMAC_C2_SRC_ADDR</displayName>
          <description>通道2源地址寄存器</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>src_addr</name>
              <description>DMA 源地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C2_DEST_ADDR</name>
          <displayName>DMAC_C2_DEST_ADDR</displayName>
          <description>通道2目的地址寄存器</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dest_addr</name>
              <description>DMA目的地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C2_LLI</name>
          <displayName>DMAC_C2_LLI</displayName>
          <description>通道2链表信息寄存器</description>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ll_item</name>
              <description>下一个链表节点地址的[31:2]位，地址位[1:0]为 0。要求链
表地址 4Byte 对齐。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description> 保留，写入时必须写 0，读出时应屏蔽该位。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ll_master</name>
              <description>用于载入下一个链表节点的 Master。
0： Master 1；
1： Master 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C2_CONTROL</name>
          <displayName>DMAC_C2_CONTROL</displayName>
          <description>通道2控制寄存器</description>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int_tc_enable</name>
              <description>传输完成中断使能位。该位用于决定当前链表节点是否触
发传输完成中断。
0：当前链表节点不触发传输完成中断；
1：当前链表节点触发传输完成中断。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dest_incr</name>
              <description>目的地址递增。
0：目的地址不递增；
1：目的地址每传一个数就递增一次。
目的设备为外设时目的地址不递增；目的设备为存储器时
目的地址递增。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_incr</name>
              <description>源地址递增。
0：源地址不递增；
1：源地址每传一个数就递增一次。
源设备为外设时源地址不递增；源设备为存储器时源地址
递增。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_select</name>
              <description>设置访问目的设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_select</name>
              <description>设置访问源设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dwidth</name>
              <description>目的设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>swidth</name>
              <description>源设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dbsize</name>
              <description>目的设备 burst 长度。
表示目的设备请求 1 次 burst 传输（BREQ）， DMAC 向
目的地址（固定或递增地址）写数据的个数。
若目的设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若目的设备是外设， 内部无 FIFO，若配置了目的地址递
增，则 burst 长度不能超过外设的地址空间。 否则，递增
的目的地址会超过该设备的地址空间，若该地址无映射，
那么可能导致无法预料的结果。
若目的设备是存储器， 若配置了目的地址递增， 则 burst
长度的配置需要考虑存储器地址边界。 目的地址+burst 长
度不能超过其存储器地址边界。 否则， 目的地址递增会访
问到超过该设备的地址空间，若该地址无映射，那么可能
导致无法预料的结果。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sbsize</name>
              <description>源设备 burst 长度。
表示源设备请求 1 次 burst 传输（BREQ）， DMAC 从源
地址（固定或递增地址）读数据的个数。
若源设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若源设备是外设， 内部无 FIFO，若配置了源地址递增，则
burst 长度不能超过外设的地址空间。 否则，递增的源地址
会超过该设备的地址空间，若该地址无映射，那么可能导
致无法预料的结果。
若源设备是存储器， 若配置了源地址递增， 则 burst 长度
的配置需要考虑存储器地址边界。 源地址+burst 长度不能
超过其存储器地址边界。 否则， 源地址递增会访问到超过
该设备的地址空间，若该地址无映射，那么可能导致无法
预料的结果。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>trans_size</name>
              <description>通过写该寄存器可设定 DMA 传输的长度，前提是 DMAC
是流控制器。这里 transfer size 表示的源设备待传数据的
个数。
读该寄存器可得到在与目的设备相连的总线上已传出的数
据个数。
当该通道处于活动状态时，读该寄存器得不到有效信息。
这是因为当软件得到读出的寄存器值，该寄存器的值已经
随着通道传输改变了。对该寄存器的读操作一般是用在通
道被启动后然后又停止传输时。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C2_CONFIG</name>
          <displayName>DMAC_C2_CONFIG</displayName>
          <description>通道2配置寄存器</description>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_halt</name>
              <description>Halt 位。
0：允许 DMA 请求；
1：忽略后来的 DMA 请求，通道 FIFO 中的内容都被传
完。
该位可以和 Active 位以及通道使能位一起用于无数据丢失
地关闭一个 DMA 通道。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_active</name>
              <description>Active 位。
0：通道 FIFO 中没有数据；
1：通道 FIFO 中有数据。
该位可以和 Halt 位以及通道使能位一起用于无数据丢失地
关闭一个 DMA 通道。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch_lock</name>
              <description>Lock 位。
0：禁止总线上 lock 传输；
1：使能总线上 lock 传输。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tc_int_msk</name>
              <description>传输完成中断屏蔽位。
0：屏蔽本通道的传输完成中断。
1：不屏蔽本通道的传输完成中断。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>err_int_msk</name>
              <description>错误中断屏蔽位。
0：屏蔽本通道的错误中断。
1：不屏蔽本通道的错误中断。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flow_ctrl</name>
              <description>流控及传输类型字段。
该字段用于指定流控制器和传输类型。流控制器可以是
DMAC、源设备和目的设备。
传输类型可以是存储器到外设、外设到存储器、外设到外
设、存储器到存储器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_periph</name>
              <description>目的设备。该字段用于选择一个外设请求信号作为本通道
的 DMA 目的设备的请求信号。
如果 DMA 传输的目的设备是存储器则该字段被忽略。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_periph</name>
              <description>源设备。该字段用于选择一个外设请求信号作为本通道的
DMA 源设备的请求信号。
如果 DMA 传输的源设备是存储器则该字段被忽略。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_en</name>
              <description>通道使能位。读该寄存器可得知本通道当前是处于什么状
态（也可通过读寄存器 DMAC_ENABLED_CHNS 得
到） 。
0：关闭通道；
1：启动通道。
通过清零可关闭通道。将该位被清零时，当前的总线传输
会继续执行直到完成。然后通道关闭， FIFO 中剩余的数据
全部丢失；当最后一个 LLI 完成或传输中出现错误时，通
道也会被关闭，同时该位被清零；如果要关闭通道，而又
不使通道 FIFO 中的数据丢失，则 Halt 位也必须同时被置
位，使通道忽略后来的 DMA 请求。然后必须轮询 active
位，直到其值变为 0，表明通道 FIFO 中不再留有数据。此
时才能够清除 enable 位。
通过置位启动通道必须先重新初始化通道，然后才能再次
启动通道；若通过简单的置位启动通道，会引发不可预测
性的后果。
当刚通过写 DMAC_Cn_CONFIG [0]位关闭一个通道时，必
须要等到轮询到寄存器 DMAC_ENABLED_CHNS 中的相
应 bit 为 0 后，才能将 DMAC_Cn_CONFIG [0]重新置位。
这是因为通道实际的关闭并没有在将 DMAC_Cn_CONFIG
[0]清零后立即生效。总线 burst 的运行时延时也必须要考
虑到。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C3_SRC_ADDR</name>
          <displayName>DMAC_C3_SRC_ADDR</displayName>
          <description>通道3源地址寄存器</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>src_addr</name>
              <description>DMA 源地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C3_DEST_ADDR</name>
          <displayName>DMAC_C3_DEST_ADDR</displayName>
          <description>通道3目的地址寄存器</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dest_addr</name>
              <description>DMA目的地址</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C3_LLI</name>
          <displayName>DMAC_C3_LLI</displayName>
          <description>通道3链表信息寄存器</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ll_item</name>
              <description>下一个链表节点地址的[31:2]位，地址位[1:0]为 0。要求链
表地址 4Byte 对齐。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description> 保留，写入时必须写 0，读出时应屏蔽该位。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ll_master</name>
              <description>用于载入下一个链表节点的 Master。
0： Master 1；
1： Master 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C3_CONTROL</name>
          <displayName>DMAC_C3_CONTROL</displayName>
          <description>通道3控制寄存器</description>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>int_tc_enable</name>
              <description>传输完成中断使能位。该位用于决定当前链表节点是否触
发传输完成中断。
0：当前链表节点不触发传输完成中断；
1：当前链表节点触发传输完成中断。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dest_incr</name>
              <description>目的地址递增。
0：目的地址不递增；
1：目的地址每传一个数就递增一次。
目的设备为外设时目的地址不递增；目的设备为存储器时
目的地址递增。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_incr</name>
              <description>源地址递增。
0：源地址不递增；
1：源地址每传一个数就递增一次。
源设备为外设时源地址不递增；源设备为存储器时源地址
递增。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_select</name>
              <description>设置访问目的设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_select</name>
              <description>设置访问源设备的 master。
0：使用 master1 访问；
1：使用 master2 访问。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dwidth</name>
              <description>目的设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>swidth</name>
              <description>源设备传输位宽。
宽于 Master 位宽的传输位宽是非法的。
目的设备和源设备的位宽可以不一样，硬件自动对数据进
行 pack 和 unpack。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dbsize</name>
              <description>目的设备 burst 长度。
表示目的设备请求 1 次 burst 传输（BREQ）， DMAC 向
目的地址（固定或递增地址）写数据的个数。
若目的设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若目的设备是外设， 内部无 FIFO，若配置了目的地址递
增，则 burst 长度不能超过外设的地址空间。 否则，递增
的目的地址会超过该设备的地址空间，若该地址无映射，
那么可能导致无法预料的结果。
若目的设备是存储器， 若配置了目的地址递增， 则 burst
长度的配置需要考虑存储器地址边界。 目的地址+burst 长
度不能超过其存储器地址边界。 否则， 目的地址递增会访
问到超过该设备的地址空间，若该地址无映射，那么可能
导致无法预料的结果。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sbsize</name>
              <description>源设备 burst 长度。
表示源设备请求 1 次 burst 传输（BREQ）， DMAC 从源
地址（固定或递增地址）读数据的个数。
若源设备是外设， 内部有 FIFO， burst 长度不能超过其
FIFO 深度， 建议配合 FIFO 水线使用。
若源设备是外设， 内部无 FIFO，若配置了源地址递增，则
burst 长度不能超过外设的地址空间。 否则，递增的源地址
会超过该设备的地址空间，若该地址无映射，那么可能导
致无法预料的结果。
若源设备是存储器， 若配置了源地址递增， 则 burst 长度
的配置需要考虑存储器地址边界。 源地址+burst 长度不能
超过其存储器地址边界。 否则， 源地址递增会访问到超过
该设备的地址空间，若该地址无映射，那么可能导致无法
预料的结果。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>trans_size</name>
              <description>通过写该寄存器可设定 DMA 传输的长度，前提是 DMAC
是流控制器。这里 transfer size 表示的源设备待传数据的
个数。
读该寄存器可得到在与目的设备相连的总线上已传出的数
据个数。
当该通道处于活动状态时，读该寄存器得不到有效信息。
这是因为当软件得到读出的寄存器值，该寄存器的值已经
随着通道传输改变了。对该寄存器的读操作一般是用在通
道被启动后然后又停止传输时。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAC_C3_CONFIG</name>
          <displayName>DMAC_C3_CONFIG</displayName>
          <description>通道3配置寄存器</description>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_halt</name>
              <description>Halt 位。
0：允许 DMA 请求；
1：忽略后来的 DMA 请求，通道 FIFO 中的内容都被传
完。
该位可以和 Active 位以及通道使能位一起用于无数据丢失
地关闭一个 DMA 通道。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_active</name>
              <description>Active 位。
0：通道 FIFO 中没有数据；
1：通道 FIFO 中有数据。
该位可以和 Halt 位以及通道使能位一起用于无数据丢失地
关闭一个 DMA 通道。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ch_lock</name>
              <description>Lock 位。
0：禁止总线上 lock 传输；
1：使能总线上 lock 传输。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tc_int_msk</name>
              <description>传输完成中断屏蔽位。
0：屏蔽本通道的传输完成中断。
1：不屏蔽本通道的传输完成中断。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>err_int_msk</name>
              <description>错误中断屏蔽位。
0：屏蔽本通道的错误中断。
1：不屏蔽本通道的错误中断。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flow_ctrl</name>
              <description>流控及传输类型字段。
该字段用于指定流控制器和传输类型。流控制器可以是
DMAC、源设备和目的设备。
传输类型可以是存储器到外设、外设到存储器、外设到外
设、存储器到存储器。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dest_periph</name>
              <description>目的设备。该字段用于选择一个外设请求信号作为本通道
的 DMA 目的设备的请求信号。
如果 DMA 传输的目的设备是存储器则该字段被忽略。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。
写入时必须写入 0，读出时应被屏蔽。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>src_periph</name>
              <description>源设备。该字段用于选择一个外设请求信号作为本通道的
DMA 源设备的请求信号。
如果 DMA 传输的源设备是存储器则该字段被忽略。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ch_en</name>
              <description>通道使能位。读该寄存器可得知本通道当前是处于什么状
态（也可通过读寄存器 DMAC_ENABLED_CHNS 得
到） 。
0：关闭通道；
1：启动通道。
通过清零可关闭通道。将该位被清零时，当前的总线传输
会继续执行直到完成。然后通道关闭， FIFO 中剩余的数据
全部丢失；当最后一个 LLI 完成或传输中出现错误时，通
道也会被关闭，同时该位被清零；如果要关闭通道，而又
不使通道 FIFO 中的数据丢失，则 Halt 位也必须同时被置
位，使通道忽略后来的 DMA 请求。然后必须轮询 active
位，直到其值变为 0，表明通道 FIFO 中不再留有数据。此
时才能够清除 enable 位。
通过置位启动通道必须先重新初始化通道，然后才能再次
启动通道；若通过简单的置位启动通道，会引发不可预测
性的后果。
当刚通过写 DMAC_Cn_CONFIG [0]位关闭一个通道时，必
须要等到轮询到寄存器 DMAC_ENABLED_CHNS 中的相
应 bit 为 0 后，才能将 DMAC_Cn_CONFIG [0]重新置位。
这是因为通道实际的关闭并没有在将 DMAC_Cn_CONFIG
[0]清零后立即生效。总线 burst 的运行时延时也必须要考
虑到。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH</name>
      <description>HIEFC_COMMON_REGS peripheral interface</description>
      <groupName>FLASH</groupName>
      <baseAddress>0x14710000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x608</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>HIEFC_COMMON_REGS</name>
        <value>27</value>
      </interrupt>
      <registers>
        <register>
          <name>EFLASH_CMD</name>
          <displayName>EFLASH_CMD</displayName>
          <description>命令寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmd_read_size</name>
              <description>Read Size 寄存器 Unit:Word（32bit） 。
00： 1（cmd_addr 需要按 32bit 对齐） ；
01： 4（cmd_addr 需要按 128bit 对
齐） ；
10： 8（cmd_addr 需要按 128bit 对
齐） ；
11： 12（cmd_addr 需要按 128bit 对
齐） 。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmd_pgm_size</name>
              <description>Program Size寄存器,Unit:Word（32bit）。
0x1: 4 ；
0x2: 8 ；
…
0x1F:124；
0x20:128；
others:非法值。
cmd_addr+cmd_pgm_size寻址范围不能跨越row（128Word）。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmd_code</name>
              <description>操作字寄存器。
001： READ；
010： main_rgn0/main_rgn1 Program；
011： info_rgn0/info_rgn1 Program；
100： main_rgn0/main_rgn1 Erase；
101： info_rgn0/info_rgn1 Erase；
110： Mass Erase（包含
main_rgn0/main_rgn1，不包含
info_rgn0/info_rgn1） ；
其他： 无操作。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>exec_state</name>
              <description>Flash CMD 执行状态 debug 寄存器。
00（IDLE） ： 无操作或操作已完成；
01（RUNNING） ： 有操作在执行；
10（FINISH） ： 操作完成，但完成标示未
清除（中断模式才生效） 。
其他： 保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmd_start</name>
              <description>Flash CMD 操作启动寄存器。
写 1 启动 Flash CMD 操作；
写 0 无影响；
读 1 Flash CMD 操作未完成；
读 0 Flash CMD 操作完成或无操作。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EFLASH_ADDR</name>
          <displayName>EFLASH_ADDR</displayName>
          <description>地址寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cmd_addr</name>
              <description>Program、 Erase 或者 Read 的起始地址寄
存器， Unit:Byte（8bit） 。
Main_rgn0/main_rgn1 起始地
址:0x00_0000（Unit:Byte） ；
Info_rgn0/info_rgn1 起始地址:0x80_0000（Unit:Byte）。
注意：低 2bit 无法写入。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD_CFG_COMMON</name>
          <displayName>CMD_CFG_COMMON</displayName>
          <description>CMD配置寄存器。</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_mode</name>
              <description>CMD 操作方式控制寄存器。
0： 轮询方式；
1： 中断方式，此方式 Flash CMD 操作完成后需要配置int_clr_finish 清除完成标识，方可进行下一次操作。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_STATUS</name>
          <displayName>INT_RAW_STATUS</displayName>
          <description>中断原始状态寄存器。</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_err_ecc_chk</name>
              <description>Main_rgn0/main_rgn1读数据ecc检验错误原始中断寄存器。
0:无错误，或者读数据ecc检错功能未使能；
1:发生ecc检查错误。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_err_ecc_corr</name>
              <description>Main_rgn0/main_rgn1 读数据 ECC 纠正错误原始中断寄存器。
0： 无错误，或者读数据 ECC 纠错功能未使能；
1： 发生无法纠正的 ECC 错误。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_err_ahb</name>
              <description>ahb请求错误原始中断寄存器。
0:无错误；
1： ahb 读请求地址超过Main_rgn0/main_rgn1 范围或发生了 AHB
写请求。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_err_smwr</name>
              <description>Pgm/erase 错误原始中断状态寄存器。
0： pass；
1： failure。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_err_illegal</name>
              <description>非法 Flash CMD 操作错误原始中断寄存器。
0： 无错误；
1： 存在 Flash CMD 操作错误，具体错误，需要查询 FLASH_STATUS 寄存器。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_raw_finish</name>
              <description>Flash CMD操作完成原始中断寄存器。
0:无操作或者操作未完成；
1:操作已完成。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENABLE</name>
          <displayName>INT_ENABLE</displayName>
          <description>中断使能配置寄存器。</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_en_err_ecc_chk</name>
              <description>Main_rgn0/main_rgn1 读数据ecc检验错误中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int_en_err_ecc_corr</name>
              <description>Main_rgn0/main_rgn1读数据ecc纠正错误中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int_en_err_ahb</name>
              <description>ahb请求错误中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int_en_err_smwr</name>
              <description>Pgm/erase错误中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>int_en_err_illegal</name>
              <description>非法Flash CMD操作错误中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_en_finish</name>
              <description>Flash CMD操作完成中断使能寄存器。
0:不使能，上报原始中断，不上报中断状态，不上报CPU中断；
1:使能，上报原始中断，上报中断状态，上报CPU中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLEAR</name>
          <displayName>INT_CLEAR</displayName>
          <description>中断清除寄存器。</description>
          <addressOffset>0x10c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_clr_err_ecc_chk</name>
              <description>Main_rgn0/main_rgn1读数据ecc检验错误中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int_clr_err_ecc_corr</name>
              <description>Main_rgn0/main_rgn1 读数据ecc纠正错误中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int_clr_err_ahb</name>
              <description>ahb请求错误中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int_clr_err_smwr</name>
              <description>Pgm/erase错误中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>int_clr_err_illegal</name>
              <description>非法Flash CMD操作错误中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>int_clr_finish</name>
              <description>Flash CMD操作完成中断清除寄存器。
0:不清除；
1:清除原始中断与中断状态。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PFEFETCH_CTRL</name>
          <displayName>PFEFETCH_CTRL</displayName>
          <description>预取控制寄存器。</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>prefetch_enable</name>
              <description>预取使能控制寄存器。
0:预取使能关闭；
1:每次AHB传输完成尾地址向前预取32byte数据（以16byte对齐）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CTRL</name>
          <displayName>CACHE_CTRL</displayName>
          <description>Cache控制寄存器。</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cache_invalid_req</name>
              <description>Cache数据无效请求控制寄存器 。
写1:请求Cache invalid，逻辑完成invalid后自动清除该bit；
写0无效；
读0:最近一次invalid请求已完成；
读1:最近一次invalid请求未完成。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cache_replacement_sel</name>
              <description>Cache替换策略选择控制寄存器。
0:PLRU策略；
1:Round Robin策略。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cache_enable</name>
              <description>Cache使能控制寄存器。
0:Cache使能关闭；
1:Cache使能打开，AHB传输数据将会查询Cache，Cache Hit则数据从Cache获取，Cache miss则数据从eFlash获取，并将此地址数据缓存进入Cache。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ECC_CTRL</name>
          <displayName>FLASH_ECC_CTRL</displayName>
          <description>Flash ECC检错纠错使能控制寄存器。</description>
          <addressOffset>0x12c</addressOffset>
          <size>32</size>
          <resetValue>0x0000001C</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>flash_ecc_blank_filter_enable</name>
              <description>Flash 未编程区域 ECC 屏蔽过滤使能控制（全1判断为未编程区域）。
0:不使能此功能，所有read访问数据都根据flash_ecc_correct_enable、flash_ecc_check_enable配置进行相应的ECC检查或者纠正；
1:使能此功能，检查read访问数据内容，只有非全1数据根据flash_ecc_correct_enable、flash_ecc_check_enable配置进行相应的ECC检查或者纠正。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flash_info_ecc_correct_enable</name>
              <description>Flash Information region ECC纠错功能控制。
0:回读数据发生错误时，不进行ECC纠错；
1:回读数据发生1bit错误时，进行ECC纠错。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flash_info_ecc_check_enable</name>
              <description>Flash Information region 检错使能控制（Program 强制ECC打开）。
0:回读数据不进行ECC检查；
1:回读数据进行ECC检查。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flash_main_ecc_correct_enable</name>
              <description>Flash Main_rgn0/main_rgn1 ECC纠错功能控制。
0： 回读数据发生错误时，不进行ECC 纠错；
1： 回读数据发生 1bit 错误时，进行ECC 纠错。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>flash_main_ecc_check_enable</name>
              <description>Flash Main_rgn0/main_rgn1 检错使能控制（Program 强制 ECC 打开） 。
0： 回读数据不进行 ECC 检查；
1： 回读数据进行 ECC 检查。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_STATUS</name>
          <displayName>FLASH_STATUS</displayName>
          <description>CMD操作FLASH状态寄存器。</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>address_unmap</name>
              <description>Flash CMD 操作地址是否越界指示寄存器。
0： 无错误；
1： 地址越界错误。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>parameter_illegal</name>
              <description>Flash CMD 操作参数是否有效指示寄存器。
0： 无错误；
1： 操作参数错误。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>main_rgn1_illegal</name>
              <description>Flash CMD 操作 main_rgn1 是否发生非法访问指示寄存器。
0： 无错误；
1： main_rgn1 发生非法访问。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>main_rgn0_illegal</name>
              <description>Flash CMD 操作 main_rgn0 是否发生非法访问指示寄存器。
0： 无错误；
1： main_rgn0 发送非法访问。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>info_rgn1_illegal</name>
              <description>Flash CMD 操作 info_rgn1 是否发生非法访问指示寄存器。
0： 无错误；
1： info_rgn1 区发生非法访问。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>info_rgn0_illegal</name>
              <description>Flash CMD 操作 info_rgn0 是否发生非法访问指示寄存器。
0： 无错误；
1： info_rgn0 区发生非法访问。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>mid_illegal</name>
              <description>发生非法访问时， Flash CMD 寄存器非法mid value。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>opcode_illegal</name>
              <description>发生非法访问时， Flash CMD 寄存器非法opcode value。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_RDATA_VLD</name>
          <displayName>FLASH_RDATA_VLD</displayName>
          <description>FLASH读数据有效指示寄存器。</description>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>flash_rdata_vld</name>
              <description>读数据FIFO数据有效指示寄存器。
0:读数据fifo数据有效；
1:读数据fifo数据无效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB_ERR_ADDR</name>
          <displayName>AHB_ERR_ADDR</displayName>
          <description>AHB错误请求地址记录寄存器。</description>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ahb_err_address</name>
              <description>int_raw_err_ahb发生时，记录第一次发生ahb错误访问的地址信息，包括越界与ahb 写操作。
配置中断清除寄存器int_clr_err_ahb时，该寄存器清0，并开始记录下一次错误请求地址信息。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAGIC_LOCK</name>
          <displayName>MAGIC_LOCK</displayName>
          <description>CMD操作魔术字保护寄存器。</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>magic_lock</name>
              <description>写入0xFEDC_BA98，魔术字解锁，CMD相关操作寄存器写入权限打开，
写入其他数值，魔术字锁定，CMD相关操作寄存器写入权限关闭。
读出0xFEDC_BA98表示解锁，读出0表示锁定。
默认为解锁状态。
CMD 相关操作寄存器包括：
EFLASH_CMD、 EFLASH_ADDR、FLASH_RDATA_VLD、FLASH_RDATA。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EFLASH_CAPACITY_0</name>
          <displayName>EFLASH_CAPACITY_0</displayName>
          <description>模块信息寄存器0。</description>
          <addressOffset>0x3f0</addressOffset>
          <size>32</size>
          <resetValue>0x00028000</resetValue>
          <fields>
            <field>
              <name>main_capacity</name>
              <description>Main_rgn0 与 main_rgn1 容量指示寄存器 unit:byte 。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EFLASH_CAPACITY_1</name>
          <displayName>EFLASH_CAPACITY_1</displayName>
          <description>模块信息寄存器1。</description>
          <addressOffset>0x3f4</addressOffset>
          <size>32</size>
          <resetValue>0x20002000</resetValue>
          <fields>
            <field>
              <name>information_capacity</name>
              <description>info_rgn0/info_rgn1容量指示寄存器 unit:byte。
8KB 。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>page_size</name>
              <description>eFlash page容量指示寄存器 unit:byte。
8KB 。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EFLASH_CAPACITY_2</name>
          <displayName>EFLASH_CAPACITY_2</displayName>
          <description>模块信息寄存器2。</description>
          <addressOffset>0x3f8</addressOffset>
          <size>32</size>
          <resetValue>0x0D942422</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>min_erase_size</name>
              <description>最小擦除size（2**n）unit:Byte。
8KB。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>max_pgm_size</name>
              <description>连续编程最大size（2**n） Byte。
512Bytes。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>min_pgm_size_main</name>
              <description>main_rgn0/main_rgn1 最小编程size(2**n) Byte。
16Byte。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>io_write_length_main</name>
              <description>写 main_rgn0/main_rgn1 IO size (2**n) Byte（不算 ECC bit） 。
16Byte。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>io_read_length</name>
              <description>读IO size （2**n） Byte。
4byte。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_WDATA</name>
          <displayName>PGM_WDATA</displayName>
          <description>编程数据寄存器。</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>pgm_wdata</name>
              <description>编程数据Buffer寄存器。
0x400-0x5FC，都映射到同一写数据寄存器；
写0x400-0x5FC任意一个寄存器一次，写数据buffer数据增加一个Word（32bits），此buffer数据先进先出。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_RDATA</name>
          <displayName>FLASH_RDATA</displayName>
          <description>读数据寄存器。</description>
          <addressOffset>0x600</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>flash_rdata</name>
              <description>读数据FIFO寄存器。
cmd操作apb read时，读一次该寄存器，读取一个Word（32bits）数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BUF_CLEAR</name>
          <displayName>BUF_CLEAR</displayName>
          <description>编程数据Buffer清理寄存器。</description>
          <addressOffset>0x604</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pgm_wbuf_cnt</name>
              <description>编程数据buffer当前存量数据size指示寄存器 unit:Word(32bit)。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pgm_wdata_clr</name>
              <description>编程数据Buffer数据清除控制寄存器。
写1:清除当前Buffer中残留数据；
写0:无效果。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIO0</name>
      <description>GPIO</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x14500000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIO</name>
        <value>71</value>
      </interrupt>
      <registers>
        <register>
          <dim>256</dim>
          <dimIncrement>4</dimIncrement>
          <dimIndex>0-255</dimIndex>
          <name>GPIO_DATA%s</name>
          <displayName>GPIO_DATA%s</displayName>
          <description>GPIO_DATA 为 GPIO 数据寄存器，用来对输入或输出数据进行缓存。</description>
          <addressOffset>0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_data</name>
              <description>当 GPIO 配置为输入模式时，为 GPIO 输入数据；当 GPIO 配置为输出模式时，为输出数据。各比特均可独立控制。与GPIO_DIR 配合使用。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DIR</name>
          <displayName>GPIO_DIR</displayName>
          <description>GPIO_DIR 为 GPIO 方向控制寄存器。用来配置 GPIO 方向。</description>
          <addressOffset>0x400</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_dir</name>
              <description>GPIO 方向控制寄存器。 bit[7:0]分别对应GPIO_DATA bit[7:0]，各比特可独立控制。
0：输入；1：输出。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_IS</name>
          <displayName>GPIO_IS</displayName>
          <description>GPIO_IS 为 GPIO 中断触发寄存器。用来配置 GPIO 触发电平方式。</description>
          <addressOffset>0x404</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_is</name>
              <description>GPIO 中断触发控制寄存器， bit[7:0]分别对
应 GPIO_DATA bit[7:0]，各比特独立控
制。
0：边沿触发中断；
1：电平触发中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_IBE</name>
          <displayName>GPIO_IBE</displayName>
          <description>GGPIO_IBE 为 GPIO 双沿触发中断寄存器。用来配置 GPIO 沿触发方式</description>
          <addressOffset>0x408</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_ibe</name>
              <description>GPIO 中断沿触发控制寄存器， bit[7:0]分别
对应 GPIO_DATA bit[7:0]，各比特独立控
制。
0：单边沿触发中断，具体是上升沿还是下
降沿触发由 GPIO_IEV 控制；
1：双边触发中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_IEV</name>
          <displayName>GPIO_IEV</displayName>
          <description>GPIO_IEV 为 GPIO 触发中断条件寄存器。用来配置 GPIO 触发中断条件。</description>
          <addressOffset>0x40C</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_iev</name>
              <description>GPIO 触发中断条件寄存器， bit[7:0]分别对
应 GPIO_DATA bit[7:0]，各比特独立控
制。
0：下降沿或低电平触发中断，具体由
GPIO_IS 控制；
1：上升沿或高电平触发中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_IE</name>
          <displayName>GPIO_IE</displayName>
          <description>GPIO_IE 为 GPIO 中断屏蔽寄存器。用来屏蔽 GPIO 中断。</description>
          <addressOffset>0x410</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_ie</name>
              <description>GPIO 中断屏蔽寄存器， bit[7:0]分别对应
GPIO_DATA bit[7:0]，各比特独立控制。
0：屏蔽中断；1：不屏蔽中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_RIS</name>
          <displayName>GPIO_RIS</displayName>
          <description>GPIO_RIS 为 GPIO 原始中断状态寄存器。用来查询 GPIO 原始中断状态。</description>
          <addressOffset>0x414</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_ris</name>
              <description>GPIO 原始中断寄存器， bit[7:0]分别对应
GPIO_DATA bit[7:0]，指示未屏蔽的中断
状态。该状态不受 GPIO_IE 寄存器屏蔽控
制。
0：未发生中断；
1：已发生中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MIS</name>
          <displayName>GPIO_MIS</displayName>
          <description>GPIO_MIS 为 GPIO 屏蔽状态中断寄存器。用来查询 GPIO 屏蔽后的中断状态。对所
有位进行或操作得到中断输出 gpio_int。</description>
          <addressOffset>0x418</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_mis</name>
              <description>GPIO 屏蔽后中断寄存器， bit[7:0]分别对应
GPIO_DATA bit[7:0]，指示经屏蔽后的中
断状态。该状态受 GPIO_IE 寄存器屏蔽控
制。
0：中断无效；
1：中断有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_IC</name>
          <displayName>GPIO_IC</displayName>
          <description>GPIO_IC 为 GPIO 中断清除寄存器。用来清除 GPIO 产生的中断，同时清除
GPIO_RIS 寄存器和 GPIO_MIS 寄存器。</description>
          <addressOffset>0x41C</addressOffset>
          <size>0x08</size>
          <resetValue>0x00</resetValue>
          <fields>
            <field>
              <name>gpio_ic</name>
              <description>GPIO 中断清除寄存器， bit[7:0]分别对应
GPIO_DATA bit[7:0]，各比特可独立控
制。
0：无影响；
1：清除中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO1</name>
      <baseAddress>0x14501000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO2</name>
      <baseAddress>0x14502000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO3</name>
      <baseAddress>0x14503000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO4</name>
      <baseAddress>0x14504000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO5</name>
      <baseAddress>0x14505000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO6</name>
      <baseAddress>0x14506000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIO0">
      <name>GPIO7</name>
      <baseAddress>0x14507000</baseAddress>
    </peripheral>
    <peripheral>
      <name>GPT0</name>
      <description>GPT0</description>
      <groupName>GPT</groupName>
      <baseAddress>0x14700000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPT</name>
        <value>71</value>
      </interrupt>
      <registers>
        <register>
          <name>PWMx_CFG0</name>
          <displayName>PWMx_CFG0</displayName>
          <description>PWMx_CFG0 为 GPTx 的配置寄存器 0。</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000018F</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_period</name>
              <description>GPTx 的周期数。
注意： 要求配置值必须 ≥ 2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_CFG1</name>
          <displayName>PWMx_CFG1</displayName>
          <description>PWMx_CFG1 为 GPTx 的配置寄存器 1。</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000C7</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_duty</name>
              <description>GPTx 的高电平拍数，如果大于等于周期
数，则输出一直为高电平。
注意： 要求配置值必须 ≥ 1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-right</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_CFG2</name>
          <displayName>PWMx_CFG2</displayName>
          <description>PWMx_CFG2 为 GPTx 的配置寄存器 2。</description>
          <addressOffset>0x0008</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_num</name>
              <description>GPTx 输出方波的数目。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_CTRL</name>
          <displayName>PWMx_CTRL</displayName>
          <description>PWMx_CTRL 为 GPTx 的控制寄存器。</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_keep</name>
              <description>GPTx 输出模式。
0： GPTx 输出固定数目的方波；
1： GPTx 一直输出方波。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pwmx_inv</name>
              <description>GPTx 输出正反相控制。
0： GPTx 正常输出方波；
1： GPTx 反相输出方波。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pwmx_enable</name>
              <description>GPTx 使能控制。0： GPTx 模块关闭；1： GPTx 模块使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_STATE0</name>
          <displayName>PWMx_STATE0</displayName>
          <description>PWMx_STATE0 为 GPTx 的状态寄存器 0。</description>
          <addressOffset>0x010</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_period_st</name>
              <description>GPTx 的内部模块采用的计数周期数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_STATE1</name>
          <displayName>PWMx_STATE1</displayName>
          <description>PWMx_STATE1 为 GPTx 的状态寄存器 1。</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_duty_st</name>
              <description>GPTx 的内部模块采用的高电平拍数。 </description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWMx_STATE2</name>
          <displayName>PWMx_STATE2</displayName>
          <description>PWMx_STATE2 为 GPTx 的状态寄存器 2。</description>
          <addressOffset>0x018</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_cnt_st</name>
              <description>GPTx 模块剩余输出的方波数目。只有当
pwmx_busy==1， pwmx_keep_st==0 时才
有意义。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_keep_st</name>
              <description>GPTx 的内部模块采用的输出方波的模
式。
0：输出固定数目的方波；
1：一直输出方波。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_busy</name>
              <description>GPTx 模块的工作状态。
0：空闲，输出完成；
1：正在输出方波。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pwmx_num_st</name>
              <description>GPTx 的内部模块采用的输出方波数目。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="GPT0">
      <name>GPT1</name>
      <baseAddress>0x14701000</baseAddress>
    </peripheral>
    <peripheral>
      <name>I2C</name>
      <description>I2C peripheral interface</description>
      <groupName>I2C</groupName>
      <baseAddress>0x14100000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xec</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C</name>
        <value>57</value>
      </interrupt>
      <registers>
        <register>
          <name>I2C_GLB</name>
          <displayName>I2C_GLB</displayName>
          <description>I2C全局配置寄存器</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sda_hold_duration</name>
              <description>SDA hold time时长。建议配置为0xa。
注意：只能控制从主机发往从设备的数据的hold time时长。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_enable</name>
              <description>I2C使能控制。
0：禁止；（此时会清空TX FIFO和RX FIFO）
1：使能。
注意：若出现时序异常，请先禁止控制器，然后再使能，以防TX FIFO和RX FIFO有上次操作的残留数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_HCNT</name>
          <displayName>I2C_HCNT</displayName>
          <description>I2C高电平时长寄存器</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_high_duration</name>
              <description>SCL 高电平时长。
建议在标准模式下为SCL周期的1/2，快速模式下为SCL周期的0.36。
标准模式下：
i2c_high_duration = (FI2C_CLK/FSCL) x 0.5
快速模式下：
i2c_high_duration = (FI2C_CLK/FSCL) x 0.36 (FSCL为SCL总线的频率)
以参考时钟为100MHz且工作在快速模式下(FSCL = 400kHz)为例，i2c_high_duration =(100MHz / 400kHz) x 0.36=90。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_LCNT</name>
          <displayName>I2C_LCNT</displayName>
          <description>I2C低电平时长寄存器</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_low_duration</name>
              <description>SCL低电平时长。
建议在标准模式下为SCL周期的1/2，快速模式下为SCL周期的0.64。
标准模式下：
i2c_low_duration = (Fpclk_i2c/FSCL) x 0.5
快速模式下：
i2c_low_duration = (Fpclk_i2c/FSCL) x 0.64 (FSCL为SCL总线的频率)
以参考时钟为100MHz且工作在快速模式下(FSCL = 400 kHz)为例，i2c_low_duration=(100MHz / 400kHz) x 0.64=160。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DEV_ADDR</name>
          <displayName>I2C_DEV_ADDR</displayName>
          <description>I2C器件地址寄存器</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dev_addr_byte4</name>
              <description>器件地址字节4。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dev_addr_byte3</name>
              <description>器件地址字节3。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dev_addr_byte2</name>
              <description>器件地址字节2。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dev_addr_byte1</name>
              <description>器件地址字节1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DATA_BUF</name>
          <displayName>I2C_DATA_BUF</displayName>
          <description>I2C数据buf寄存器</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>data_buf_byte4</name>
              <description>数据buf字节4。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>data_buf_byte3</name>
              <description>数据buf字节3。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>data_buf_byte2</name>
              <description>数据buf字节2。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>data_buf_byte1</name>
              <description>数据buf字节1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PATTERN_DATA1</name>
          <displayName>I2C_PATTERN_DATA1</displayName>
          <description>I2C PATTERN数据寄存器1</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>pattern_data_byte4</name>
              <description>PATTERN数据字节4。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte3</name>
              <description>PATTERN数据字节3。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte2</name>
              <description>PATTERN数据字节2。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte1</name>
              <description>PATTERN数据字节1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PATTERN_DATA2</name>
          <displayName>I2C_PATTERN_DATA2</displayName>
          <description>I2C PATTERN数据寄存器2</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>pattern_data_byte8</name>
              <description>PATTERN数据字节8。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte7</name>
              <description>PATTERN数据字节7。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte6</name>
              <description>PATTERN数据字节6。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pattern_data_byte5</name>
              <description>PATTERN数据字节5。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TX_FIFO</name>
          <displayName>I2C_TX_FIFO</displayName>
          <description>I2C TX FIFO 数据寄存器</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo</name>
              <description>TX FIFO入口。
写入的数据是待发送出去的数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_RX_FIFO</name>
          <displayName>I2C_RX_FIFO</displayName>
          <description>I2C RX FIFO 数据寄存器</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo</name>
              <description>RX FIFO出口。
读出的数据是I2C总线上收到的数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_0</name>
          <displayName>I2C_TIMINIG_CMD_0</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_1</name>
          <displayName>I2C_TIMINIG_CMD_1</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_2</name>
          <displayName>I2C_TIMINIG_CMD_2</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_3</name>
          <displayName>I2C_TIMINIG_CMD_3</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_4</name>
          <displayName>I2C_TIMINIG_CMD_4</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_5</name>
          <displayName>I2C_TIMINIG_CMD_5</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_6</name>
          <displayName>I2C_TIMINIG_CMD_6</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_7</name>
          <displayName>I2C_TIMINIG_CMD_7</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_8</name>
          <displayName>I2C_TIMINIG_CMD_8</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_9</name>
          <displayName>I2C_TIMINIG_CMD_9</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_10</name>
          <displayName>I2C_TIMINIG_CMD_10</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_11</name>
          <displayName>I2C_TIMINIG_CMD_11</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_12</name>
          <displayName>I2C_TIMINIG_CMD_12</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_13</name>
          <displayName>I2C_TIMINIG_CMD_13</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_14</name>
          <displayName>I2C_TIMINIG_CMD_14</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_15</name>
          <displayName>I2C_TIMINIG_CMD_15</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_16</name>
          <displayName>I2C_TIMINIG_CMD_16</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_17</name>
          <displayName>I2C_TIMINIG_CMD_17</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_18</name>
          <displayName>I2C_TIMINIG_CMD_18</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_19</name>
          <displayName>I2C_TIMINIG_CMD_19</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_20</name>
          <displayName>I2C_TIMINIG_CMD_20</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_21</name>
          <displayName>I2C_TIMINIG_CMD_21</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_22</name>
          <displayName>I2C_TIMINIG_CMD_22</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_23</name>
          <displayName>I2C_TIMINIG_CMD_23</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_24</name>
          <displayName>I2C_TIMINIG_CMD_24</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_25</name>
          <displayName>I2C_TIMINIG_CMD_25</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_26</name>
          <displayName>I2C_TIMINIG_CMD_26</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_27</name>
          <displayName>I2C_TIMINIG_CMD_27</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_28</name>
          <displayName>I2C_TIMINIG_CMD_28</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_29</name>
          <displayName>I2C_TIMINIG_CMD_29</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_30</name>
          <displayName>I2C_TIMINIG_CMD_30</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMINIG_CMD_31</name>
          <displayName>I2C_TIMINIG_CMD_31</displayName>
          <description>I2C时序命令寄存器</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timing_cmd</name>
              <description>时序命令。n = 0，1，2，…31
0x00：EXIT（结束，用于逻辑退出）；
0x01：S（总线START）；
0x02：WDA4（发送dev_addr_byte4）；
0x03：WDA3（发送dev_addr_byte3）；
0x04：WDA2（发送dev_addr_byte2）；
0x05：WDA1（发送dev_addr_byte1）；
0x06：WDB4（发送data_buf_byte4）；
0x07：WDB3（发送data_buf_byte3）；
0x08：WDB2（发送data_buf_byte2）；
0x09：WDB1（发送data_buf_byte1）；
0x0A：WPD8（发送pattern_data_byte8）；
0x0B：WPD7（发送pattern_data_byte7）；
0x0C：WPD6（发送pattern_data_byte6）；
0x0D：WPD5（发送pattern_data_byte5）；
0x0E：WPD4（发送pattern_data_byte4）；
0x0F：WPD3（发送pattern_data_byte3）；
0x10：WPD2（发送pattern_data_byte2）；
0x11：WPD1（发送pattern_data_byte1）；
0x12：RD（接收1字节数据）；
0x13：RACK（接收低电平应答）；
0x14：RNACK（接收高电平非应答）；
0x15：RNC（接收应答，高低电平都无所谓）；
0x16：SACK（发送低电平应答）；
0x17：SNACK（发送高电平非应答）；
0x18：JMPN1（有限次数跳转，目的由I2C_DST1寄存器指出，次数由I2C_LOOP1寄存器指出）；
0x19：JMPN2（有限次数跳转，目的由I2C_DST2寄存器指出，次数由I2C_LOOP2寄存器指出）；
0x1A：JMPN3（有限次数跳转，目的由I2C_DST3寄存器指出，次数由I2C_LOOP3寄存器指出）；
0x1B：UNDEF（未定义）；
0x1C：UNDEF（未定义）；
0x1D：UDB1（从TX FIFO 更新数据到 data_buf_byte1）；
0x1E：SR（总线repeated START）；
0x1F：P（总线STOP）。
注意：
执行UDB1命令时，若TX FIFO为空，则控制器会等待直到TX FIFO有数据；等待期间控制器不会改变I2C总线的状态。
执行RD命令时，若RX FIFO满了，则控制器会等待直到RX FIFO有空位；等待期间控制器不会改变I2C总线的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_LOOP1</name>
          <displayName>I2C_LOOP1</displayName>
          <description>I2C循环次数寄存器1</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>loop_num1</name>
              <description>指定循环次数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DST1</name>
          <displayName>I2C_DST1</displayName>
          <description>I2C跳转目的寄存器1</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dst_timing_cmd1</name>
              <description>指定跳转到哪个时序命令寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_LOOP2</name>
          <displayName>I2C_LOOP2</displayName>
          <description>I2C循环次数寄存器2</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>loop_num2</name>
              <description>指定循环次数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DST2</name>
          <displayName>I2C_DST2</displayName>
          <description>I2C跳转目的寄存器2</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dst_timing_cmd2</name>
              <description>指定跳转到哪个时序命令寄存器</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_LOOP3</name>
          <displayName>I2C_LOOP3</displayName>
          <description>I2C循环次数寄存器3</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>loop_num3</name>
              <description>指定循环次数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DST3</name>
          <displayName>I2C_DST3</displayName>
          <description>I2C跳转目的寄存器3</description>
          <addressOffset>0xc4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dst_timing_cmd3</name>
              <description>指定跳转到哪个时序命令寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TX_WATERMARK</name>
          <displayName>I2C_TX_WATERMARK</displayName>
          <description>I2C TX FIFO水线寄存器</description>
          <addressOffset>0xc8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_watermark</name>
              <description>TX FIFO水线。当TX FIFO里的数据数目比tx_watermark小时，tx_lt_watermark_raw原始中断会被置1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_RX_WATERMARK</name>
          <displayName>I2C_RX_WATERMARK</displayName>
          <description>I2C RX FIFO水线寄存器</description>
          <addressOffset>0xcc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_watermark</name>
              <description>RX FIFO水线。当RX FIFO里的数据数目比rx_watermark大时，rx_gt_watermark_raw原始中断会被置1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CTRL1</name>
          <displayName>I2C_CTRL1</displayName>
          <description>I2C控制寄存器1</description>
          <addressOffset>0xd0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_operation</name>
              <description>DMA操作控制。
00：非DMA方式；
01：保留；
10：DMA写方式；
11：DMA读方式。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>start</name>
              <description>启动控制。写1会启动控制器内部的状态机去执行时序命令序列，执行完毕或者异常后逻辑会反向把此位清0。
0：不启动；
1：启动。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CTRL2</name>
          <displayName>I2C_CTRL2</displayName>
          <description>I2C控制寄存器2</description>
          <addressOffset>0xd4</addressOffset>
          <size>32</size>
          <resetValue>0x11110011</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_scl_oen</name>
              <description>监测内部I2C的SDA输出电平。
0：SDA输出低电平；
1：SDA输出高电平。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_sda_oen</name>
              <description>监测内部I2C的SCL输出电平。
0：SCL输出低电平；
1：SCL输出高电平。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_scl_in</name>
              <description>监测外部I2C总线SCL的电平。
0：总线上SCL为低电平；
1：总线上SCL为高电平。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_sda_in</name>
              <description>监测外部I2C总线SDA的电平。
0：总线上SDA为低电平；
1：总线上SDA为高电平。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_mode</name>
              <description>将I2C的SCL和SDA管脚配置成gpio模式，管脚电平由force_scl_oe_n和force_sda_oe_n决定。
0：禁止；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>force_scl_oen</name>
              <description>在 gpio_mode 有效时控制 SCL 管脚电平。
0： SCL 管脚为低电平；
1： SCL 管脚为高电平。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>force_sda_oen</name>
              <description>在gpio_mode有效时控制SDA管脚电平。
0：SDA管脚为低电平；
1：SDA管脚为高电平。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_FIFO_STAT</name>
          <displayName>I2C_FIFO_STAT</displayName>
          <description>I2C FIFO状态寄存器</description>
          <addressOffset>0xd8</addressOffset>
          <size>32</size>
          <resetValue>0x000A0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>20</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_not_full</name>
              <description>TX FIFO非满指示。
0：满；
1：非满。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_not_empty</name>
              <description>TX FIFO非空指示。
0：空；
1：非空。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_not_full</name>
              <description>RX FIFO非满指示。
0：满；
1：非满。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_not_empty</name>
              <description>RX FIFO非空指示。
0：空；
1：非空。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_vld_num</name>
              <description>TX FIFO里的有效数目。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_vld_num</name>
              <description>RX FIFO里的有效数目。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_INTR_RAW</name>
          <displayName>I2C_INTR_RAW</displayName>
          <description>I2C原始中断寄存器</description>
          <addressOffset>0xe0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>all_cmd_done_raw</name>
              <description>时序命令序列执行到EXIT命令时产生此中断。
0：无中断；
1：有中断。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>arb_lost_raw</name>
              <description>仲裁丢失。
0：无中断；
1：有中断。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>start_det_raw</name>
              <description>检查到START。
0：无中断；
1：有中断。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>stop_det_raw</name>
              <description>检查到STOP。
0：无中断；
1：有中断。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_lt_watermark_raw</name>
              <description>发送数据时，TX FIFO里的数据数目低于水线。
0：无中断；
1：有中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_gt_watermark_raw</name>
              <description>接收数据时，RX FIFO里的数据数目高于水线。
0：无中断；
1：有中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ack_bit_unmatch_raw</name>
              <description>应答位不符合预期。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_INTR_EN</name>
          <displayName>I2C_INTR_EN</displayName>
          <description>I2C中断使能寄存器</description>
          <addressOffset>0xe4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>all_cmd_done_en</name>
              <description>all_cmd_done中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>arb_lost_en</name>
              <description>arb_lost中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>start_det_en</name>
              <description>start_det中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>stop_det_en</name>
              <description>stop中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>5</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_lt_watermark_en</name>
              <description>tx_lt_watermark中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_gt_watermark_en</name>
              <description>rx_gt_watermark中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ack_bit_unmatch_en</name>
              <description>ack_bit_unmatch中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_INTR_STAT</name>
          <displayName>I2C_INTR_STAT</displayName>
          <description>I2C中断状态寄存器</description>
          <addressOffset>0xe8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>all_cmd_done</name>
              <description>所有时序命令正常完成。
0：无中断；
1：有中断。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>arb_lost</name>
              <description>仲裁丢失。
0：无中断；
1：有中断。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>start_det</name>
              <description>检查到START。
0：无中断；
1：有中断。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>stop_det</name>
              <description>检查到STOP。
0：无中断；
1：有中断。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_lt_watermark</name>
              <description>发送数据时，TX FIFO里的数据数目低于水线。
0：无中断；
1：有中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_gt_watermark</name>
              <description>接收数据时，RX FIFO里的数据数目高于水线。
0：无中断；
1：有中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ack_bit_unmatch</name>
              <description>应答位不符合预期。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IOCMG_ANA</name>
      <description>IOCMG_ANA peripheral interface</description>
      <groupName>IOCMG_ANA</groupName>
      <baseAddress>0x149f0000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xc4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>IOCMG_ANA</name>
        <value>49</value>
      </interrupt>
      <registers>
        <register>
          <name>IOCMG_17</name>
          <displayName>IOCMG_17</displayName>
          <description>QDM_INDEX/POE1 管脚配置寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_6；
0x1: QDM_INDEX；
0x2: POE1；
0x3: QDM_SYNC；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_18</name>
          <displayName>IOCMG_18</displayName>
          <description>TRSTN/ADC1_B3/CAPM1 管脚配置寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000081</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制：
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_7；
0x1: JTAG_TRSTN；
0x3: CAPM1_SRC1；
0x4: UART1_CTSN；
0x5: SPI0_CSN0；
0x6: ADTRG1；
0x8: ADC1_ANA_B3；
0x9: ACMP1_ANA_N2；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_19</name>
          <displayName>IOCMG_19</displayName>
          <description>ADC1_B4/CAPM2 管脚配置寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_0；
0x3: CAPM2_SRC1；
0x5: SPI0_TXD；
0x8: ADC1_ANA_B4；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_20</name>
          <displayName>IOCMG_20</displayName>
          <description>ADC1_B5 管脚配置寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_1；
0x3: CAPM0_SRC1；
0x5: SPI0_RXD；
0x8: ADC1_ANA_B5；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_21</name>
          <displayName>IOCMG_21</displayName>
          <description>ADC1_A1 管脚配置寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_2；
0x2: APT_EVTMP4；
0x4: UART1_RTSN；
0x5: SPI0_CSN1；
0x6: ADST1；
0x8: ADC1_ANA_A1；
0x9: ACMP1_ANA_P2；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_22</name>
          <displayName>IOCMG_22</displayName>
          <description>ADC1_A2/PGA1IN_P0 管脚配置寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_3；
0x5: SPI0_CLK；
0x8: ADC1_ANA_A2；
0x9: PGA1_ANA_P0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_23</name>
          <displayName>IOCMG_23</displayName>
          <description>ADC1_B2/PGA1IN_N0/APT6_A 管脚配置寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_4；
0x3: APT6_PWMA；
0x8: ADC1_ANA_B2；
0x9: PGA1_ANA_N0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_24</name>
          <displayName>IOCMG_24</displayName>
          <description>PGA1OUT0 管脚配置寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_5；
0x3: APT7_PWMA；
0x8: PGA1_ANA_EXT0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_25</name>
          <displayName>IOCMG_25</displayName>
          <description>ADC1_A3 管脚配置寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_6；
0x3: APT8_PWMA；
0x4: POE0；
0x6: ADST0；
0x8: ADC1_ANA_A3；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_26</name>
          <displayName>IOCMG_26</displayName>
          <description>ADC1_A4/APT6_B 管脚配置寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO2_7；
0x2: ACMP1_OUT；
0x3: APT6_PWMB；
0x8: ADC1_ANA_A4；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_27</name>
          <displayName>IOCMG_27</displayName>
          <description>ADC1_A5/APT7_B 管脚配置寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO3_0；
0x3: APT7_PWMB；
0x8: ADC1_ANA_A5；
0x9: ACMP1_ANA_N3；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_28</name>
          <displayName>IOCMG_28</displayName>
          <description>ADC1_A6/APT8_B 管脚配置寄存器。</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO3_1；
0x3: APT8_PWMB；
0x8: ADC1_ANA_A6；
0x9: ACMP1_ANA_P3；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_32</name>
          <displayName>IOCMG_32</displayName>
          <description>APT0_A 管脚配置寄存器。</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO3_5；
0x3: APT0_PWMA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_33</name>
          <displayName>IOCMG_33</displayName>
          <description>APT1_A 管脚配置寄存器。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO3_6；
0x3: APT1_PWMA；
0x8: DAC0_ANA_OUT；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_34</name>
          <displayName>IOCMG_34</displayName>
          <description>APT2_A 管脚配置寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO3_7；
0x3: APT2_PWMA；
0x8: DAC1_ANA_OUT；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_35</name>
          <displayName>IOCMG_35</displayName>
          <description>APT0_B 管脚配置寄存器。</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_0；
0x3: APT0_PWMB；
0x8: DAC2_ANA_OUT；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_36</name>
          <displayName>IOCMG_36</displayName>
          <description>APT1_B 管脚配置寄存器。</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_1；
0x3: APT1_PWMB；
0x4: ADC_OB_CLK；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_37</name>
          <displayName>IOCMG_37</displayName>
          <description>APT2_B 管脚配置寄存器。</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_2；
0x3: APT2_PWMB；
0x4: ADC_OB_DATA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_38</name>
          <displayName>IOCMG_38</displayName>
          <description>PGA0IN_P0 管脚配置寄存器。</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_3；
0x8: ADC0_ANA_A7；
0x9: PGA0_ANA_P0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_39</name>
          <displayName>IOCMG_39</displayName>
          <description>PGA0IN_N0 管脚配置寄存器。</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_4；
0x8: ADC0_ANA_B0；
0x9: PGA0_ANA_N0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_40</name>
          <displayName>IOCMG_40</displayName>
          <description>PGA0OUT 管脚配置寄存器。</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_5；
0x8: PGA0_ANA_EXT0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_41</name>
          <displayName>IOCMG_41</displayName>
          <description>GPIO4_6 管脚配置寄存器。</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_6；
0x6: ADTRG0；
0x8: ADC0_ANA_A3；
0x9: PGA1_ANA_P3；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_42</name>
          <displayName>IOCMG_42</displayName>
          <description>GPIO4_7 管脚配置寄存器。</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO4_7；
0x8: ADC0_ANA_A4；
0x9: PGA1_ANA_N3；
0xa: ACMP0_ANA_N1；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_43</name>
          <displayName>IOCMG_43</displayName>
          <description>GPIO5_0/POE0 管脚配置寄存器。</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO5_0；
0x2: ACMP0_OUT；
0x3: APT_EVTMP4；
0x4: POE0；
0x6: ADST0；
0x9: PGA1_ANA_EXT0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_48</name>
          <displayName>IOCMG_48</displayName>
          <description>GPIO5_5 管脚配置寄存器。</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO5_5；
0x1: SYS_RSTN_OUT；
0x8: ADC2_ANA_B1；
0x9: PGA2_ANA_P0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_49</name>
          <displayName>IOCMG_49</displayName>
          <description>GPIO5_6 管脚配置寄存器。</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO5_6；
0x8: ADC2_ANA_A6；
0x9: PGA2_ANA_N0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_50</name>
          <displayName>IOCMG_50</displayName>
          <description>GPIO5_7 管脚配置寄存器。</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO5_7；
0x9: PGA2_ANA_EXT0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_51</name>
          <displayName>IOCMG_51</displayName>
          <description>ADC2_A7 管脚配置寄存器。</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_0；
0x3: UART2_TXD；
0x8: ADC2_ANA_A7；
0x9: ACMP2_ANA_N1；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_52</name>
          <displayName>IOCMG_52</displayName>
          <description>ADC2_B0 管脚配置寄存器。</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_1；
0x3: UART2_RXD；
0x8: ADC2_ANA_B0；
0x9: ACMP2_ANA_P1；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_53</name>
          <displayName>IOCMG_53</displayName>
          <description>ADC2_A1 管脚配置寄存器。</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_2；
0x2: ACMP2_OUT；
0x6: ADST2；
0x8: ADC2_ANA_A1；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_54</name>
          <displayName>IOCMG_54</displayName>
          <description>ADC2_A2/POE2 管脚配置寄存器。</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_3；
0x2: POE2；
0x3: CAN_RX；
0x6: ADTRG2；
0x8: ADC2_ANA_A2；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_55</name>
          <displayName>IOCMG_55</displayName>
          <description>ADC2_B2 管脚配置寄存器。</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_4；
0x2: APT_EVTMP6；
0x3: CAN_TX；
0x8: ADC2_ANA_B2；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_58</name>
          <displayName>IOCMG_58</displayName>
          <description>APT3_A 管脚配置寄存器。</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO6_7；
0x1: APT3_PWMA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_59</name>
          <displayName>IOCMG_59</displayName>
          <description>APT4_A 管脚配置寄存器。</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_0；
0x1: APT4_PWMA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_60</name>
          <displayName>IOCMG_60</displayName>
          <description>APT5_A 管脚配置寄存器。</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_1；
0x1: APT5_PWMA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_61</name>
          <displayName>IOCMG_61</displayName>
          <description>APT3_B 管脚配置寄存器。</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_2；
0x1: APT3_PWMB；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_62</name>
          <displayName>IOCMG_62</displayName>
          <description>APT4_B 管脚配置寄存器。</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_3；
0x1: APT4_PWMB；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_63</name>
          <displayName>IOCMG_63</displayName>
          <description>APT5_B 管脚配置寄存器。</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_4；
0x1: APT5_PWMB；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IOCMG_AON</name>
      <description>IOCMG_AON peripheral interface</description>
      <groupName>IOCMG_AON</groupName>
      <baseAddress>0x147e0000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>IOCMG_AON</name>
        <value>4</value>
      </interrupt>
      <registers>
        <register>
          <name>IOCMG_0</name>
          <displayName>IOCMG_0</displayName>
          <description>TCK/SWDCK 管脚配置寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000081</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0：关闭；
1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0：快沿输出；
1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1；</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_0；
0x1: JTAG_TCK；
0x3: DS_WAKEUP0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_1</name>
          <displayName>IOCMG_1</displayName>
          <description>TMS/SWDIO 管脚配置寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000301</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0：关闭；
1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0：快沿输出；
1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_1；
0x1: JTAG_TMS；
0x3: DS_WAKEUP1；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_66</name>
          <displayName>IOCMG_66</displayName>
          <description>I2C0_SCL/UART2_TX 管脚配置寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0：关闭；
1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0：快沿输出；
1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_6；
0x1: UART2_TXD；
0x2: I2C0_SCL；
0x3: DS_WAKEUP2；
0x4: APT_EVTIO4；
0x8: ADC2_ANA_A3；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_67</name>
          <displayName>IOCMG_67</displayName>
          <description>I2C0_SDA/UART2_RX 管脚配置寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0：关闭；
1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0：快沿输出；
1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0：关闭；
1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO7_7；
0x1: UART2_RXD；
0x2: I2C0_SDA；
0x3: DS_WAKEUP3；
0x8: ADC2_ANA_A4；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IOCMG_CORE</name>
      <description>IOCMG_CORE peripheral interface</description>
      <groupName>IOCMG_CORE</groupName>
      <baseAddress>0x147f0000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>IOCMG_CORE</name>
        <value>12</value>
      </interrupt>
      <registers>
        <register>
          <name>IOCMG_6</name>
          <displayName>IOCMG_6</displayName>
          <description>XTAL_OUT 管脚配置寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>osc_ie</name>
              <description>XOUT/XIN管脚晶振功能时钟输出使能控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>osc_ds</name>
              <description>XOUT/XIN 管脚晶振功能驱动能力选择（档位越大，驱动能力越大） 。
00：档位1；
01：档位2；
10：档位3；
11：档位4。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>osc_en</name>
              <description>XOUT/XIN管脚晶振功能使能控制。
0x0：GPIO功能；
0x1：OSC功能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_3；
0x2: GPT0_PWM；
0x4: UART0_TXD；
0x8: XTAL_OUT；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_7</name>
          <displayName>IOCMG_7</displayName>
          <description>XTAL_IN 管脚配置寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_4；
0x4: UART0_RXD；
0x8: XTAL_IN；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_8</name>
          <displayName>IOCMG_8</displayName>
          <description>GPT0 管脚配置寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_5；
0x1: GPT0_PWM；
0x2: APT_EVTMP5；
0x3: CAPM1_SRC0；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_9</name>
          <displayName>IOCMG_9</displayName>
          <description>GPIO0_6 管脚配置寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_6；
0x1: CAN_RX；
0x2: APT_EVTIO5；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_10</name>
          <displayName>IOCMG_10</displayName>
          <description>GPIO0_7 管脚配置寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO0_7；
0x1: CAN_TX；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_11</name>
          <displayName>IOCMG_11</displayName>
          <description>QDM_A 管脚配置寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_0；
0x1: QDM_A；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_12</name>
          <displayName>IOCMG_12</displayName>
          <description>QDM_B 管脚配置寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_1；
0x1: QDM_B；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_13</name>
          <displayName>IOCMG_13</displayName>
          <description>BOOT/GPIO1_2 管脚配置寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_2；
0x1: UPDATE_MODE；
0x2: TEST_CLK；
0x4: UART1_RTSN；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_14</name>
          <displayName>IOCMG_14</displayName>
          <description>TDO/GPT1/UART1_RX 管脚配置寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000201</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_3；
0x1: JTAG_TDO；
0x2: GPT1_PWM；
0x3: CAPM2_SRC0；
0x4: UART1_RXD；
0x5: I2C0_SCL；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOCMG_15</name>
          <displayName>IOCMG_15</displayName>
          <description>TDI/CAPM0/UART1_TX 管脚配置寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>21</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>se</name>
              <description>管脚施密特输入控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sr</name>
              <description>管脚电平转换速率控制。
0x0：快沿输出；
0x1：慢沿输出。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pu</name>
              <description>管脚上拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pd</name>
              <description>管脚下拉控制。
0x0：关闭；
0x1：打开。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ds</name>
              <description>管脚驱动能力选择（档位越大，驱动能力越大）。
00：档位4；
01：档位3；
10：档位2；
11：档位1。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>func</name>
              <description>功能选择。
0x0: GPIO1_4；
0x1: JTAG_TDI；
0x3: CAPM0_SRC0；
0x4: UART1_TXD；
0x5: I2C0_SDA；
其它: 保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PGA0</name>
      <description>PGA_CFG peripheral interface</description>
      <groupName>PGA</groupName>
      <baseAddress>0x18200000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PGA_CFG</name>
        <value>4</value>
      </interrupt>
      <registers>
        <register>
          <name>PGA_CTRL0</name>
          <displayName>PGA_CTRL0</displayName>
          <description>PGA控制寄存器0。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga_en_out</name>
              <description>PGA输出使能。
0：不使能；
1：使能；</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_en_ext0</name>
              <description>PGA外部输出使能。
0：不使能；
1：使能；</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_ana_en</name>
              <description>PGA总体的使能。
0：不使能；
1：使能；</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PGA_CTRL1</name>
          <displayName>PGA_CTRL1</displayName>
          <description>PGA控制寄存器1。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga_trim_ofstn</name>
              <description>PGA trim NMOS offset。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_trim_ofstp</name>
              <description>PGA trim PMOS offset。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PGA_CTRL2</name>
          <displayName>PGA_CTRL2</displayName>
          <description>PGA控制寄存器2。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga_gain</name>
              <description>PGA增益。
000：1；
001：2；
010：4；
011：8；
100~111：16。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_smux</name>
              <description>PGA输入通道选择。
000：选择内部电阻，选择VIP0/VIN0 通道；
001：选择内部电阻，选择VIP1/VIN1 通道；
010：选择内部电阻，选择VIP2/VIN2 通道；
011：选择内部电阻，选择VIP3/VIN3 通道；
100：选择外部电阻，选择VIP1/VIN0 通道；
101：选择外部电阻，选择VIP1/VIN1 通道；
110：选择外部电阻，选择VIP2/VIN2 通道；
111：选择外部电阻，选择VIP3/VIN3 通道。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PGA_CTRL3</name>
          <displayName>PGA_CTRL3</displayName>
          <description>PGA SW控制寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pga_ext_loopback</name>
              <description>PGA环回开关，bit[8]控制通道0，bit[9]控制通道3，仅在外置电阻时需要使能。
00：通道0和3均不使能；
01：通道0使能，通道3不使能；
10：通道0不使能，通道3使能；
11：通道0和3均使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_sw_enlv_p</name>
              <description>PGA P输入SW开关使能，与通道选择联合配置。
0x1：VINP[0]；
0x2：VINP[1]；
0x4：VINP[2]；
0x8：VINP[3]；
其他：保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pga_sw_enlv_n</name>
              <description>PGA N输入SW开关使能，与通道选择联合配置。
0x1：VINN[0]；
0x2：VINN[1]；
0x4：VINN[2]；
0x8：VINN[3]；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="PGA0">
      <name>PGA1</name>
      <baseAddress>0x18201000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="PGA0">
      <name>PGA2</name>
      <baseAddress>0x18202000</baseAddress>
    </peripheral>
    <peripheral>
      <name>PMC</name>
      <description>PMC_REG peripheral interface</description>
      <groupName>PMC</groupName>
      <baseAddress>0x147E0000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xf10</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PMC_REG</name>
        <value>21</value>
      </interrupt>
      <registers>
        <register>
          <name>LOWPOWER_MODE</name>
          <displayName>LOWPOWER_MODE</displayName>
          <description>低功耗模式控制寄存器。</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>deepsleep_req</name>
              <description>系统进入deepsleep模式请求。
对此寄存器位域写1操作将触发芯片进入deepsleep模式流程。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>shutdown_req</name>
              <description>系统进入shutdown模式请求。
对此寄存器位域写1操作将触发芯片进入shutdown模式流程。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT32K_WAKE_CYC</name>
          <displayName>CNT32K_WAKE_CYC</displayName>
          <description>定时唤醒周期设置寄存器。</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>cnt32k_wakeup_cycle</name>
              <description>定时唤醒周期数（计数时钟clk_losc）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_CTRL</name>
          <displayName>WAKEUP_CTRL</displayName>
          <description>deepsleep模式唤醒控制寄存器。</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt32k_wakeup_en</name>
              <description>定时唤醒使能。
0：不使能；
1：使能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup3_en</name>
              <description>WAKEUP3使能。
0：不使能；
1：使能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup2_en</name>
              <description>WAKEUP2使能。
0：不使能；
1：使能。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup1_en</name>
              <description>WAKEUP1使能。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup0_en</name>
              <description>WAKEUP0使能。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup3_act_mode</name>
              <description>WAKEUP3有效模式选择。
00：上升沿有效；
01：下降沿有效；
10：高电平有效；
11：低电平有效。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup2_act_mode</name>
              <description>WAKEUP2有效模式选择。
00：上升沿有效；
01：下降沿有效；
10：高电平有效；
11：低电平有效。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup1_act_mode</name>
              <description>WAKEUP1有效模式选择。
00：上升沿有效；
01：下降沿有效；
10：高电平有效；
11：低电平有效。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wakeup0_act_mode</name>
              <description>WAKEUP0有效模式选择。
00：上升沿有效；
01：下降沿有效；
10：高电平有效；
11：低电平有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOWPOWER_STATUS</name>
          <displayName>LOWPOWER_STATUS</displayName>
          <description>低功耗状态查询寄存器。</description>
          <addressOffset>0x20c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>cldo_po_cnt</name>
              <description>cldo上电时间统计。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup3_status</name>
              <description>wakeup3唤醒源状态。
1：唤醒源高电平；
0：唤醒源低电平。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup2_status</name>
              <description>wakeup2唤醒源状态。
1：唤醒源高电平；
0：唤醒源低电平。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup1_status</name>
              <description>wakeup1唤醒源状态。
1：唤醒源高电平；
0：唤醒源低电平。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup0_status</name>
              <description>wakeup0唤醒源状态。
1：唤醒源高电平；
0：唤醒源低电平。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>starup_from_deepsleep</name>
              <description>从deepsleep状态启动标识。
1：从deepsleep模式启动；
0：未从deepsleep模式启动。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>starup_from_shutdown</name>
              <description>从shutdown状态启动标识。
1：从shutdown模式启动；
0：未从shutdown模式启动。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup_src_lock</name>
              <description>启动唤醒源查询。
bit[5]：RESETN管脚唤醒；
bit[4]：WAKEUP3唤醒；
bit[3]：WAKEUP2唤醒；
bit[2]：WAKEUP1唤醒；
bit[1]：WAKEUP0唤醒；
bit[0]：cnt32k定时唤醒。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_POR_CTRL</name>
          <displayName>CORE_POR_CTRL</displayName>
          <description>CORE域POR复位时长设置寄存器。</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>core_por_dly</name>
              <description>CORE域上电复位时长设置，以ms为单位。配置为0无效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PVD_CTRL</name>
          <displayName>PVD_CTRL</displayName>
          <description>PVD控制寄存器。</description>
          <addressOffset>0xa00</addressOffset>
          <size>32</size>
          <resetValue>0x00000030</resetValue>
          <fields>
            <field>
              <name>pvd_int</name>
              <description>PVD中断状态。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pvd_lv</name>
              <description>PVD 电压阈值。
000： rising edge 2.18V, falling edge
2.08V (NO USE)；
001： rising edge 2.28V, falling edge
2.18V (NO USE)；
010： rising edge 2.38V, falling edge
2.28V；
011： rising edge 2.48V, falling edge
2.38V；
100： rising edge 2.58V, falling edge
2.48V；
101： rising edge 2.68V, falling edge
2.58V；
110： rising edge 2.78V, falling edge
2.68V；
111： rising edge 2.88V, falling edge
2.78V。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pvd_en</name>
              <description>PVD使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AON_USER_REG0</name>
          <displayName>AON_USER_REG0</displayName>
          <description>AON域用户寄存器0。</description>
          <addressOffset>0xf00</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>aon_user_reg0</name>
              <description>AON电源域通用寄存器0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AON_USER_REG1</name>
          <displayName>AON_USER_REG1</displayName>
          <description>AON域用户寄存器1。</description>
          <addressOffset>0xf04</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>aon_user_reg1</name>
              <description>AON电源域通用寄存器1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AON_USER_REG2</name>
          <displayName>AON_USER_REG2</displayName>
          <description>AON域用户寄存器2。</description>
          <addressOffset>0xf08</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>aon_user_reg2</name>
              <description>AON电源域通用寄存器2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AON_USER_REG3</name>
          <displayName>AON_USER_REG3</displayName>
          <description>AON域用户寄存器3。</description>
          <addressOffset>0xf0c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>aon_user_reg3</name>
              <description>AON电源域通用寄存器3。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>QDM</name>
      <description>QDM_APB_REG peripheral interface</description>
      <groupName>QDM</groupName>
      <baseAddress>0x14C00000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x6c</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>QDM_APB_REG</name>
        <value>27</value>
      </interrupt>
      <registers>
        <register>
          <name>QDMVER</name>
          <displayName>QDMVER</displayName>
          <description>QDM Version，QDM版本信息寄存器。</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x01210827</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_ver</name>
              <description>版本信息。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_step</name>
              <description>版本信息。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>release_substep</name>
              <description>版本信息。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>year</name>
              <description>年。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>month_day</name>
              <description>月日。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QEMUMODE</name>
          <displayName>QEMUMODE</displayName>
          <description>QDM Emulation Mode，仿真器模式配置寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>emu_mode</name>
              <description>QDM 仿真器接入模式。
00：内部计数器（QPOSCNT、QUTMR、QCTMR）当仿真器暂停CPU时，立即停止；
01：QPOSCNT达到最大值复位后，停止；QUTMR当前周期计数完成后，停止；QCTMR在下一个UTTRG后，停止；
10：内部计数器不受仿真器暂停CPU的影响；
11：与10一致。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QCTRL</name>
          <displayName>QCTRL</displayName>
          <description>QDM Control，QDM控制寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdu_mode</name>
              <description>QDM 解码模式。
00：正交输入解码模式。输入为正交编码器A，B，Z相信号；
01：脉冲方向输入解码模式。输入为脉冲，方向信号；
10：非标准TYPE1输入解码模式；
11：非标准TYPE2输入解码模式。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdu_xclk</name>
              <description>QDM 位置脉冲倍频。
01：1x倍频。A相上升沿；
01：2x倍频。A相双沿；
10：4x倍频。A相和B相双沿。仅当poscnt_mode为正交计数模式时才有效，其他模式时是2x倍频；
11：保留。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdm_ab_swap</name>
              <description>QDM A相B相输入信号交换。
0：不交换；
1：交换。
注意：该功能仅支持正交输入和脉冲方向输入解码模式。非标准TYPE1/2输入解码模式下，请勿开启该功能。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdma_polarity</name>
              <description>QDM A相输入极性选择。
0：直通；
1：取反。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdmb_polarity</name>
              <description>QDM B相输入极性选择。
0：直通；
1：取反。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdmi_polarity</name>
              <description>QDM Z相（Index）输入极性选择。
0：直通；
1：取反。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qtrg_lock_mode</name>
              <description>QDM 触发锁存模式选择。
0：当总线（CPU/DMA）读QPOSCNT时：锁存位置计数QPOSCNT到QPOSLOCK；
1：当周期触发单元PTU使能且周期触发信号有效时：锁存位置计数QPOSCNT到QPOSLOCK。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ptu_mode</name>
              <description>QDM PTU工作模式。
0：周期工作模式。产生周期trigger信号；
1：watchdog工作模式。监控输入信号，用于失速检测。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsu_en</name>
              <description>QDM TSU时间戳单元使能。
0：不使能。TSU停止计数；
1：使能。TSU开始计数。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppu_en</name>
              <description>QDM 位置处理单元PPU使能。
0：不使能 QDM PPU。PPU停止计数；
1：使能 QDM PPU。PPU开始计数。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ptu_en</name>
              <description>QDM周期触发单元PTU使能。
0：不使能QDM PTU。PTU停止计数；
1：使能QDM PTU。PTU开始计数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPPUCTRL</name>
          <displayName>QPPUCTRL</displayName>
          <description>QDM Position Process Unit Control，PPU控制寄存器。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_sw_init</name>
              <description>软件初始化位置计数器。
0：软件不初始化位置计数器；
1：软件初始化位置计数器，QPOSCNT=QPOSINIT。软件写1后不会自动清零。</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_mode</name>
              <description>位置计数器计数模式。
00：xCLK-xDIR计数模式。对解码后的xCLK，xDIR计数。xDIR为0时，表示逆时针旋转，计数器减计数。反之，增计数；
01：增计数模式。对QDMA增计数；
10：减计数模式。对QDMA减计数；
11：同00。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_rst_mode</name>
              <description>QDM 位置计数器复位选择。
00：硬件全自动校准（Z相标记点复位）；
01：溢出复位（上溢出后清零，下溢出后置位到qposmax）；
10：硬件单次校准（硬件校准一次后，溢出复位）；
11：单位时间触发（PTU触发）。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_idx_init_mode</name>
              <description>QDM Z相（Index）初始化位置计数器模式。
00：不使能；
01：硬件全自动初始化（Z相标记点初始化），将QPOSCNT初始化为QPOSINIT（优先级低于复位）；
10：Z相（Index）上升沿时，将QPOSCNT初始化为QPOSINIT；
11：Z相（Index）下降沿时，将QPOSCNT初始化为QPOSINIT。</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_idx_lock_mode</name>
              <description>QDM Z相（Index）锁存模式选择。（锁存PPU位置计数器QPOSCNT到QPOSILOCK中）。
00：同11；
01：在Z相（Index）上升沿处锁存；
10：在Z相（Index）下降沿处锁存；
11：在Z相标记点锁存。</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ppu_cmpshd_en</name>
              <description>QDM 位置比较缓存寄存器使能。
0：不使能缓存寄存器；
1：使能缓存寄存器。</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppu_cmpshd_ld</name>
              <description>QDM 位置比较缓存寄存器load模式。
0：当QPOSCNT等于0时，把位置比较缓存寄存器load进位置比较active寄存器；
1：当比较成功时，把位置比较缓存寄存器load进位置比较active寄存器。</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppu_poscmp_en</name>
              <description>QDM 位置比较功能使能。
0：不使能位置比较功能；
1：使能位置比较功能。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>syncout_en</name>
              <description>QDM 位置比较同步输出（syncout）使能。
0：不使能同步输出功能；
1：使能同步输出功能。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppu_syncout_pl</name>
              <description>QDM 位置比较同步输出（syncout）极性。
0：高有效脉冲输出；
1：低有效脉冲输出。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>ppu_syncout_pw</name>
              <description>QDM 位置比较同步输出（syncout）脉宽选择。
0x000：1 * 4个时钟周期；
0x001：2 * 4个时钟周期；
0x002：3 * 4个时钟周期；
0x003：4 * 4个时钟周期；
…
0xFFF：4096 * 4个时钟周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QTSUCTRL</name>
          <displayName>QTSUCTRL</displayName>
          <description>QDM Time Stamp Unit Control，TSU控制寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qtmr_lock_mode</name>
              <description>QDM TSU 锁存模式。
0：软件读QPOSCNT时，锁存QCTMR到QCTMRLOCK，锁存QCPRD到QCPRDLOCK；
1：单位时间触发信号有效时，锁存QCTMR到QCTMRLOCK，锁存QCPRD到QCPRDLOCK。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tsu_prescaler</name>
              <description>QDM TSU计时步长选择。
0x0：等于时钟周期；
0x1：2倍时钟周期；
0x2：4倍时钟周期；
0x3：8倍时钟周期；
0x4：16倍时钟周期；
0x5：32倍时钟周期；
0x6：64倍时钟周期；
0x7：128倍时钟周期；
0x8：256倍时钟周期；
其他：256倍时钟周期。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cevt_prescaler</name>
              <description>QDM 捕获事件CEVT分频选择。
0x0：捕获事件频率 = xCLK不分频；
0x1：捕获事件频率 = xCLK的2分频；
0x2：捕获事件频率 = xCLK的4分频；
0x3：捕获事件频率 = xCLK的8分频；
0x4：捕获事件频率 = xCLK的16分频；
0x5：捕获事件频率 = xCLK的32分频；
0x6：捕获事件频率 = xCLK的64分频；
0x7：捕获事件频率 = xCLK的128分频；
0x8：捕获事件频率 = xCLK的256分频；
0x9：捕获事件频率 = xCLK的512分频；
0xA：捕获事件频率 = xCLK的1024分频；
0xB：捕获事件频率 = xCLK的2048分频；
其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QINTENA</name>
          <displayName>QINTENA</displayName>
          <description>QDM Interrupt Enable，QDM中断使能寄存器。</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>utmr_prd_en</name>
              <description>QDM PTU周期中断使能。不使能时，即屏蔽相应的中断状态，不影响相应的原始中断。若全部不使能，模块不会上报中断给CPU。
0：不使能；
1：使能。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>indx_lck_en</name>
              <description>QDM Z相（Index）锁存功能中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpm_en</name>
              <description>QDM 位置比较匹配中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpr_en</name>
              <description>QDM 位置比较就绪中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_ovf_en</name>
              <description>QDM 位置计数器上溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_udf_en</name>
              <description>QDM 位置计数器下溢出中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qdir_chg_en</name>
              <description>QDM 正交方向变化中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sped_lst_en</name>
              <description>QDM 失速中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>qphs_err_en</name>
              <description>QDM 正交相位错误中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_err_en</name>
              <description>QDM 位置计数错误中断使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QINTSTS</name>
          <displayName>QINTSTS</displayName>
          <description>QDM Interrupt Status， QDM 中断状态寄存器。受中断使能控制。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>utmr_prd_int</name>
              <description>QDM PTU周期中断。
0：无中断；
1：有中断。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>indx_lck_int</name>
              <description>QDM Z相（Index）锁存功能中断。
0：无中断；
1：有中断。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_cpm_int</name>
              <description>QDM 位置比较匹配中断。
0：无中断；
1：有中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_cpr_int</name>
              <description>QDM 位置比较就绪中断。
0：无中断；
1：有中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_ovf_int</name>
              <description>QDM 位置计数器上溢出中断。
0：无中断；
1：有中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_udf_int</name>
              <description>QDM 位置计数器下溢出中断。
0：无中断；
1：有中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdir_chg_int</name>
              <description>QDM 正交方向变化中断。
0：无中断；
1：有中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sped_lst_int</name>
              <description>QDM 失速中断。
0：无中断；
1：有中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qphs_err_int</name>
              <description>QDM 正交相位错误中断。
0：无中断；
1：有中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pcnt_err_int</name>
              <description>QDM 位置计数错误中断。
0：无中断；
1：有中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QINTRAW</name>
          <displayName>QINTRAW</displayName>
          <description>QDM Raw Interrupt，QDM原始中断寄存器。不受中断使能控制。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>utmr_prd_raw</name>
              <description>QDM PTU周期原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>indx_lck_raw</name>
              <description>QDM Z相（Index）锁存功能原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpm_raw</name>
              <description>QDM 位置比较匹配原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpr_raw</name>
              <description>QDM 位置比较就绪原始中断，当QPOSCMP缓存寄存器载入active寄存器时此比特位高。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_ovf_raw</name>
              <description>QDM 位置计数器上溢出原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_udf_raw</name>
              <description>QDM 位置计数器下溢出原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>qdir_chg_raw</name>
              <description>QDM 正交方向变化原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>sped_lst_raw</name>
              <description>QDM 失速原始中断。当QCTRL[ptu_mode]为1时，才可能产生此中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>qphs_err_raw</name>
              <description>QDM 正交相位错误原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_err_raw</name>
              <description>QDM 位置计数错误原始中断。
0：无原始中断；
1：有原始中断。写1清除中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QINTINJ</name>
          <displayName>QINTINJ</displayName>
          <description>QDM Interrupt Injection，QDM中断注入寄存器。注入原始中断。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>utmr_prd_inj</name>
              <description>QDM PTU周期中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>indx_lck_inj</name>
              <description>QDM Z相（Index）锁存功能中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpm_inj</name>
              <description>QDM 位置比较匹配中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_cpr_inj</name>
              <description>QDM 位置比较就绪中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_ovf_inj</name>
              <description>QDM 位置计数器上溢出中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_udf_inj</name>
              <description>QDM 位置计数器下溢出中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>qdir_chg_inj</name>
              <description>QDM 正交方向变化中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>sped_lst_inj</name>
              <description>QDM 失速中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>qphs_err_inj</name>
              <description>QDM 正交相位错误中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_err_inj</name>
              <description>QDM 位置计数错误中断注入。
0：不注入；
1：注入。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QDMSTS</name>
          <displayName>QDMSTS</displayName>
          <description>QDM Status，QDM状态寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cevt_sts</name>
              <description>QDM 捕获事件的状态。
0：没有检测到捕获事件；
1：检测到捕获事件。写1清零。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>qdir_sts</name>
              <description>QDM 正交方向状态（实时值）。
0：逆时针；
1：顺时针。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sepd_lst_sts</name>
              <description>QDM PTU watchdog模式计数超出最大值，即失速状态。在QUTMR计数到QUPRD都没有XCLK，触发失速中断。
0：未发生；
1：已发生。写1清零。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>qctmr_ovf_sts</name>
              <description>QDM TSU时间计数超出最大值，发生溢出。
0：未发生；
1：已发送。写1清零。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>qcdr_err_sts</name>
              <description>QDM 捕获方向错误的状态。
0：未发生；
1：邻近CEVT之间旋转方向发生了变化。写1清零。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>fidx_dir_sts</name>
              <description>QDM 第一次经过Z相标记点时的方向。
0：逆时针；
1：顺时针。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>fidx_is_sts</name>
              <description>QDM 是否经过第一次Z相标记点。
0：未经过第一次Z相标记点；
1：已经过第一个Z相标记点。写1清零。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>pcnt_err_sts</name>
              <description>QDM 位置计数错误状态。当且仅当QPPUCTRL[pcnt_rst_mode]为硬件全自动校准模式且QPPUCTRL[pcnt_idx_lock_mode]为Z相标记点锁存时，计数错误检查功能有效。每次经过Z相标记点时都会更新QPOSILOCK的值，若该值不等于0且不等于QPOSMAX，则认为位置计数错误。
0：上一次经过Z相标记点时，位置计数没有错误；
1：上一次经过Z相标记点时，位置计数有错误。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSCNT</name>
          <displayName>QPOSCNT</displayName>
          <description>QDM PPU Position Counter Value，QDM PPU位置计数值寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposcnt</name>
              <description>QDM 位置计数值。可读可写，仿真器接入暂停生效后，不可写。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSINIT</name>
          <displayName>QPOSINIT</displayName>
          <description>QDM PPU Position Counter Initialization Value，QDM PPU位置初始化值寄存器。</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposinit</name>
              <description>QDM 位置初始化值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSMAX</name>
          <displayName>QPOSMAX</displayName>
          <description>QDM PPU Position Counter Maximum Value，QDM PPU位置计数最大值寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposmax</name>
              <description>QDM 位置计数最大值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSCMP</name>
          <displayName>QPOSCMP</displayName>
          <description>QDM PPU Position Counter (Buffer) Compare Value， QDM PPU 位置比较值缓存寄存器。</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposcmp</name>
              <description>QDM 位置比较值，缓存寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSILOCK</name>
          <displayName>QPOSILOCK</displayName>
          <description>QDM PPU QPOSCNT Index Locked Value，QDM Z相信号锁存值寄存器。</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposilock</name>
              <description>QDM 位置Z相信号（index）锁存值。
配置QPPUCTRL[pcnt_idx_lock_mode]，可改变Z相信号（index）锁存模式。软件可写该寄存器，优先级低于锁存。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSLOCK</name>
          <displayName>QPOSLOCK</displayName>
          <description>QDM PPU QPOSCNT Locked Value，位置单位时间触发/软件锁存
值寄存器。配置 QCTRL[qtrg_lock_mode]，可改变锁存模式。</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposlock</name>
              <description>QDM 位置单位时间触发/软件锁存值。
配置 QCTRL[qtrg_lock_mode]，可改变锁存模式。软件可写该寄存器，优先级低于锁存。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QUTMR</name>
          <displayName>QUTMR</displayName>
          <description>QDM PTU Counter Value，PTU的计数值寄存器。配置 ptu_mode 可改变PTU 工作模式。</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qutmr</name>
              <description>QDM 周期计数器（PTU)的计数值。
配置QCTRL[ptu_mode]可改变PTU工作模式。可读可写，仿真器接入暂停生效后，不可写。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QUPRD</name>
          <displayName>QUPRD</displayName>
          <description>QDM PTU Period Value，PTU的计数周期寄存器。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>quprd</name>
              <description>QDM 周期计数器（PTU)的计数终值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QCTMR</name>
          <displayName>QCTMR</displayName>
          <description>QDM TSU Counter Value，TSU时间计数值寄存器。</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qctmr</name>
              <description>QDM TSU时间计数值。可读可写，仿真器接入暂停生效后，不可写。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QCMAX</name>
          <displayName>QCMAX</displayName>
          <description>QDM TSU Counter Maximum Value，TSU时间计数最大值寄存器。</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qcmax</name>
              <description>QDM TSU时间计数最大值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QCPRD</name>
          <displayName>QCPRD</displayName>
          <description>QDM TSU-captured CEVT's Period，邻近的2个的捕获事件CEVT之前的时间计数值寄存器。</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qcprd</name>
              <description>QDM 邻近2个的捕获事件CEVT之前的时间计数值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QCTMRLOCK</name>
          <displayName>QCTMRLOCK</displayName>
          <description>QCTMR Locked Value，QCTMR锁存值寄存器。</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qctmrlock</name>
              <description>QDM QCTMR锁存值。
配置QTSUCTRL[qtmr_lock_mode]，可改变锁存模式。软件可写该寄存器，优先级低于锁存。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QCPRDLOCK</name>
          <displayName>QCPRDLOCK</displayName>
          <description>QCPRD Locked Value，QCPRD锁存值寄存器。</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qcprdlock</name>
              <description>QDM QCPRD锁存值。
配置QTSUCTRL[qtmr_lock_mode]，可改变锁存模式。软件可写该寄存器，优先级低于锁存。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QDMAFT</name>
          <displayName>QDMAFT</displayName>
          <description>QDM PHASE A Filter，A相信号滤波寄存器。</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdma_ft_level</name>
              <description>A相信号的滤波等级，滤波宽度 ft_level 个时钟周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QDMBFT</name>
          <displayName>QDMBFT</displayName>
          <description>QDM PHASE B Filter，B相信号滤波寄存器。</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdmb_ft_level</name>
              <description>B相信号的滤波等级，滤波宽度 ft_level 个时钟周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QDMIFT</name>
          <displayName>QDMIFT</displayName>
          <description>QDM PHASE Z (Index) Filter，Z相信号滤波寄存器。</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>qdmi_ft_level</name>
              <description>Z相(Index)信号的滤波等级，滤波宽度 ft_level 个时钟周期。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>QPOSCMPA</name>
          <displayName>QPOSCMPA</displayName>
          <description>QDM Position Counter Active Compare Value，位置比较值寄存器。</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>qposcmpa</name>
              <description>QDM 位置比较值，active寄存器。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI</name>
      <description>Serial peripheral interface</description>
      <groupName>SPI</groupName>
      <baseAddress>0x14200000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI0</name>
        <value>35</value>
      </interrupt>
      <registers>
        <register>
          <name>SPICR0</name>
          <displayName>CR0</displayName>
          <description>SPICR0 为控制寄存器 0。</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>scr</name>
              <description>串行时钟率，取值范围 0～255。scr 的值用来产生 SPI 发送和接收的比特率，公式为Fclk_spi/( cpsdvsr x (1+scr）)｡ cpsdvsr 是一个 2～254 之间的偶数，由寄存器 SPICPSR 配置。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sph</name>
              <description>SPICLKOUT 相位，具体含义请参见 21.4接口时序章节的 SPI 帧格式。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>spo</name>
              <description>SPICLKOUT 极性，具体含义请参见 21.4接口时序章节的 SPI 帧格式。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>frf</name>
              <description>帧格式选择。00：Motorola SPI 帧格式；01：TI 同步串行帧格式；10：National Microwire 帧格式；11：保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dss</name>
              <description>设置数据位宽。0x3：4bit；0x4：5bit；0x5：6bit；0x6：7bit；0x7：8bit；0x8：9bit；0x9：10bit；0xA：11bit；0xB：12bit；0xC：13bit；0xD：14bit；0xE：15bit；0xF：16bit；其他：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICR1</name>
          <displayName>SPICR1</displayName>
          <description>SPICR1 为控制寄存器 1。</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x7F00</resetValue>
          <fields>
            <field>
              <name>waitEn</name>
              <description>等待使能，当 SPICR1[sm]配置为 Master模式且 SPICR0[frf]配置为 National Microwire 帧格式时有效。0：不使能；1：使能。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>waitVal</name>
              <description>National Microwire 帧格式时，写和读之间的等待拍数。当 SPICR1[sm]配置为Master 模式且 waiten 为 1 并且帧格式为National Microwire 时有效。0x00：等待周期为 1 个工作时钟 clk_spi；0x01：等待周期为 2 个工作时钟 clk_spi；… 0x7F：等待周期为 128 个工作时钟clk_spi；其他：保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>mode_altasens</name>
              <description>配置 SPI 片选产生的方式。0：片选信号由芯片逻辑根据所选时序自动产生；1：当采用 Motorola SPI 帧格式时，片选CS 信号由 SPI 使能信号控制，使能后，片选拉低，否则片选拉高。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>bitend</name>
              <description>数据正反序控制位。0：数据顺序为 MSB 到 LSB；1：数据顺序为 LSB 到 MSB。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ms</name>
              <description>设置 Master 或者 Slave 模式，此位只能在SPI 被禁止时改变。0：Master 模式；1：Slave 模式。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>sse</name>
              <description>设置 SPI 使能。0：不使能；1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>lbm</name>
              <description>设置环回模式。0：正常的串行接口操作使能；1：发送串行移位寄存器的输出在内部连接到接收串行移位寄存器的输入上。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIDR</name>
          <displayName>SPIDR</displayName>
          <description>SPIDR 为数据寄存器。</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>data</name>
              <description>发送/接收 FIFO。读：接收 FIFO；写：发送 FIFO。如果数据比特数少于 16 则必须右对齐。发送逻辑将忽略高位未使用的比特位，接收逻辑则自动将数据右对齐。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPISR</name>
          <displayName>SPISR</displayName>
          <description>SPISR为状态寄存器。</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0003</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>5</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>bsy</name>
              <description>SPI 忙标记。0：空闲；1：忙。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rff</name>
              <description>接收 FIFO 是否已满。0：未满；1：已满。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rne</name>
              <description>接收 FIFO 是否未空。0：已空；1：未空。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tnf</name>
              <description>发送 FIFO 是否未满。0：已满；1：未满。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>tfe</name>
              <description>发送 FIFO 是否已空。0：未空；1：已空。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICPSR</name>
          <displayName>SPICPSR</displayName>
          <description>SPICPSR 为时钟分频寄存器。</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CPSDVSR</name>
              <description>时钟分频因子。此值必须是 2～254 之间的偶数，取决于输入时钟 SPI_CLK 的频率。最低位读作“0”。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIIMSC</name>
          <displayName>SPIIMSC</displayName>
          <description>SPIIMSC为中断屏蔽寄存器</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txim</name>
              <description>发送 FIFO 中断屏蔽。0：发送 FIFO 中断被屏蔽；1：发送 FIFO 中断未被屏蔽。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxim</name>
              <description>接收 FIFO 中断屏蔽。0：接收 FIFO 中断被屏蔽；1：接收 FIFO 中断未被屏蔽。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rtim</name>
              <description>接收超时中断。0：接收超时中断屏蔽；1：接收超时中断不屏蔽。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rorim</name>
              <description>接收溢出中断屏蔽。0：接收 FIFO 溢出中断屏蔽；1：接收 FIFO 溢出中断不屏蔽。值为“1”时使能硬件流控功能，即接收FIFO 满后 SPI 停止发送数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIRIS</name>
          <displayName>SPIRIS</displayName>
          <description>SPIRIS 为原始中断状态寄存器。值“0”表示无中断，值“1”表示有中断。</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x0008</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txris</name>
              <description>发送 FIFO 中断的原始中断状态。0：大于 SPITXFIFOCR[txintsize]位域中配置的中断水线；1：等于或小于 SPITXFIFOCR[txintsize]位域中配置的中断水线。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxris</name>
              <description>接收 FIFO 中断的原始中断状态。0：小于 SPIRXFIFOCR[rxintsize]位域中配置的中断水线。1：等于或大于 SPIRXFIFOCR[rxintsize]位域中配置的中断水线。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rtris</name>
              <description>接收超时中断的原始中断状态。当接收FIFO 非空且没有被读取，超过 64 个 SPI工作时钟周期时，此位域置 1。对SPIICR[rtic]位域写 1，可清除此位域。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rorris</name>
              <description>接收溢出中断的原始中断状态。当接收FIFO 已满且额外的数据被接收时，发生溢出中断，此位域置 1。对 SPIICR[roric]位域写 1，可清除此位域。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIMIS</name>
          <displayName>SPIMIS</displayName>
          <description>SPIMIS 为屏蔽后中断状态寄存器。值“0”表示无中断，值“1”表示有中断。</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txmis</name>
              <description>发送 FIFO 中断屏蔽后的状态。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxmis</name>
              <description>接收 FIFO 中断屏蔽后的状态。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rtmis</name>
              <description>接收超时中断屏蔽后的状态。 </description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rormis</name>
              <description>接收溢出中断屏蔽后的状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIICR</name>
          <displayName>SPIICR</displayName>
          <description>SPIICR 为中断清除寄存器。写“1”清除中断，写“0”无影响。</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rtic</name>
              <description>清除接收超时中断。 </description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>roric</name>
              <description>清除接收溢出中断。 </description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIDMACR</name>
          <displayName>SPIDMACR</displayName>
          <description>SPIDMACR 为 DMA 控制寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXDMAE</name>
              <description>DMA 发送 FIFO 使能寄存器。0：禁止；1：使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>RXDMAE</name>
              <description>DMA 接收 FIFO 使能寄存器。0：禁止；1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPITXFIFOCR</name>
          <displayName>SPITXFIFOCR</displayName>
          <description>SPITXFIFOCR 为发送 FIFO 控制寄存器。</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>00000009</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>6</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXINTSize</name>
              <description>配置发送 FIFO 请求中断的水线。即，发送 FIFO 中数据数目小于或等于 txintsize所配置的字数时，txris 有效。000：1；001：4；010：8；011：16；100：32；101：64；110：128；111：128。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DMATXBRSize</name>
              <description>配置发送 FIFO 请求 DMA 进行 burst 传输的水线。即，发送 FIFO 中数据数目小于或等于（256 - dmatxbrsize）所配置的字数时，DMATXBREQ 有效，此处字长是16 位。000：1；001：4；010：8；011：16；100：32；101：64；110：64；111：64。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIRXFIFOCR</name>
          <displayName>SPIRXFIFOCR</displayName>
          <description>SPIRXFIFOCR 为接收 FIFO 控制寄存器。</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>00000009</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>6</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXINTSize</name>
              <description>配置接收 FIFO 请求中断的水线。即，接收 FIFO 中数据数目大于或等于（256 -rxintsize）所配置的字数时，rxris 有效，此处字长是 16 位。000：1；001：4；010：8；011：16；100：32；101：64；110：128；111：192。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>DMARXBRSize</name>
              <description>配置接收 FIFO 请求 DMA 进行 burst 传输的水线。即，接收 FIFO 中数据数目大于或等于 dmarxbrsize 所配置的字数时，DMARXBREQ 有效。000：1；001：4；010：8；011：16；100：32；101：64；110：96；111：128。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICSNSEL</name>
          <displayName>SPICSNSEL</displayName>
          <description>SPICSNSEL 为 SPI 片选选择寄存器。</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>spi_csn_sel</name>
              <description>SPI 片选选择。0：片选 0；1：片选 1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSCTRL0</name>
      <description>SYSCTRL0_REG peripheral interface</description>
      <groupName>SYSCTRL0</groupName>
      <baseAddress>0x10100000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x8000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SYSCTRL0_REG</name>
        <value>26</value>
      </interrupt>
      <registers>
        <register>
          <name>SC_SYS_RES</name>
          <displayName>SC_SYS_RES</displayName>
          <description>系统软复位寄存器。
Note：该寄存器可被寄存器SC_LOCKEN.sc_cfg_lock写保护，只有禁用写保护时，对这个寄存器的写操作才有效。</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>softresreq</name>
              <description>对此寄存器位域的任意写操作都会导致系统软复位。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_RST_CNT0</name>
          <displayName>SC_RST_CNT0</displayName>
          <description>复位次数统计寄存器0。</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ext_rst_cnt</name>
              <description>RESETN管脚复位次数统计。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_rst_cnt</name>
              <description>软复位次数统计。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_RST_CNT1</name>
          <displayName>SC_RST_CNT1</displayName>
          <description>复位次数统计寄存器1。</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>iwdg_rst_cnt</name>
              <description>iwdg复位次数统计。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdg_rst_cnt</name>
              <description>wdg复位次数统计。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_SYS_STAT</name>
          <displayName>SC_SYS_STAT</displayName>
          <description>系统启动模式寄存器。</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>update_mode</name>
              <description>系统升级标识，芯片上电时锁存。
0：不升级，直接启动模式；
1：升级模式。
注：当处于升级模式时，芯片JTAG相关管脚强制为JTAG功能，无法软件切换为其他复用功能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>update_mode_clear</name>
              <description>系统升级标识清除寄存器，芯片上电完成后生效。
0：不清除；
1：清除。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_SOFT_INT</name>
          <displayName>SC_SOFT_INT</displayName>
          <description>软中断寄存器。</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>software_int</name>
              <description>软件中断寄存器。
向此寄存器位域写入1产生软件中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_SOFT_EVT_ID</name>
          <displayName>SC_SOFT_EVT_ID</displayName>
          <description>软中断事件ID寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>swint_evt_id</name>
              <description>软中断事件ID，可用于软中断事件类型定义。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_LOCKEN</name>
          <displayName>SC_LOCKEN</displayName>
          <description>关键寄存器的锁定寄存器。
Note：仅当使写操作数为0xEA51_xxxx（xxxx为目标期望值），才能对[15:0]位域进行写操作。</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sc_cfg_lock</name>
              <description>SYSCTRL相关寄存器写保护。
0：写使能；
1：写禁止。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>crg_cfg_lock</name>
              <description>CRG相关寄存器写保护。
0：写使能；
1：写禁止。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SC_HRST_REG0</name>
          <displayName>SC_HRST_REG0</displayName>
          <description>SC专用硬复位寄存器0。
（CH）该寄存器不会被系统软件复位所复位。</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>sc_hrst_reg0</name>
              <description>系统正常启动时，如果检测到此寄存器值为0xA5A5A5A5，则CPU将停止启动系统，此时可以通过JTAG/SWD接口调试（或烧写）系统。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_POR_REG0</name>
          <displayName>USER_POR_REG0</displayName>
          <description>USER专用POR复位寄存器0。
（CH）该寄存器仅被POR复位或从低功耗模式唤醒时复位。</description>
          <addressOffset>0xe00</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_por_reg0</name>
              <description>USER专用REG0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_POR_REG1</name>
          <displayName>USER_POR_REG1</displayName>
          <description>USER专用POR复位寄存器1。
（CH）该寄存器仅被POR复位或从低功耗模式唤醒时复位。</description>
          <addressOffset>0xe04</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_por_reg1</name>
              <description>USER专用REG1。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_HRST_REG0</name>
          <displayName>USER_HRST_REG0</displayName>
          <description>USER专用硬复位寄存器0。
（CH）该寄存器不会被系统软复位所复位。</description>
          <addressOffset>0xe40</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_hrst_reg0</name>
              <description>USER专用REG2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_HRST_REG1</name>
          <displayName>USER_HRST_REG1</displayName>
          <description>USER专用硬复位寄存器1。
（CH）该寄存器不会被系统软复位所复位。</description>
          <addressOffset>0xe44</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_hrst_reg1</name>
              <description>USER专用REG3。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_REG0</name>
          <displayName>USER_REG0</displayName>
          <description>USER专用寄存器0。</description>
          <addressOffset>0xe80</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_reg0</name>
              <description>USER专用REG4。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_REG1</name>
          <displayName>USER_REG1</displayName>
          <description>USER专用寄存器1。</description>
          <addressOffset>0xe84</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>user_reg1</name>
              <description>USER专用REG5。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSCTRL1</name>
      <description>SYSCTRL1_REG peripheral interface</description>
      <groupName>SYSCTRL1</groupName>
      <baseAddress>0x10100000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0xfffc</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SYSCTRL1_REG</name>
        <value>20</value>
      </interrupt>
      <registers>
        <register>
          <name>APT_RUN</name>
          <displayName>APT_RUN</displayName>
          <description>APT使能控制寄存器。</description>
          <addressOffset>0x8000</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt8_run</name>
              <description>APT8使能。
1：使能；
0：不使能。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt7_run</name>
              <description>APT7使能。
1：使能；
0：不使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt6_run</name>
              <description>APT6使能。
1：使能；
0：不使能。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt5_run</name>
              <description>APT5使能。
1：使能；
0：不使能。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt4_run</name>
              <description>APT4使能。
1：使能；
0：不使能。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt3_run</name>
              <description>APT3使能。
1：使能；
0：不使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt2_run</name>
              <description>APT2使能。
1：使能；
0：不使能。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt1_run</name>
              <description>APT1使能。
1：使能；
0：不使能。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt0_run</name>
              <description>APT0使能。
1：使能；
0：不使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APT_POE_FILTER</name>
          <displayName>APT_POE_FILTER</displayName>
          <description>APT POE滤波控制寄存器。</description>
          <addressOffset>0x8010</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>poe2_filter_en</name>
              <description>POE2 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>poe1_filter_en</name>
              <description>POE1 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>poe0_filter_en</name>
              <description>POE0 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>poe2_filter_level</name>
              <description>POE2 FILTER周期数（clk_hs）。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>poe1_filter_level</name>
              <description>POE1 FILTER周期数（clk_hs）。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>poe0_filter_level</name>
              <description>POE0 FILTER周期数（clk_hs）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APT_EVTIO_FILTER</name>
          <displayName>APT_EVTIO_FILTER</displayName>
          <description>APT EVTIO滤波控制寄存器。</description>
          <addressOffset>0x8014</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt_evtio5_filter_en</name>
              <description>APT EVTIO5 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtio4_filter_en</name>
              <description>APT EVTIO4 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt_evtio5_filter_level</name>
              <description>APT EVTIO5 FILTER周期数（clk_hs）。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtio4_filter_level</name>
              <description>APT EVTIO4 FILTER周期数（clk_hs）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APT_EVTMP_FILTER</name>
          <displayName>APT_EVTMP_FILTER</displayName>
          <description>APT EVTMP滤波控制寄存器。</description>
          <addressOffset>0x8018</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>apt_evtmp6_filter_en</name>
              <description>APT EVTMP6 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtmp5_filter_en</name>
              <description>APT EVTMP5 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtmp4_filter_en</name>
              <description>APT EVTMP4 FILTER使能。
0：不使能；
1：使能。</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtmp6_filter_level</name>
              <description>APT EVTMP6 FILTER周期数（clk_hs）。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtmp5_filter_level</name>
              <description>APT EVTMP5 FILTER周期数（clk_hs）。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>apt_evtmp4_filter_level</name>
              <description>APT EVTMP4 FILTER周期数（clk_hs）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_REQ_SEL</name>
          <displayName>DMA_REQ_SEL</displayName>
          <description>DMA请求线源选择寄存器。</description>
          <addressOffset>0x8200</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_req15_sel</name>
              <description>DMA请求线15源选择。
0：TIMER1；
1：APT7。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req14_sel</name>
              <description>DMA请求线14源选择。
0：TIMER0；
1：APT6。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req13_sel</name>
              <description>DMA请求线13源选择。
0：ADC2；
1：APT5。</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req12_sel</name>
              <description>DMA请求线12源选择。
0：ADC1；
1：APT4。</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req11_sel</name>
              <description>DMA请求线11源选择。
0：ADC0；
1：APT3。</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req10_sel</name>
              <description>DMA请求线10源选择。
0：CAPM2；
1：APT2。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req9_sel</name>
              <description>DMA请求线9源选择。
0：CAPM1；
1：APT1。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req8_sel</name>
              <description>DMA请求线8源选择。
0：CAPM0；
1：APT0。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req7_sel</name>
              <description>DMA请求线7源选择。
0：UART2_TX；
1：SPI_TX；</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req6_sel</name>
              <description>DMA请求线6源选择。
0：UART2_RX；
1：SPI_RX。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req5_sel</name>
              <description>DMA请求线5源选择。
0：UART1_TX；
1：APT8。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dma_req1_sel</name>
              <description>DMA请求线1源选择。
0：I2C_TX；
1：TIMER3。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dma_req0_sel</name>
              <description>DMA请求线0源选择。
0：I2C_RX；
1：TIMER2。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSRAM_ERR</name>
          <displayName>SYSRAM_ERR</displayName>
          <description>SYSRAM奇偶校验状态寄存器。</description>
          <addressOffset>0x8300</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sysram_parity_err</name>
              <description>SYSRAM奇偶校验错误状态。
0：无错误；
1：有错误。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sysram_parity_err_clr</name>
              <description>SYSRAM奇偶校验错误状态清除。
向该位域执行写动作，会清除SYSRAM奇偶校验错误状态。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_STATUS</name>
          <displayName>CPU_STATUS</displayName>
          <description>CPU状态寄存器。</description>
          <addressOffset>0x9000</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>cpu_pc_valid</name>
              <description>CPU PC值有效状态。
0：PC值无效；
1：PC值有效。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cpu_sleep_mode</name>
              <description>CPU SLEEP状态。
0：非sleep状态；
1：sleep状态。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cpu_debug_mode</name>
              <description>CPU DEBUG状态。
0：非debug状态；
1：debug状态。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cpu_hard_fault_mode</name>
              <description>CPU HARD FAULT状态。
0：非hard_fault状态；
1：hard_fault状态。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>cpu_lockup_mode</name>
              <description>CPU LOCKUP状态。
0：非lockup状态；
1：lockup状态。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSENSOR_EN</name>
          <displayName>TSENSOR_EN</displayName>
          <description>Tsensor使能控制寄存器。</description>
          <addressOffset>0xa000</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>tsensor_en</name>
              <description>Tsensor使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC0_VREF_CTRL</name>
          <displayName>ADC0_VREF_CTRL</displayName>
          <description>ADC0 VREF控制寄存器。</description>
          <addressOffset>0xb008</addressOffset>
          <size>32</size>
          <resetValue>0x10100000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_s0</name>
              <description>ADC0 VREF电压选择。
0：ADC0 VREF = 2.0V；
1：ADC0 VREF = 2.5V。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_en0</name>
              <description>ADC0 VREF使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC1_VREF_CTRL</name>
          <displayName>ADC1_VREF_CTRL</displayName>
          <description>ADC1 VREF控制寄存器。</description>
          <addressOffset>0xb00c</addressOffset>
          <size>32</size>
          <resetValue>0x10100000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_s1</name>
              <description>ADC1 VREF电压选择。
0：ADC1 VREF = 2.0V；
1：ADC1 VREF = 2.5V。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_en1</name>
              <description>ADC1 VREF使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC2_VREF_CTRL</name>
          <displayName>ADC2_VREF_CTRL</displayName>
          <description>ADC2 VREF控制寄存器。</description>
          <addressOffset>0xb010</addressOffset>
          <size>32</size>
          <resetValue>0x10100000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>None</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_s2</name>
              <description>ADC2 VREF电压选择。
0：ADC2 VREF = 2.0V；
1：ADC2 VREF = 2.5V。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adcvref_refbuf_en2</name>
              <description>ADC2 VREF使能。
0：不使能；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_OB_SEL</name>
          <displayName>ADC_OB_SEL</displayName>
          <description>ADC串行观测选择寄存器。</description>
          <addressOffset>0xfff8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_ob_sel</name>
              <description>ADC串行输出观测选择。
0：ADC0；
1：ADC1；
2：ADC2；
3：保留。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIMER0</name>
      <description>TIMER peripheral interface</description>
      <groupName>TIMER</groupName>
      <baseAddress>0x14300000</baseAddress>
      <addressBlock>
        <offset>0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TIMER</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>TIMERx_LOAD</name>
          <displayName>TIMERx_LOAD</displayName>
          <description>计数初值寄存器</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>timer_load</name>
              <description>Timer的计数初值</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_VALUE</name>
          <displayName>TIMERx_VALUE</displayName>
          <description>当前计数值寄存器</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>timer_value</name>
              <description>正在递减的Timer的当前值</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_CONTROL</name>
          <displayName>TIMERx_CONTROL</displayName>
          <description>Timer控制寄存器</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timeren</name>
              <description>定时器使能。
0：Timer禁止；
1：Timer使能。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>timermode</name>
              <description>定时器的计数模式。
0：自由运行模式；
1：周期模式。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>intenable</name>
              <description>TIMERx_RIS中断屏蔽。
0：屏蔽该中断；
1：不屏蔽该中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timerpre</name>
              <description>该字段用于设置timer的预分频因子。
00：不经过预分频，时钟频率除以1；
01：4级预分频，将timer时钟频率除以16；
10：8级预分频，将timer时钟频率除以256；
11：未定义，若设为该值，相当于8级预分频，将timer时钟频率除以256；</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>timersize</name>
              <description>选择16bit/32bit计数器操作模式。
0：16bit计数器；
1：32bit计数器。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>oneshot</name>
              <description>选择计数模式为单次计数模式还是周期计数模式。
0：周期计数模式或自由运行模式；
1：单次计数模式。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_INTCLR</name>
          <displayName>TIMERx_INTCLR</displayName>
          <description>中断清除寄存器</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>timer_intclr</name>
              <description>写该寄存器，清除timer的中断输出。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_RIS</name>
          <displayName>TIMERx_RIS</displayName>
          <description>原始中断寄存器</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。写入无效，读时返回0。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timerris</name>
              <description>timer的原始中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_MIS</name>
          <displayName>TIMERx_MIS</displayName>
          <description>屏蔽后中断寄存器</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>timermis</name>
              <description>屏蔽后的timer的中断状态。
0：中断无效；
1：中断有效。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_BGLOAD</name>
          <displayName>TIMERx_BGLOAD</displayName>
          <description>周期模式计数初值寄存器</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>timerbgload</name>
              <description>timer的计数初值。
注意：与 TIMERx_LOAD 寄存器有区别，具体请参见 TIMERx_LOAD 寄存器的描
述。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMERx_CONTROLB</name>
          <displayName>TIMERx_CONTROLB</displayName>
          <description>TIMER 的 DMA/ADC 控制寄存器。</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>dmaov</name>
              <description>DMA请求溢出标志。
读出0：无DMA请求溢出；
读出1：产生DMA请求溢出；
写入0：无影响；
写入1：清除溢出标志。</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>29</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>dmasreqen</name>
              <description>DMA Single请求和触发ADC采样的使能位。
0：禁止产生DMA Single 请求，并禁止产生触发ADC采样的信号（SOC信号）；
1：可以产生DMA Single请求，并可以产生触发ADC采样的信号（SOC信号）。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dmabreqen</name>
              <description>DMA Burst 请求使能位。
0：禁止产生DMA Burst 请求；
1：可以产生DMA Burst 请求。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TIMER0">
      <name>TIMER1</name>
      <baseAddress>0x14300020</baseAddress>
    </peripheral>
    <peripheral derivedFrom="TIMER0">
      <name>TIMER2</name>
      <baseAddress>0x14301000</baseAddress>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART</description>
      <groupName>UART</groupName>
      <baseAddress>0x14000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>UART</name>
        <value>71</value>
      </interrupt>
      <registers>
        <register>
          <name>UART_DR</name>
          <displayName>UART_DR</displayName>
          <description>UART_DR 为 UART 数据寄存器，存放接收数据和发送数据，同时可以从该寄存器中
读出接收状态。对于要发送的数据，占据 8bit 寄存器空间；对于接收到的数据，占据12bit 寄存器空间。</description>
          <addressOffset>0x0</addressOffset>
          <size>0x10</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oe</name>
              <description>溢出错误。
0：无溢出错误；
1：有溢出错误，即接收 FIFO 满后接收到了数据。
</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>be</name>
              <description>break错误。
0：无break错误；
1：有break错误，即接收数据的输入保持低的时间比一个全字传输（包括 start、data、parity、stop bit）还要长。
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pe</name>
              <description>校验错误。
0：无校验错误；
1：有校验错误。
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>fe</name>
              <description>帧错误。
0：无帧错误；
1：有帧错误（错误的停止位）。
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>data</name>
              <description>接收数据和发送数据。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RSR</name>
          <displayName>DUART_RSR</displayName>
          <description>接收状态寄存器/错误清除寄存器。</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oe</name>
              <description>溢出错误。
0：无溢出错误；
1：溢出错误。
当 FIFO 满时，FIFO 中的内容保持有效，因为不会有下一个数据写到 FIFO 中，只是移位寄存器会溢出。CPU 必须立刻读数据以腾空 FIFO。
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>be</name>
              <description>Break 错误。
0：无 break 错误；
1：break 错误。
Break 的条件：接收数据的输入保持低的时间比一个全字传输（定义了 start、data、parity、stop bit）还要长。
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pe</name>
              <description>校验错误。
0：无校验错误；
1：接收数据的校验错误。
FIFO 模式下，该错误与 FIFO 顶部的数据相关联。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>fe</name>
              <description>帧错误。
0：无帧错误；
1：接收到的数据的停止位错误（有效的停
止位为 1）。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FR</name>
          <displayName>UART_FR</displayName>
          <description>UART 标志寄存器。</description>
          <addressOffset>0x018</addressOffset>
          <size>0x20</size>
          <resetValue>0x0197</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txfe</name>
              <description>该位的含义由 UART_LCR_H[fen]的状态决定。
如果 UART_LCR_H[fen]为 0，则当发送保持寄存器空时该位置 1；
如果 UART_LCR_H[fen]为 1，则当发送 FIFO 为空时该位置 1。
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxff</name>
              <description>该位的含义由 UART_LCR_H[fen]的状态决定。
如果 UART_LCR_H[fen]为 0，则当接收保持寄存器满时该位置 1；
如果 UART_LCR_H[fen]为 1，则当接收 FIFO 为满时该位置 1。
</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txff</name>
              <description>该位的含义由 UART_LCR_H[fen]的状态决定。
如果 UART_LCR_H[fen]为 0，则当发送保持寄存器满时该位置 1；
如果 UART_LCR_H[fen]为 1，当发送FIFO 为满时该位置 1。
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxfe</name>
              <description>该位的含义由 UART_LCR_H[fen]的状态决定。
如果 UART_LCR_H[fen]为 0，则当接收保持寄存器空时该 bit 置 1；
如果 UART_LCR_H[fen]为 1，则当接收 FIFO 为空时该位就置 1。
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>busy</name>
              <description>UART 忙闲状态位。
0：UART 空闲或者完成发送数据；
1：UART 正忙于发送数据。
该位一旦置位，该状态一直保持到整个字节（包括所有的停止位）完全从移位寄存器中发送出去。
一旦发送 FIFO 非空该位就置位，不管UART 使能与否。
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>cts</name>
              <description>CTS 状态位。只对支持硬件流控的 UART有效，为输入 CTS 管脚的状态取反。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IBRD</name>
          <displayName>UART_IBRD</displayName>
          <description>整数波特率寄存器。</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>baud divint</name>
              <description>整数波特率分频值。复位时全部清 0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FBRD</name>
          <displayName>UART_FBRD</displayName>
          <description>小数波特率寄存器。</description>
          <addressOffset>0x028</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>baud divfrac</name>
              <description>小数波特率分频值。复位时全部清 0。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR_H</name>
          <displayName>UART_LCR_H</displayName>
          <description>线控寄存器，UART_LCR_H、UART_IBRD和UART_FBRD组成一个30bit宽的寄存器UART_LCR。UART_LCR只有在对UART_LCR_H写入后才会刷新。因此，如果更新UART_IBRD和UART_FBRD的内容，必须同时更新UART_LCR_H。</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>sps</name>
              <description>stick parity 选择。
当本寄存器的 bit[1]、 bit[2]、 bit[7]被置位时，校验位就会作为 0 发送和检测；
当本寄存器的 bit[1]、 bit[7]被置位，bit[2]为 0 时，校验位就会作为 1 发送和检测；
当本寄存器的 bit[7]为 0 时， stick parity 禁止。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wlen</name>
              <description>指示发送和接收一个帧内数据比特的数目。
00：5bit；
01：6bit；
10：7bit；
11：8bit。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>fen</name>
              <description>发送和接收 FIFO 使能控制。
0：不使能发送和接收 FIFO；
1：使能发送和接收 FIFO。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>stp2</name>
              <description>发送帧尾停止位比特选择。
0：发送的帧尾接 1bit 停止位；
1：发送的帧尾接 2bit 停止位。
接收逻辑在接收时不检查 2bit 的停止位。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>eps</name>
              <description>发送和接收过程中的奇偶校验选择。
0：在发送和接收过程中生成奇校验或检查奇校验；
1：在发送和接收过程中生成偶校验或检查偶校验。
当 UART_LCR_H[pen]为 0 时，该位不起作用。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>pen</name>
              <description>校验选择位。
0：不作校验；
1：发送方向产生校验，接收方向作校验检查。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>brk</name>
              <description>发送 break。
0：无效；
1：在完成当前数据的发送后，TXD 连续输出低电平。
注意：
要正确的执行 break 命令，软件将该位置1 的时间必须超过 2 个完整帧；在正常使用中，该位必须清 0。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CR</name>
          <displayName>UART_CR</displayName>
          <description> UART 控制寄存器。</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x0300</resetValue>
          <fields>
            <field>
              <name>ctsen</name>
              <description>CTS 硬件流控使能。
0：不使能 CTS 硬件流控；
1：使能 CTS 硬件流控，只有当nUARTCTS 信号有效时才发送数据。</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rtsen</name>
              <description>RTS 硬件流控使能。
0：不使能 RTS 硬件流控；
1：使能 RTS 硬件流控，只有当接收 FIFO有空间时才请求接收数据。</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rts</name>
              <description>请求发送。
该 bit 为 UART modem 状态输出信号nUARTRTS 的取反。
0：输出信号不变；
1：即该 bit 配置为 1，则输出信号为 0。
</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxe</name>
              <description>UART 接收使能。
0：禁止；
1：使能。
在接收的过程中如果 UART 被禁止，则当前数据的接收就会在正常停止之前结束。</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txe</name>
              <description>UART 发送使能。
0：禁止；
1：使能。
在发送的过程中如果 UART 被禁止，则当前数据的发送就会在正常停止之前结束。
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>lbe</name>
              <description>环回使能。
0：禁止；
1：UARTTXD 输出内部环回到UARTRXD。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>uarten</name>
              <description>UART 使能。
0：禁止；
1：使能。
如果在发送和接收过程中将 UART 禁止，则会在正常停止之前结束当前数据的传送。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IFLS</name>
          <displayName>UART_IFLS</displayName>
          <description>中断 FIFO 阈值选择寄存器。</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x0012</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>6</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxiflsel</name>
              <description>接收中断 FIFO 的阈值选择，接收中断的触发点如下。
000：接收 FIFO≥1/8full；
001：接收 FIFO≥1/4full；
010：接收 FIFO≥1/2full；
011：接收 FIFO≥3/4full；
100：接收 FIFO≥7/8full；
101：接收 FIFO≥1/16full；
110：接收 FIFO≥1/32full；
111：保留。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txiflsel</name>
              <description>发送中断 FIFO 的阈值选择，发送中断的触发点如下。
000：发送 FIFO≤1/8full；
001：发送 FIFO≤1/4full；
010：发送 FIFO≤1/2full；
011：发送 FIFO≤3/4full；
100：发送 FIFO≤7/8full；
101：发送 FIFO≤15/16full；
110：发送 FIFO≤31/32full；
111：保留。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IMSC</name>
          <displayName>UART_IMSC</displayName>
          <description>中断屏蔽寄存器。</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oeim</name>
              <description>溢出错误中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>beim</name>
              <description>break 错误中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>peim</name>
              <description>校验中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>feim</name>
              <description>帧错误中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rtim</name>
              <description>接收超时中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。
</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txim</name>
              <description>发送中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxim</name>
              <description>接收中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>保留。</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ctsmim</name>
              <description>CTS 中断的屏蔽状态。
0：屏蔽该中断；
1：不屏蔽该中断。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RIS</name>
          <displayName>UART_RIS</displayName>
          <description>原始中断状态寄存器，其内容不受中断屏蔽寄存器的影响。</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oeris</name>
              <description>原始的溢出错误中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>beris</name>
              <description>原始的 break 错误中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>peris</name>
              <description>原始的校验中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>feris</name>
              <description>原始的帧错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rtris</name>
              <description>原始的接收超时中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txris</name>
              <description>原始的发送中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxris</name>
              <description>原始的接收中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ctsmis</name>
              <description>原始的 CTS 中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MIS</name>
          <displayName>UART_MIS</displayName>
          <description>屏蔽后中断状态寄存器，其内容为原始中断状态和中断屏蔽进行“与”操作后的结果。</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oemis</name>
              <description>屏蔽后的溢出错误中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>bemis</name>
              <description>屏蔽后的 break 错误中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>pemis</name>
              <description>屏蔽后的校验中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>femis</name>
              <description>屏蔽后的帧错误中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rtmis</name>
              <description>屏蔽后的接收超时中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>txmis</name>
              <description>屏蔽后的发送中断状态。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxmis</name>
              <description>屏蔽后的接收中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ctsmmis</name>
              <description>屏蔽后的 CTS 中断状态。
0：未产生中断；
1：已产生中断。</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <displayName>UART_ICR</displayName>
          <description>中断清除寄存器，写 1 时相应的中断被清除，写 0 则不起作用。对于溢出错误中断，除了对此寄存器 bit[10]写 1 以清除原始溢出错误中断外，还需要写UART_RSR[oe]以清除溢出错误状态。</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>oeic</name>
              <description>清除溢出错误中断。
0：无效；
1：清除中断。</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>beic</name>
              <description>清除 break 错误中断。
0：无效；
1：清除中断。
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>peic</name>
              <description>清除校验中断。
0：无效；
1：清除中断。
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>feic</name>
              <description>清除帧错误中断。
0：无效；
1：清除中断。</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rtic</name>
              <description>清除接收超时中断。
0：无效；
1：清除中断。</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txic</name>
              <description>清除发送中断。
0：无效；
1：清除中断。</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxic</name>
              <description>清除接收中断。0：无效；1：清除中断。</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ctsmic</name>
              <description>清除 CTS 中断。
0：无效；
1：清除中断。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DMACR</name>
          <displayName>UART_DMACR</displayName>
          <description>DMA 控制寄存器，用于配置发送 FIFO 和接收 FIFO 的 DMA 使能。</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>rxlastsreq_en</name>
              <description>UART RX DMA 支持最后一笔数据的 REQ使能。使能打开后，传输最后一笔数据时会发出 LASTREQ 给 DMA 控制器。可以自动对 DMA 进行硬件流控。
0：禁止；
1：使能。</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>dmaonerr</name>
              <description>UART 错误中断出现时的接收通道 DMA 使能控制。
0：当 UART 错误中断有效时，接收通道 DMA 的请求输出有效；
1：当 UART 错误中断有效时，接收通道 DMA 的请求输出无效。
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>txdmae</name>
              <description>发送 FIFO 的 DMA 使能控制。
0：禁止；
1：使能。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>rxdmae</name>
              <description>接收 FIFO 的 DMA 使能控制。
0：禁止；
1：使能。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="UART0">
      <name>UART1</name>
      <baseAddress>0x14001000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="UART0">
      <name>UART2</name>
      <baseAddress>0x14002000</baseAddress>
    </peripheral>
    <peripheral>
      <name>WDG</name>
      <description>WDG</description>
      <groupName>WDG</groupName>
      <baseAddress>0x14400000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WDG</name>
        <value>71</value>
      </interrupt>
      <registers>
        <register>
          <name>WDG_LOAD</name>
          <displayName>WDG_LOAD</displayName>
          <description>计数初值寄存器。用来配置 WatchDog 内部计数器的计数初值。</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>wdg_load</name>
              <description>计数初值。当 WatchDog 正在运行时向此寄存器写入数据，计数器马上从新值开始重新计数。
WatchDog 加载此寄存器的值还可以通过：
计数值递减到 0；
重新使能 WDG_CONTROL[wdgen]信号；
写入 WDG_INTCLR 清除中断。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_VALUE</name>
          <displayName>WDG_VALUE</displayName>
          <description>计数器当前值寄存器。用来读出 WatchDog 内部计数器的当前计数值。</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>wdogvalue</name>
              <description>WatchDog 计数器当前值。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_CONTROL</name>
          <displayName>WDG_CONTROL</displayName>
          <description>为控制寄存器。用来控制 WatchDog 的打开/关闭、中断和复位功能。</description>
          <addressOffset>0x0008</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>resen</name>
              <description>WatchDog 复位信号输出使能。
0：禁止；
1：使能。
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
            <field>
              <name>wdgen</name>
              <description>WatchDog 使能。
0：计数器停止计数，计数值保持当前值不变，WatchDog 被关闭；
1：既启动计数器又使能中断，WatchDog被启动。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_INTCLR</name>
          <displayName>WDG_INTCLR</displayName>
          <description>中断清除寄存器。用来清除 WatchDog 中断，使 WatchDog 重新载入初值进行计数。本寄存器是只写寄存器，写进去任意值，都会引起 WatchDog 清中断，内部并不记忆写入的值，无复位值。</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>wdg_intclr</name>
              <description>对该寄存器写入任意值均可清除 WatchDog 的中断，并使 WatchDog 从寄存器 WDG_LOAD 中重新载入初值计数。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_RIS</name>
          <displayName>WDG_RIS</displayName>
          <description>原始中断寄存器。用来反映 WatchDog 原始中断状态。</description>
          <addressOffset>0x010</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdogris</name>
              <description>WatchDog 原始中断状态，当计数器的计数值递减到 0 时，该位置 1。
0：未产生中断；
1：已产生中断。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_MIS</name>
          <displayName>WDG_MIS</displayName>
          <description>屏蔽后中断寄存器。用来反映屏蔽后的 WatchDog 中断状态。</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>reserved</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>wdogmis</name>
              <description>WatchDog 屏蔽后的中断状态。
0：未产生中断或者中断被屏蔽；
1：已产生中断。
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_LOCK</name>
          <displayName>WDG_LOCK</displayName>
          <description>LOCK 寄存器。用来控制 WatchDog 寄存器的写权限。在芯片上电或复位后，WDG_LOCK 默认为打开所有寄存器写权限的状态，此时可以对所有寄存器进行写入。</description>
          <addressOffset>0xC00</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>wdg_lock</name>
              <description>向该寄存器写入 0x1ACC_E551，可打开所有寄存器的写权限；
向该寄存器写入其他值则关闭写权限。
读该寄存器返回加锁的状态而不是写入该寄存器的值：
0x0000_0000：允许写访问（未加锁）；
0x0000_0001：禁止写访问（已加锁）。</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
              <modifiedWriteValues>modify</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="WDG">
      <name>IWDG</name>
      <baseAddress>0x14401000</baseAddress>
    </peripheral>
  </peripherals>
</device>
